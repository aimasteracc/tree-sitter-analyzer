name: README Statistics Check (Improved)

on:
  pull_request:
    paths:
      - 'README*.md'
      - 'pyproject.toml'
      - 'examples/*.java'
      - 'tree_sitter_analyzer/**/*.py'
      - 'scripts/update_readme_stats.py'
      - 'scripts/improved_readme_updater.py'
      - 'scripts/readme_config.py'
  push:
    branches: [ main, develop ]
    paths:
      - 'README*.md'
      - 'pyproject.toml'
      - 'examples/*.java'

jobs:
  check-readme-stats:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: |
        uv sync --extra all --extra mcp

    - name: Validate README content first
      run: |
        echo "üîç Validating README content structure..."
        uv run python scripts/improved_readme_updater.py --validate-only

    - name: Check if README statistics are up to date (dry-run)
      run: |
        echo "üîç Checking if README statistics need updates..."

        # Run in dry-run mode to see what would change
        uv run python scripts/improved_readme_updater.py --dry-run --verbose > dry_run_output.txt 2>&1

        # Show the dry-run results
        cat dry_run_output.txt

        # Check if any files would be updated
        if grep -q "Would update" dry_run_output.txt; then
          echo ""
          echo "‚ùå README statistics are outdated!"
          echo "The following files need updates:"
          grep "Would update" dry_run_output.txt
          echo ""
          echo "Please run: uv run python scripts/improved_readme_updater.py"
          echo "Or use the legacy script: uv run python scripts/update_readme_stats.py"
          exit 1
        else
          echo "‚úÖ All README statistics are up to date!"
        fi

    - name: Test README update script functionality
      run: |
        echo "üß™ Testing README update script functionality..."

        # Create backup copies
        cp README_zh.md README_zh.md.backup
        cp README.md README.md.backup
        cp README_ja.md README_ja.md.backup

        # Run the update script
        uv run python scripts/improved_readme_updater.py --verbose

        # Check if files were actually modified (they shouldn't be if stats are current)
        if ! diff -q README_zh.md README_zh.md.backup > /dev/null; then
          echo "‚ö†Ô∏è  README_zh.md was modified during test run"
          echo "This suggests the statistics were actually outdated"
          diff README_zh.md.backup README_zh.md || true
        fi

        if ! diff -q README.md README.md.backup > /dev/null; then
          echo "‚ö†Ô∏è  README.md was modified during test run"
          echo "This suggests the statistics were actually outdated"
          diff README.md.backup README.md || true
        fi

        if ! diff -q README_ja.md README_ja.md.backup > /dev/null; then
          echo "‚ö†Ô∏è  README_ja.md was modified during test run"
          echo "This suggests the statistics were actually outdated"
          diff README_ja.md.backup README_ja.md || true
        fi

        # Restore original files
        mv README_zh.md.backup README_zh.md
        mv README.md.backup README.md
        mv README_ja.md.backup README_ja.md

        echo "‚úÖ README update script test completed!"

    - name: Validate final README content
      run: |
        echo "üîç Final validation of README content..."

        # Check all README files have required elements
        for readme in README_zh.md README.md README_ja.md; do
          echo "Checking $readme..."

          # Check test count badge
          if ! grep -q "tests-[0-9]\+%20passed" "$readme"; then
            echo "‚ùå Test count badge missing in $readme"
            exit 1
          fi

          # Check coverage badge
          if ! grep -q "coverage-[0-9]\+\.[0-9]\+%25" "$readme"; then
            echo "‚ùå Coverage badge missing in $readme"
            exit 1
          fi

          # Check BigService statistics
          if ! grep -q "Lines: [0-9]\+" "$readme"; then
            echo "‚ùå BigService lines count missing in $readme"
            exit 1
          fi

          echo "‚úÖ $readme validation passed"
        done

        echo "‚úÖ All README files passed final validation!"

  # Optional: Auto-fix outdated statistics (commented out by default)
  # auto-fix-stats:
  #   runs-on: ubuntu-latest
  #   needs: check-readme-stats
  #   if: failure() && github.event_name == 'pull_request'
  #
  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       token: ${{ secrets.GITHUB_TOKEN }}
  #
  #   - name: Install uv
  #     uses: astral-sh/setup-uv@v3
  #     with:
  #       version: "latest"
  #
  #   - name: Set up Python
  #     run: uv python install 3.11
  #
  #   - name: Install dependencies
  #     run: uv sync --extra all --extra mcp
  #
  #   - name: Update README statistics
  #     run: |
  #       uv run python scripts/improved_readme_updater.py --verbose
  #
  #   - name: Commit updated README files
  #     run: |
  #       git config --local user.email "action@github.com"
  #       git config --local user.name "GitHub Action"
  #       git add README*.md
  #       git commit -m "Auto-update README statistics" || exit 0
  #       git push
