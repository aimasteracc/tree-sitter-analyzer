name: Hotfix Branch Automation

on:
  push:
    branches:
      - 'hotfix/*'
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --extra all --extra mcp

      - name: Run tests
        run: uv run pytest tests/ -v --tb=short --cov=tree_sitter_analyzer --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Install build dependencies
        run: uv add build twine --dev

      - name: Build package
        run: uv run python -m build

      - name: Check package
        run: uv run twine check dist/*

      - name: Deploy to PyPI
        run: uv run twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

  create-main-pr:
    needs: [test, build-and-deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request to main
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: hotfix-to-main
          title: "ðŸš¨ Hotfix: ${{ github.ref_name }}"
          body: |
            ## ðŸš¨ Hotfix: ${{ github.ref_name }}

            This PR was automatically created from the hotfix branch after successful:

            - âœ… All tests passed
            - âœ… PyPI deployment completed
            - âœ… Package built and validated

            ### ðŸš¨ Hotfix Details
            - **Branch**: ${{ github.ref_name }}
            - **Type**: Critical bug fix
            - **Status**: Ready for immediate production deployment

            ### ðŸš€ Deployment
            - PyPI package published successfully
            - All quality checks passed
            - Ready for merge to main branch

            ---
            *Auto-generated by GitHub Actions*
          delete-branch: true
          commit-message: "fix: Hotfix ${{ github.ref_name }} to main"
