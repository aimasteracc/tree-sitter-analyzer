=== MCP-001 ===
result.success: True

=== MCP-002 ===
result.success: True

=== MCP-003 ===
result.success: True
result.table_output: ================================================================================
CODE STRUCTURE ANALYSIS
================================================================================

PACKAGES (1)
----------------------------------------
  com.example.service
    Lines: 1-1
    Language: java


FUNCTIONS (66)
----------------------------------------
  BigService
    Lines: 33-39
    Language: java
    Visibility: public
    Return Type: void

  initializeService
    Lines: 44-50
    Language: java
    Visibility: private
    Return Type: void

  loadConfiguration
    Lines: 55-65
    Language: java
    Visibility: private
    Return Type: void

  setupDatabaseConnection
    Lines: 70-77
    Language: java
    Visibility: private
    Return Type: void

  validateSystemRequirements
    Lines: 82-88
    Language: java
    Visibility: private
    Return Type: void

  checkMemoryUsage
    Lines: 93-106
    Language: java
    Visibility: private
    Return Type: void

  checkDiskSpace
    Lines: 111-117
    Language: java
    Visibility: private
    Return Type: void

  checkNetworkConnectivity
    Lines: 122-136
    Language: java
    Visibility: private
    Return Type: void

  authenticateUser
    Lines: 141-172
    Language: java
    Visibility: public
    Parameters: String username, String password
    Return Type: boolean

  createSession
    Lines: 177-199
    Language: java
    Visibility: public
    Parameters: String username
    Return Type: String

  validateData
    Lines: 204-246
    Language: java
    Visibility: public
    Parameters: Map<String, Object> data
    Return Type: boolean

  validateEmail
    Lines: 251-254
    Language: java
    Visibility: private
    Parameters: String email
    Return Type: boolean

  validatePhoneNumber
    Lines: 259-262
    Language: java
    Visibility: private
    Parameters: String phone
    Return Type: boolean

  validateDate
    Lines: 267-275
    Language: java
    Visibility: private
    Parameters: String date
    Return Type: boolean

  logOperation
    Lines: 280-290
    Language: java
    Visibility: public
    Parameters: String operation, String details
    Return Type: void

  manageCache
    Lines: 295-308
    Language: java
    Visibility: public
    Parameters: String key, Object value
    Return Type: void

  cleanupCache
    Lines: 313-326
    Language: java
    Visibility: private
    Return Type: void

  updateCacheStatistics
    Lines: 331-335
    Language: java
    Visibility: private
    Return Type: void

  calculateCacheHitRatio
    Lines: 340-343
    Language: java
    Visibility: private
    Return Type: double

  performBackup
    Lines: 348-367
    Language: java
    Visibility: public
    Parameters: String backupType
    Return Type: void

  performFullBackup
    Lines: 372-395
    Language: java
    Visibility: private
    Return Type: void

  performIncrementalBackup
    Lines: 400-414
    Language: java
    Visibility: private
    Return Type: void

  performDifferentialBackup
    Lines: 419-433
    Language: java
    Visibility: private
    Return Type: void

  generateReport
    Lines: 438-471
    Language: java
    Visibility: public
    Parameters: String reportType, Map<String, Object> parameters
    Return Type: void

  prepareReportData
    Lines: 476-490
    Language: java
    Visibility: private
    Parameters: String reportType, Map<String, Object> parameters
    Return Type: void

  generateSalesReport
    Lines: 495-513
    Language: java
    Visibility: private
    Parameters: Map<String, Object> parameters
    Return Type: void

  generatePerformanceReport
    Lines: 518-534
    Language: java
    Visibility: private
    Parameters: Map<String, Object> parameters
    Return Type: void

  generateUserActivityReport
    Lines: 539-553
    Language: java
    Visibility: private
    Parameters: Map<String, Object> parameters
    Return Type: void

  generateSystemHealthReport
    Lines: 558-574
    Language: java
    Visibility: private
    Parameters: Map<String, Object> parameters
    Return Type: void

  finalizeReport
    Lines: 579-593
    Language: java
    Visibility: private
    Parameters: String reportType
    Return Type: void

  updateCustomerName
    Lines: 601-617
    Language: java
    Visibility: public
    Parameters: String customerId, String newName
    Return Type: void

  getCustomerInfo
    Lines: 622-652
    Language: java
    Visibility: public
    Parameters: String customerId
    Return Type: Map<String, Object>

  deleteCustomer
    Lines: 657-691
    Language: java
    Visibility: public
    Parameters: String customerId
    Return Type: boolean

  processOrder
    Lines: 696-736
    Language: java
    Visibility: public
    Parameters: String customerId, List<String> items, double totalAmount
    Return Type: String

  manageInventory
    Lines: 741-773
    Language: java
    Visibility: public
    Parameters: String action, String itemId, int quantity
    Return Type: void

  addInventory
    Lines: 778-792
    Language: java
    Visibility: private
    Parameters: String itemId, int quantity
    Return Type: void

  removeInventory
    Lines: 797-811
    Language: java
    Visibility: private
    Parameters: String itemId, int quantity
    Return Type: void

  updateInventory
    Lines: 816-830
    Language: java
    Visibility: private
    Parameters: String itemId, int quantity
    Return Type: void

  checkInventory
    Lines: 835-850
    Language: java
    Visibility: private
    Parameters: String itemId
    Return Type: void

  sendNotification
    Lines: 855-884
    Language: java
    Visibility: public
    Parameters: String recipient, String message, String type
    Return Type: void

  shutdownSystem
    Lines: 889-912
    Language: java
    Visibility: public
    Return Type: void

  savePendingOperations
    Lines: 917-926
    Language: java
    Visibility: private
    Return Type: void

  closeDatabaseConnections
    Lines: 931-940
    Language: java
    Visibility: private
    Return Type: void

  finalizeSystemLogs
    Lines: 945-953
    Language: java
    Visibility: private
    Return Type: void

  handleError
    Lines: 958-977
    Language: java
    Visibility: public
    Parameters: Exception error, String context
    Return Type: void

  handleDatabaseError
    Lines: 982-996
    Language: java
    Visibility: private
    Parameters: SQLException error
    Return Type: void

  handleValidationError
    Lines: 1001-1009
    Language: java
    Visibility: private
    Parameters: IllegalArgumentException error
    Return Type: void

  handleRuntimeError
    Lines: 1014-1028
    Language: java
    Visibility: private
    Parameters: RuntimeException error
    Return Type: void

  handleGenericError
    Lines: 1033-1041
    Language: java
    Visibility: private
    Parameters: Exception error
    Return Type: void

  monitorPerformance
    Lines: 1046-1067
    Language: java
    Visibility: public
    Return Type: void

  monitorCpuUsage
    Lines: 1072-1086
    Language: java
    Visibility: private
    Return Type: void

  monitorMemoryUsage
    Lines: 1091-1112
    Language: java
    Visibility: private
    Return Type: void

  monitorDiskIO
    Lines: 1117-1131
    Language: java
    Visibility: private
    Return Type: void

  monitorNetworkUsage
    Lines: 1136-1150
    Language: java
    Visibility: private
    Return Type: void

  performSecurityCheck
    Lines: 1155-1171
    Language: java
    Visibility: public
    Return Type: void

  checkAccessPermissions
    Lines: 1176-1192
    Language: java
    Visibility: private
    Return Type: void

  validateSecuritySettings
    Lines: 1197-1211
    Language: java
    Visibility: private
    Return Type: void

  performVulnerabilityScan
    Lines: 1216-1230
    Language: java
    Visibility: private
    Return Type: void

  reviewSecurityLogs
    Lines: 1235-1249
    Language: java
    Visibility: private
    Return Type: void

  synchronizeData
    Lines: 1254-1283
    Language: java
    Visibility: public
    Parameters: String sourceSystem, String targetSystem
    Return Type: void

  prepareSynchronization
    Lines: 1288-1302
    Language: java
    Visibility: private
    Parameters: String sourceSystem, String targetSystem
    Return Type: void

  extractData
    Lines: 1307-1323
    Language: java
    Visibility: private
    Parameters: String sourceSystem
    Return Type: void

  transformData
    Lines: 1328-1342
    Language: java
    Visibility: private
    Return Type: void

  loadData
    Lines: 1347-1361
    Language: java
    Visibility: private
    Parameters: String targetSystem
    Return Type: void

  verifySynchronization
    Lines: 1366-1380
    Language: java
    Visibility: private
    Parameters: String sourceSystem, String targetSystem
    Return Type: void

  main
    Lines: 1385-1418
    Language: java
    Visibility: public
    Parameters: String[] args
    Return Type: void


CLASSS (1)
----------------------------------------
  BigService
    Lines: 17-1419
    Language: java
    Visibility: public


VARIABLES (9)
----------------------------------------
  DEFAULT_ENCODING
    Lines: 19-19
    Language: java
    Visibility: private

  MAX_RETRY_COUNT
    Lines: 20-20
    Language: java
    Visibility: private

  TIMEOUT_MILLISECONDS
    Lines: 21-21
    Language: java
    Visibility: private

  DATE_FORMAT
    Lines: 22-22
    Language: java
    Visibility: private

  dataSource
    Lines: 24-24
    Language: java
    Visibility: private

  configurationCache
    Lines: 25-25
    Language: java
    Visibility: private

  activeConnections
    Lines: 26-26
    Language: java
    Visibility: private

  validatedUsers
    Lines: 27-27
    Language: java
    Visibility: private

  pendingOperations
    Lines: 28-28
    Language: java
    Visibility: private


IMPORTS (8)
----------------------------------------
  java.util
    Lines: 3-3
    Language: java

  java.time.LocalDateTime
    Lines: 4-4
    Language: java

  java.time.format.DateTimeFormatter
    Lines: 5-5
    Language: java

  java.sql.Connection
    Lines: 6-6
    Language: java

  java.sql.PreparedStatement
    Lines: 7-7
    Language: java

  java.sql.ResultSet
    Lines: 8-8
    Language: java

  java.sql.SQLException
    Lines: 9-9
    Language: java

  javax.sql.DataSource
    Lines: 10-10
    Language: java

=== MCP-004 ===
result.success: True
result.table_output: [
  {
    "name": "com.example",
    "type": "package",
    "start_line": 1,
    "end_line": 1,
    "language": "java"
  },
  {
    "name": "abstractMethod",
    "type": "function",
    "start_line": 9,
    "end_line": 9,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "package",
    "modifiers": [
      "abstract"
    ]
  },
  {
    "name": "concreteMethod",
    "type": "function",
    "start_line": 12,
    "end_line": 14,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "package",
    "modifiers": []
  },
  {
    "name": "ParentClass",
    "type": "function",
    "start_line": 26,
    "end_line": 28,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "public",
    "modifiers": [
      "public"
    ]
  },
  {
    "name": "staticParentMethod",
    "type": "function",
    "start_line": 31,
    "end_line": 33,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "package",
    "modifiers": [
      "static"
    ]
  },
  {
    "name": "abstractMethod",
    "type": "function",
    "start_line": 36,
    "end_line": 39,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "package",
    "modifiers": []
  },
  {
    "name": "parentMethod",
    "type": "function",
    "start_line": 42,
    "end_line": 44,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "package",
    "modifiers": []
  },
  {
    "name": "doSomething",
    "type": "function",
    "start_line": 53,
    "end_line": 53,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "package",
    "modifiers": []
  },
  {
    "name": "defaultMethod",
    "type": "function",
    "start_line": 56,
    "end_line": 58,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "package",
    "modifiers": []
  },
  {
    "name": "staticInterfaceMethod",
    "type": "function",
    "start_line": 61,
    "end_line": 63,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "package",
    "modifiers": [
      "static"
    ]
  },
  {
    "name": "anotherMethod",
    "type": "function",
    "start_line": 68,
    "end_line": 68,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "package",
    "modifiers": []
  },
  {
    "name": "innerMethod",
    "type": "function",
    "start_line": 84,
    "end_line": 86,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "public",
    "modifiers": [
      "public"
    ]
  },
  {
    "name": "nestedMethod",
    "type": "function",
    "start_line": 91,
    "end_line": 93,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "public",
    "modifiers": [
      "public"
    ]
  },
  {
    "name": "Test",
    "type": "function",
    "start_line": 97,
    "end_line": 100,
    "language": "java",
    "parameters": [
      "int value"
    ],
    "return_type": "void",
    "visibility": "public",
    "modifiers": [
      "public"
    ]
  },
  {
    "name": "Test",
    "type": "function",
    "start_line": 103,
    "end_line": 105,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "public",
    "modifiers": [
      "public"
    ]
  },
  {
    "name": "getValue",
    "type": "function",
    "start_line": 108,
    "end_line": 110,
    "language": "java",
    "parameters": [],
    "return_type": "String",
    "visibility": "public",
    "modifiers": [
      "public"
    ]
  },
  {
    "name": "setValue",
    "type": "function",
    "start_line": 113,
    "end_line": 115,
    "language": "java",
    "parameters": [
      "int value"
    ],
    "return_type": "void",
    "visibility": "protected",
    "modifiers": [
      "protected"
    ]
  },
  {
    "name": "packageMethod",
    "type": "function",
    "start_line": 118,
    "end_line": 120,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "package",
    "modifiers": []
  },
  {
    "name": "privateMethod",
    "type": "function",
    "start_line": 123,
    "end_line": 125,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "private",
    "modifiers": [
      "private"
    ]
  },
  {
    "name": "staticMethod",
    "type": "function",
    "start_line": 128,
    "end_line": 130,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "public",
    "modifiers": [
      "public",
      "static"
    ]
  },
  {
    "name": "finalMethod",
    "type": "function",
    "start_line": 133,
    "end_line": 135,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "public",
    "modifiers": [
      "public",
      "final"
    ]
  },
  {
    "name": "doSomething",
    "type": "function",
    "start_line": 138,
    "end_line": 141,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "public",
    "modifiers": [
      "public"
    ]
  },
  {
    "name": "anotherMethod",
    "type": "function",
    "start_line": 143,
    "end_line": 146,
    "language": "java",
    "parameters": [],
    "return_type": "void",
    "visibility": "public",
    "modifiers": [
      "public"
    ]
  },
  {
    "name": "genericMethod",
    "type": "function",
    "start_line": 149,
    "end_line": 151,
    "language": "java",
    "parameters": [
      "T input"
    ],
    "return_type": "void",
    "visibility": "public",
    "modifiers": [
      "public"
    ]
  },
  {
    "name": "createList",
    "type": "function",
    "start_line": 154,
    "end_line": 158,
    "language": "java",
    "parameters": [
      "T item"
    ],
    "return_type": "List<T>",
    "visibility": "public",
    "modifiers": [
      "public"
    ]
  },
  {
    "name": "AbstractParentClass",
    "type": "class",
    "start_line": 7,
    "end_line": 15,
    "language": "java",
    "visibility": "package",
    "modifiers": [
      "abstract"
    ]
  },
  {
    "name": "ParentClass",
    "type": "class",
    "start_line": 18,
    "end_line": 45,
    "language": "java",
    "visibility": "package",
    "modifiers": []
  },
  {
    "name": "TestInterface",
    "type": "class",
    "start_line": 48,
    "end_line": 64,
    "language": "java",
    "visibility": "package",
    "modifiers": []
  },
  {
    "name": "AnotherInterface",
    "type": "class",
    "start_line": 67,
    "end_line": 69,
    "language": "java",
    "visibility": "package",
    "modifiers": []
  },
  {
    "name": "Test",
    "type": "class",
    "start_line": 72,
    "end_line": 159,
    "language": "java",
    "visibility": "public",
    "modifiers": [
      "public"
    ]
  },
  {
    "name": "InnerClass",
    "type": "class",
    "start_line": 83,
    "end_line": 87,
    "language": "java",
    "visibility": "public",
    "modifiers": [
      "public"
    ]
  },
  {
    "name": "StaticNestedClass",
    "type": "class",
    "start_line": 90,
    "end_line": 94,
    "language": "java",
    "visibility": "public",
    "modifiers": [
      "public",
      "static"
    ]
  },
  {
    "name": "TestEnum",
    "type": "class",
    "start_line": 162,
    "end_line": 178,
    "language": "java",
    "visibility": "package",
    "modifiers": []
  },
  {
    "name": "CONSTANT",
    "type": "variable",
    "start_line": 20,
    "end_line": 20,
    "language": "java",
    "visibility": "package",
    "modifiers": [
      "static",
      "final"
    ]
  },
  {
    "name": "parentField",
    "type": "variable",
    "start_line": 23,
    "end_line": 23,
    "language": "java",
    "visibility": "protected",
    "modifiers": [
      "protected"
    ]
  },
  {
    "name": "value",
    "type": "variable",
    "start_line": 74,
    "end_line": 74,
    "language": "java",
    "visibility": "private",
    "modifiers": [
      "private"
    ]
  },
  {
    "name": "staticValue",
    "type": "variable",
    "start_line": 77,
    "end_line": 77,
    "language": "java",
    "visibility": "public",
    "modifiers": [
      "public",
      "static"
    ]
  },
  {
    "name": "finalField",
    "type": "variable",
    "start_line": 80,
    "end_line": 80,
    "language": "java",
    "visibility": "private",
    "modifiers": [
      "private",
      "final"
    ]
  },
  {
    "name": "java.util.List",
    "type": "import",
    "start_line": 3,
    "end_line": 3,
    "language": "java"
  },
  {
    "name": "java.util.ArrayList",
    "type": "import",
    "start_line": 4,
    "end_line": 4,
    "language": "java"
  }
]

=== MCP-005 ===
success: True
result.language: javascript
result.file_path: examples/ModernJavaScript.js
result.success: True
result.message: None
result.stderr: None
result.format_type: html
result.error: None
result.stdout: None
result.table_output: # HTML Structure Analysis

## Other Elements

| Type | Name | Lines | Language |
|------|------|-------|----------|
| function | loadModule | 16-19 | javascript |
| function | constructor | 49-53 | javascript |
| function | createInstance | 56-58 | javascript |
| function | validateProps | 60-62 | javascript |
| function | displayTitle | 65-67 | javascript |
| function | displayTitle | 69-71 | javascript |
| function | fetchData | 74-94 | javascript |
| function | None | 97-100 | javascript |
| function | None | 102-104 | javascript |
| function | generateSequence | 131-135 | javascript |
| function | processData | 138-166 | javascript |
| function | render | 169-199 | javascript |
| function | traditionalFunction | 203-205 | javascript |
| function | fetchUserData | 208-211 | javascript |
| function | fibonacciSequence | 214-223 | javascript |
| function | simpleArrow | 226-226 | javascript |
| function | multiParamArrow | 227-227 | javascript |
| function | blockArrow | 228-233 | javascript |
| function | fetchAndProcess | 236-245 | javascript |
| function | createCounter | 248-257 | javascript |
| function | processUser | 260-276 | javascript |
| function | createMessage | 279-287 | javascript |
| function | html | 290-304 | javascript |
| function | get | 312-325 | javascript |
| function | None | 328-337 | javascript |
| function | getHeaders | 339-344 | javascript |
| function | getToken | 346-348 | javascript |
| function | handleResponse | 350-362 | javascript |
| function | setupEventListeners | 366-388 | javascript |
| function | handleAction | 391-417 | javascript |
| function | useCounter | 456-472 | javascript |
| function | FunctionalComponent | 475-529 | javascript |
| class | ModernComponent | 31-200 | javascript |
| variable | API_BASE_URL | 22-22 | javascript |
| variable | globalCounter | 23-23 | javascript |
| variable | legacyVariable | 24-24 | javascript |
| variable | userProfile | 27-27 | javascript |
| variable | arrayData | 28-28 | javascript |
| variable | options | 139-139 | javascript |
| variable | result | 140-140 | javascript |
| variable | user | 209-209 | javascript |
| variable | apiClient | 307-363 | javascript |
| variable | url | 313-313 | javascript |
| variable | response | 318-322 | javascript |
| variable | contentType | 356-356 | javascript |
| variable | AppModule | 420-453 | javascript |
| import | debounce | 12-12 | javascript |
| import | useCallback | 13-13 | javascript |
result.metadata: {'classes_count': 1, 'methods_count': 32, 'fields_count': 13, 'total_lines': 554}

=== MCP-006 ===
result.content_length: 471
result.file_path: examples/Sample.java
result.success: True
result.lines_extracted: 20
result.range: {'start_line': 1, 'end_line': 20, 'start_column': None, 'end_column': None}

=== MCP-007 ===
result.content_length: 1312
result.file_path: examples/BigService.java
result.success: True
result.partial_content_result: {'lines': ['import javax.sql.DataSource;', '', '/**', ' * BigService - Large-scale business service class', ' * This class contains various business logic.', ' * Contains approximately 1000 lines of code for demonstration purposes.', ' */', 'public class BigService {', '', '    private static final String DEFAULT_ENCODING = "UTF-8";', '    private static final int MAX_RETRY_COUNT = 3;', '    private static final long TIMEOUT_MILLISECONDS = 30000;', '    private static final String DATE_FORMAT = "yyyy-MM-dd HH:mm:ss";', '', '    private DataSource dataSource;', '    private Map<String, Object> configurationCache;', '    private List<String> activeConnections;', '    private Set<String> validatedUsers;', '    private Queue<String> pendingOperations;', '', '    /**', '     * Constructor', '     */', '    public BigService() {', '        this.configurationCache = new HashMap<>();', '        this.activeConnections = new ArrayList<>();', '        this.validatedUsers = new HashSet<>();', '        this.pendingOperations = new LinkedList<>();', '        initializeService();', '    }', '', '    /**', '     * Service initialization', '     */', '    private void initializeService() {', '        System.out.println("Initializing BigService...");', '        loadConfiguration();', '        setupDatabaseConnection();', '        validateSystemRequirements();', '        System.out.println("BigService initialization completed.");', '    }'], 'metadata': {'file_path': 'examples/BigService.java', 'range': {'start_line': 10, 'end_line': 50, 'start_column': None, 'end_column': None}, 'content_length': 1312, 'lines_count': 41}}
result.lines_extracted: 41
result.range: {'start_line': 10, 'end_line': 50, 'start_column': None, 'end_column': None}

=== MCP-008 ===
result.results: [{'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 9, 'end_line': 9, 'content': 'abstract void abstractMethod();'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 12, 'end_line': 14, 'content': 'void concreteMethod() {\n        System.out.println("Concrete method in abstract class");\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 31, 'end_line': 33, 'content': 'static void staticParentMethod() {\n        System.out.println("Static parent method");\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 36, 'end_line': 39, 'content': '@Override\n    void abstractMethod() {\n        System.out.println("Implementation of abstract method");\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 42, 'end_line': 44, 'content': 'void parentMethod() {\n        System.out.println("Parent method");\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 53, 'end_line': 53, 'content': 'void doSomething();'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 56, 'end_line': 58, 'content': 'default void defaultMethod() {\n        System.out.println("Default method in interface");\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 61, 'end_line': 63, 'content': 'static void staticInterfaceMethod() {\n        System.out.println("Static method in interface");\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 68, 'end_line': 68, 'content': 'void anotherMethod();'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 84, 'end_line': 86, 'content': 'public void innerMethod() {\n            System.out.println("Inner class method, value: " + value);\n        }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 91, 'end_line': 93, 'content': 'public void nestedMethod() {\n            System.out.println("Static nested class method");\n        }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 108, 'end_line': 110, 'content': 'public String getValue() {\n        return "Value: " + value;\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 113, 'end_line': 115, 'content': 'protected void setValue(int value) {\n        this.value = value;\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 118, 'end_line': 120, 'content': 'void packageMethod() {\n        System.out.println("Package method");\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 123, 'end_line': 125, 'content': 'private void privateMethod() {\n        System.out.println("Private method");\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 128, 'end_line': 130, 'content': 'public static void staticMethod() {\n        System.out.println("Static method");\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 133, 'end_line': 135, 'content': 'public final void finalMethod() {\n        System.out.println("This method cannot be overridden");\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 138, 'end_line': 141, 'content': '@Override\n    public void doSomething() {\n        System.out.println("Implementation of TestInterface method");\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 143, 'end_line': 146, 'content': '@Override\n    public void anotherMethod() {\n        System.out.println("Implementation of AnotherInterface method");\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 149, 'end_line': 151, 'content': 'public <T> void genericMethod(T input) {\n        System.out.println("Generic input: " + input);\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 154, 'end_line': 158, 'content': 'public <T> List<T> createList(T item) {\n        List<T> list = new ArrayList<>();\n        list.add(item);\n        return list;\n    }'}, {'capture_name': 'method', 'node_type': 'method_declaration', 'start_line': 175, 'end_line': 177, 'content': 'public String getDescription() {\n        return description;\n    }'}]

=== MCP-009 ===
(同一)

=== MCP-010 ===
(同一)

=== MCP-011 ===
(同一)

=== MCP-012 ===
(同一)

=== MCP-013 ===
result.results: [{'path': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'is_dir': False, 'size_bytes': 7265, 'mtime': 1760636622, 'ext': 'py'}, {'path': 'C:\\git-public\\tree-sitter-analyzer\\examples\\calculate_token_comparison.py', 'is_dir': False, 'size_bytes': 9598, 'mtime': 1759760114, 'ext': 'py'}, {'path': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'is_dir': False, 'size_bytes': 16538, 'mtime': 1760636622, 'ext': 'py'}, {'path': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_demo.py', 'is_dir': False, 'size_bytes': 4788, 'mtime': 1760636622, 'ext': 'py'}, {'path': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_factory_demo.py', 'is_dir': False, 'size_bytes': 8454, 'mtime': 1760636622, 'ext': 'py'}, {'path': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'is_dir': False, 'size_bytes': 9647, 'mtime': 1760636623, 'ext': 'py'}, {'path': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'is_dir': False, 'size_bytes': 25457, 'mtime': 1760636623, 'ext': 'py'}, {'path': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'is_dir': False, 'size_bytes': 8798, 'mtime': 1759760114, 'ext': 'py'}, {'path': 'C:\\git-public\\tree-sitter-analyzer\\examples\\suppress_output_demo.py', 'is_dir': False, 'size_bytes': 5351, 'mtime': 1760636623, 'ext': 'py'}, {'path': 'C:\\git-public\\tree-sitter-analyzer\\examples\\total_only_optimization_demo.py', 'is_dir': False, 'size_bytes': 5919, 'mtime': 1759760114, 'ext': 'py'}]

=== MCP-014 ===
(同一)

=== MCP-015 ===
(同一)

=== MCP-016 ===
(同一)

=== MCP-017 ===
result.meta.rg_elapsed_ms: 338
result.meta.fd_elapsed_ms: 312

=== MCP-018 ===
result.meta.rg_elapsed_ms: 427
result.meta.fd_elapsed_ms: 314

=== MCP-019 ===
result.results: [{'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 12, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 13, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 15, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 17, 'text': 'import psutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 18, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 101, 'text': 'lines.append("from typing import Any, Dict, List, Optional")', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 9, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 13, 'text': 'from tree_sitter_analyzer.plugins.base import LanguagePlugin', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 14, 'text': 'from tree_sitter_analyzer.plugins.manager import PluginManager', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 38, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 114, 'text': 'with patch("importlib.metadata.entry_points") as mock_iter:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 130, 'text': 'with patch("importlib.metadata.entry_points") as mock_iter:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 145, 'text': 'patch("importlib.util.spec_from_file_location") as mock_spec,', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 146, 'text': 'patch("importlib.util.module_from_spec") as mock_module,', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 395, 'text': 'def test_load_plugins_with_import_error(', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 398, 'text': '"""Test plugin loading with import errors"""', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 399, 'text': 'with patch("importlib.metadata.entry_points") as mock_iter:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 400, 'text': 'mock_iter.side_effect = ImportError("pkg_resources not available")', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 404, 'text': '# Should handle import errors gracefully', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 415, 'text': 'with patch("importlib.metadata.entry_points") as mock_iter:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 8, 'text': 'from tree_sitter_analyzer.formatters.python_formatter import PythonTableFormatter', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 52, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 65, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 103, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 140, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 161, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 183, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 211, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 244, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 281, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 312, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 342, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 362, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 383, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 502, 'text': 'def test_extract_module_docstring_with_imports_before(self, formatter):', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 503, 'text': '"""Test extracting module docstring with imports before it."""', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 505, 'text': '"source_code": """import os', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 506, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 507, 'text': "'''Module docstring after imports.'''", 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 514, 'text': 'assert result == "Module docstring after imports."', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 592, 'text': 'def test_format_decorators_mixed_important_and_custom(self, formatter):', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 593, 'text': '"""Test formatting mix of important and custom decorators."""', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 625, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 649, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 683, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_query.py', 'line': 9, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_query.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_query.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.query import QueryExecutor', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 8, 'text': 'from tree_sitter_analyzer.formatters.python_formatter import PythonTableFormatter', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 93, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 94, 'text': '{"name": "math", "module_name": "", "raw_text": "import math"},', 'matches': [[65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 98, 'text': '"raw_text": "from math import sqrt",', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 102, 'text': '"source_code": \'"""Calculator module for basic arithmetic operations."""\\n\\nimport math\\nfrom math import sqrt\\n\\nclass Calculator:\\n """A simple calculator class."""\\n precision = 2\\n \\n def add(self, a: int, b: int) -> int:\\n """Add two numbers."""\\n return a + b\',', 'matches': [[88, 94], [111, 117]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 145, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 158, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 173, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 187, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 195, 'text': 'def test_full_format_imports_section(self, formatter):', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 196, 'text': '"""Test full format imports section."""', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 201, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 202, 'text': '{"raw_text": "import os"},', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 203, 'text': '{"raw_text": "from typing import List"},', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 210, 'text': 'assert "## Imports" in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 212, 'text': 'assert "import os" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 213, 'text': 'assert "from typing import List" in result', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 214, 'text': 'assert "import json" in result # Fallback construction', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 240, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 264, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 281, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 315, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 735, 'text': 'data = {"source_code": "import os\\n\\nclass Test:\\n pass"}', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 763, 'text': 'def test_format_decorators_important(self, formatter):', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 764, 'text': '"""Test formatting important decorators."""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 778, 'text': 'def test_format_decorators_multiple_non_important(self, formatter):', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 779, 'text': '"""Test formatting multiple non-important decorators."""', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 798, 'text': '# Missing classes, functions, imports, etc.', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 812, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 841, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 874, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 905, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 924, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 969, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 9, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 10, 'text': 'from typing import TYPE_CHECKING', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 13, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 15, 'text': '# from ..models import (', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 18, 'text': 'from ..models import Class as ModelClass', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 19, 'text': 'from ..models import Function as ModelFunction', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 20, 'text': 'from ..models import Import as ModelImport', 'matches': [[14, 20], [21, 27], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 21, 'text': 'from ..models import Variable as ModelVariable', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 22, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 60, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 62, 'text': ') -> list[ModelImport]:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 63, 'text': '"""Extract import statements from the syntax tree"""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 64, 'text': 'log_warning("extract_imports not implemented in subclass")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 140, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 142, 'text': ') -> list[ModelImport]:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 143, 'text': '"""Basic import extraction implementation"""', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 144, 'text': 'imports: list[ModelImport] = []', 'matches': [[8, 14], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 147, 'text': '# Generic import extraction logic', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 148, 'text': 'self._traverse_for_imports(', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 149, 'text': 'tree.root_node, imports, source_code.splitlines()', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 152, 'text': 'log_error(f"Error in import extraction: {e}")', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 153, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 226, 'text': 'def _traverse_for_imports(', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 227, 'text': 'self, node: "tree_sitter.Node", imports: list[ModelImport], lines: list[str]', 'matches': [[40, 46], [59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 229, 'text': '"""Traverse tree to find import statements"""', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 230, 'text': 'if hasattr(node, "type") and "import" in node.type.lower():', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 232, 'text': 'imp = ModelImport(', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 241, 'text': 'imports.append(imp)', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 243, 'text': 'log_debug(f"Failed to extract import: {e}")', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 247, 'text': 'self._traverse_for_imports(child, imports, lines)', 'matches': [[35, 41], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 280, 'text': '# from .manager import PluginManager', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\update_readme_stats.py', 'line': 11, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\update_readme_stats.py', 'line': 12, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\update_readme_stats.py', 'line': 13, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\update_readme_stats.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 12, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 16, 'text': 'from tree_sitter_analyzer.core.parser import Parser, ParseResult', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 372, 'text': 'import java.util.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 373, 'text': 'import java.io.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 423, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 424, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 425, 'text': 'from typing import List, Dict, Optional, Union', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 426, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 427, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 6, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 10, 'text': 'from tree_sitter_analyzer.formatters.javascript_formatter import (', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 40, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 67, 'text': '"imports": [{"name": long_name, "source": long_name}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 84, 'text': '"imports": [{"name": special_chars, "source": special_chars}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 101, 'text': '"imports": [{"name": f"module{control_chars}", "source": "lib"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 329, 'text': 'import unicodedata', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 9, 'text': 'import importlib', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 10, 'text': 'import importlib.metadata', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 12, 'text': 'import pkgutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 14, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 16, 'text': 'from ..utils import log_debug, log_error, log_info, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 17, 'text': 'from .base import LanguagePlugin', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 68, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 86, 'text': 'entry_points = importlib.metadata.entry_points()', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 155, 'text': '# Import the languages package', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 159, 'text': 'languages_module = importlib.import_module(languages_package)', 'matches': [[35, 41], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 160, 'text': 'except ImportError as e:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 161, 'text': 'log_warning(f"Could not import languages package: {e}")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 172, 'text': '# Import the module', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 173, 'text': 'module = importlib.import_module(name)', 'matches': [[29, 35], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version_minimal.py', 'line': 16, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version_minimal.py', 'line': 17, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version_minimal.py', 'line': 18, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version_minimal.py', 'line': 19, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 9, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 13, 'text': 'from tree_sitter_analyzer.formatters.javascript_formatter import (', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 32, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 34, 'text': '"statement": "import React from \'react\';",', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 39, 'text': '"statement": "import { useState, useEffect } from \'react\';",', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 273, 'text': 'assert "## Imports" in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 283, 'text': 'assert "import React from \'react\';" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 293, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 305, 'text': 'def test_format_full_table_with_import_construction(self, formatter):', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 306, 'text': '"""Test import statement construction when statement is missing"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 309, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 325, 'text': 'assert "import React from \'react\';" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 331, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 732, 'text': 'def test_format_full_table_no_imports(self, formatter):', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 733, 'text': '"""Test full table formatting without imports"""', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 736, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 746, 'text': 'assert "## Imports" not in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 752, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 768, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 784, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 802, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 818, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 850, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 907, 'text': '"imports": None,', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 925, 'text': '"imports": "not_a_list", # Should be list', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1070, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1075, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1076, 'text': '{"name": f"import{i}", "source": f"module{i}"} for i in range(100)', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1109, 'text': '"imports": [{"name": "モジュール", "source": "ライブラリ"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1130, 'text': '"imports": [{"name": "module<>", "source": "lib|pipe"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1145, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1149, 'text': '"imports": [{"name": "test", "source": "module"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1172, 'text': 'import queue', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1173, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1177, 'text': '"imports": [{"name": "test", "source": "module"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1228, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1284, 'text': '"import_count": 5,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1315, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1393, 'text': '"import_count": 4,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 12, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 16, 'text': 'from tree_sitter_analyzer.core.engine import AnalysisEngine', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 17, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 279, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 320, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 321, 'text': 'from typing import List', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version.py', 'line': 10, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version.py', 'line': 159, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 10, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 11, 'text': 'from typing import TYPE_CHECKING, Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 14, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 16, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 17, 'text': 'from ..models import AnalysisResult', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 19, 'text': 'from ..models import Class as ModelClass', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 20, 'text': 'from ..models import CodeElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 21, 'text': 'from ..models import Function as ModelFunction', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 22, 'text': 'from ..models import Import as ModelImport', 'matches': [[14, 20], [21, 27], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 23, 'text': 'from ..models import Variable as ModelVariable', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 24, 'text': 'from ..utils import log_debug, log_error', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 86, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 88, 'text': ') -> list[ModelImport]:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 90, 'text': 'Extract import statements from the syntax tree.', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 97, 'text': 'List of extracted import objects', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 120, 'text': 'elements.extend(self.extract_imports(tree, source_code))', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 188, 'text': 'return ["function", "class", "variable", "import"]', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 318, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 320, 'text': ') -> list[ModelImport]:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 321, 'text': '"""Basic import extraction implementation."""', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 322, 'text': 'imports: list[ModelImport] = []', 'matches': [[8, 14], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 327, 'text': 'self._traverse_for_imports(tree.root_node, imports, lines, source_code)', 'matches': [[35, 41], [59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 329, 'text': 'log_error(f"Error in import extraction: {e}")', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 331, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 423, 'text': 'def _traverse_for_imports(', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 426, 'text': 'imports: list[ModelImport],', 'matches': [[8, 14], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 430, 'text': '"""Traverse tree to find import statements."""', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 431, 'text': 'if hasattr(node, "type") and self._is_import_node(node.type):', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 436, 'text': 'imp = ModelImport(', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 445, 'text': 'imports.append(imp)', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 447, 'text': 'log_debug(f"Failed to extract import: {e}")', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 451, 'text': 'self._traverse_for_imports(child, imports, lines, source_code)', 'matches': [[35, 41], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 492, 'text': 'def _is_import_node(self, node_type: str) -> bool:', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 493, 'text': '"""Check if a node type represents an import."""', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 494, 'text': 'import_types = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 495, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 496, 'text': '"import_declaration",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 498, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 503, 'text': 'return any(itype in node_type.lower() for itype in import_types)', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 563, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 564, 'text': 'from ..models import AnalysisResult', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 13, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 14, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 17, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 19, 'text': '# Import test targets', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 20, 'text': 'from tree_sitter_analyzer.core.cache_service import CacheEntry, CacheService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 237, 'text': 'from datetime import datetime, timedelta', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 256, 'text': 'from datetime import datetime, timedelta', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\__init__.py', 'line': 15, 'text': 'from tree_sitter_analyzer.queries import get_query, list_queries', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\__init__.py', 'line': 24, 'text': 'from ..query_loader import get_query, is_language_supported, list_queries, query_loader', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\run_phase7_integration_tests.py', 'line': 8, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\run_phase7_integration_tests.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\run_phase7_integration_tests.py', 'line': 10, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\run_phase7_integration_tests.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\run_phase7_integration_tests.py', 'line': 12, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\run_phase7_integration_tests.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_analysis_engine.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_analysis_engine.py', 'line': 18, 'text': '# Import test targets', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_analysis_engine.py', 'line': 19, 'text': 'from tree_sitter_analyzer.core.analysis_engine import (', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_analysis_engine.py', 'line': 74, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 11, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 12, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 15, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 18, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 21, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 24, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 25, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 26, 'text': 'from ..language_loader import loader', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 27, 'text': 'from ..models import AnalysisResult, Class, CodeElement, Function, Import, Variable', 'matches': [[14, 20], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 28, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 29, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 40, 'text': 'self.imports: list[str] = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 136, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 138, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 139, 'text': '"""Extract TypeScript import statements with ES6+ and type import support"""', 'matches': [[30, 36], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 143, 'text': 'imports: list[Import] = []', 'matches': [[8, 14], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 145, 'text': '# Extract imports efficiently', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 147, 'text': 'if child.type == "import_statement":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 148, 'text': 'import_info = self._extract_import_info_simple(child)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 149, 'text': 'if import_info:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 150, 'text': 'imports.append(import_info)', 'matches': [[20, 26], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 152, 'text': '# Check for dynamic imports', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 153, 'text': 'dynamic_import = self._extract_dynamic_import(child)', 'matches': [[24, 30], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 154, 'text': 'if dynamic_import:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 155, 'text': 'imports.append(dynamic_import)', 'matches': [[20, 26], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 158, 'text': 'commonjs_imports = self._extract_commonjs_requires(tree, source_code)', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 159, 'text': 'imports.extend(commonjs_imports)', 'matches': [[8, 14], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 161, 'text': 'log_debug(f"Extracted {len(imports)} TypeScript imports")', 'matches': [[35, 41], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 162, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 175, 'text': 'self.is_module = "import " in self.source_code or "export " in self.source_code', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 368, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1079, 'text': 'import re', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1153, 'text': 'def _extract_import_info_simple(self, node: "tree_sitter.Node") -> Import | None:', 'matches': [[17, 23], [71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1154, 'text': '"""Extract import information from import_statement node"""', 'matches': [[19, 25], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1191, 'text': '# Extract import details from AST structure', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1192, 'text': 'import_names = []', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1194, 'text': '# Check for type import (not used but kept for future reference)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1195, 'text': '# is_type_import = "type" in raw_text', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1200, 'text': 'if child.type == "import_clause":', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1201, 'text': 'import_names.extend(self._extract_import_names(child))', 'matches': [[24, 30], [58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1222, 'text': '# If no import names found but we have a mocked _extract_import_names, try calling it', 'matches': [[20, 26], [69, 75]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1223, 'text': 'if not import_names and hasattr(self, "_extract_import_names"):', 'matches': [[19, 25], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1224, 'text': '# For test scenarios where _extract_import_names is mocked', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1226, 'text': '# Try to find import_clause in children', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1232, 'text': 'if child.type == "import_clause":', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1233, 'text': 'import_names.extend(self._extract_import_names(child))', 'matches': [[28, 34], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1239, 'text': 'if not module_path and not import_names:', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1242, 'text': '# Use first import name or "unknown"', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1243, 'text': 'primary_name = import_names[0] if import_names else "unknown"', 'matches': [[27, 33], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1245, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1253, 'text': 'imported_names=import_names,', 'matches': [[16, 22], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1257, 'text': 'log_debug(f"Failed to extract import info: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1260, 'text': 'def _extract_import_names(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1261, 'text': 'self, import_clause_node: "tree_sitter.Node", import_text: str = ""', 'matches': [[14, 20], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1263, 'text': '"""Extract import names from import clause"""', 'matches': [[19, 25], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1269, 'text': 'hasattr(import_clause_node, "children")', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1270, 'text': 'and import_clause_node.children is not None', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1272, 'text': 'children = import_clause_node.children', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1279, 'text': 'if child.type == "import_default_specifier":', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1280, 'text': '# Default import', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1300, 'text': 'elif child.type == "named_imports":', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1301, 'text': '# Named imports', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1304, 'text': 'if grandchild.type == "import_specifier":', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1335, 'text': '# Direct identifier (default import case)', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1352, 'text': 'elif child.type == "namespace_import":', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1353, 'text': '# Namespace import (import * as name)', 'matches': [[32, 38], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1374, 'text': 'log_debug(f"Failed to extract import names: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1378, 'text': 'def _extract_dynamic_import(self, node: "tree_sitter.Node") -> Import | None:', 'matches': [[25, 31], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1379, 'text': '"""Extract dynamic import() calls"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1383, 'text': '# Look for import() calls - more flexible regex', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1384, 'text': 'import_match = re.search(', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1385, 'text': 'r"import\\s*\\(\\s*[\\"\']([^\\"\']+)[\\"\']\\s*\\)", node_text', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1387, 'text': 'if not import_match:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1389, 'text': 'import_match = re.search(r"import\\s*\\(\\s*([^)]+)\\s*\\)", node_text)', 'matches': [[16, 22], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1390, 'text': 'if import_match:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1391, 'text': 'source = import_match.group(1).strip("\\"\'")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1395, 'text': 'source = import_match.group(1)', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1397, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1398, 'text': 'name="dynamic_import",', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1405, 'text': 'imported_names=["dynamic_import"],', 'matches': [[16, 22], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1408, 'text': 'log_debug(f"Failed to extract dynamic import: {e}")', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1413, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1415, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1435, 'text': 'import_obj = Import(', 'matches': [[16, 22], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1443, 'text': 'imported_names=[var_name],', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1445, 'text': 'imports.append(import_obj)', 'matches': [[16, 22], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1451, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1623, 'text': 'all_elements.extend(self.extract_imports(tree, source_code))', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1679, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1718, 'text': '"Import/export statements",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1768, 'text': 'imports = extractor.extract_imports(tree, source_code)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1773, 'text': 'elements.extend(imports)', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1809, 'text': 'all_elements.extend(extractor.extract_imports(tree, source_code))', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1874, 'text': '# Import/Export queries', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1875, 'text': '"import": lambda: self._extractor.extract_imports(tree, source_code),', 'matches': [[13, 19], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1878, 'text': 'for i in self._extractor.extract_imports(tree, source_code)', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1953, 'text': '# Import/Export categories', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1954, 'text': '"import": ["import_statement"],', 'matches': [[13, 19], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 83, 'text': '# Import and export statements', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 84, 'text': 'IMPORTS = """', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 85, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 86, 'text': 'source: (string) @import.source) @import.statement', 'matches': [[22, 28], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 88, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 89, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 90, 'text': '(named_imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 91, 'text': '(import_specifier', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 92, 'text': 'name: (identifier) @import.name', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 93, 'text': 'alias: (identifier)? @import.alias)))) @import.named', 'matches': [[38, 44], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 95, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 96, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 97, 'text': '(import_default_specifier', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 98, 'text': '(identifier) @import.default))) @import.default', 'matches': [[26, 32], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 100, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 101, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 102, 'text': '(namespace_import', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 103, 'text': '(identifier) @import.namespace))) @import.namespace', 'matches': [[26, 32], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 105, 'text': '(type_import', 'matches': [[6, 12]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 106, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 107, 'text': '(named_imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 108, 'text': '(import_specifier', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 109, 'text': 'name: (identifier) @import.type.name', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 110, 'text': 'alias: (identifier)? @import.type.alias)))) @import.type', 'matches': [[38, 44], [61, 67]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 193, 'text': '"imports": {', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 194, 'text': '"query": IMPORTS,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 195, 'text': '"description": "Search all import statements including type imports",', 'matches': [[35, 41], [68, 74]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 327, 'text': '# Add import-specific queries', 'matches': [[6, 12]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 328, 'text': 'ALL_QUERIES["import_statement"] = {', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 330, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 331, 'text': 'source: (string) @import.source) @import.statement', 'matches': [[22, 28], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 333, 'text': '"description": "Search import statements with details",', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 336, 'text': 'ALL_QUERIES["type_import"] = {', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 338, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 340, 'text': '(import_clause) @import.clause', 'matches': [[5, 11], [21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 341, 'text': 'source: (string) @import.source) @type_import', 'matches': [[22, 28], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 343, 'text': '"description": "Search type import statements",', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 757, 'text': 'ALL_QUERIES["import_type"] = {', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 759, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 760, 'text': '"type" @import_type.keyword', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 761, 'text': '(import_clause) @import_type.clause', 'matches': [[5, 11], [21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 762, 'text': 'source: (string) @import_type.source) @import_type.statement', 'matches': [[22, 28], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 764, 'text': '"description": "Search import type statements",', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_release_automation.py', 'line': 16, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_release_automation.py', 'line': 17, 'text': 'import subprocess # nosec B404', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_release_automation.py', 'line': 18, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_release_automation.py', 'line': 19, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_release_automation.py', 'line': 20, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_release_automation.py', 'line': 170, 'text': 'import re', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 17, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 18, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 19, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 20, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 22, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 69, 'text': 'import org.junit.Test;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 70, 'text': 'import static org.junit.Assert.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 97, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 98, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 99, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 276, 'text': '{"roots": [temp_project], "query": "import", "total_only": True}', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 281, 'text': 'assert result > 0 # importステートメントが存在するはず', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 564, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\__init__.py', 'line': 11, 'text': 'from .engine import AnalysisEngine', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\__init__.py', 'line': 12, 'text': 'from .parser import Parser, ParseResult', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\__init__.py', 'line': 13, 'text': 'from .query import QueryExecutor', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 11, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 14, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 17, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 20, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 23, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 24, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 25, 'text': 'from ..models import AnalysisResult, Class, CodeElement, Function, Import, Variable', 'matches': [[14, 20], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 26, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 27, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 28, 'text': 'from ..utils.tree_sitter_compat import TreeSitterQueryCompat', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 40, 'text': 'self.imports: list[str] = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 166, 'text': 'self.is_module = "import " in self.source_code or "from " in self.source_code', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 395, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 523, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 714, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 716, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 717, 'text': '"""Extract Python import statements"""', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 718, 'text': 'imports: list[Import] = []', 'matches': [[8, 14], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 720, 'text': '# Import statement queries', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 721, 'text': 'import_queries = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 722, 'text': '# Regular import statements', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 724, 'text': '(import_statement', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 725, 'text': 'name: (dotted_name) @import.name) @import.statement', 'matches': [[37, 43], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 727, 'text': '# From import statements', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 729, 'text': '(import_from_statement', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 730, 'text': 'module_name: (dotted_name) @from_import.module', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 731, 'text': 'name: (dotted_name) @from_import.name) @from_import.statement', 'matches': [[42, 48], [61, 67]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 733, 'text': '# Aliased imports', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 735, 'text': '(aliased_import', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 736, 'text': 'name: (dotted_name) @aliased_import.name', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 737, 'text': 'alias: (identifier) @aliased_import.alias) @aliased_import.statement', 'matches': [[45, 51], [68, 74]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 744, 'text': 'for query_string in import_queries:', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 757, 'text': '# Process different types of imports', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 760, 'text': 'import_type = key.split(".")[0]', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 762, 'text': 'imp = self._extract_import_info(', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 763, 'text': 'node, source_code, import_type', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 766, 'text': 'imports.append(imp)', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 772, 'text': 'imports.extend(', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 773, 'text': 'self._extract_imports_manual(tree.root_node, source_code)', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 778, 'text': 'log_warning(f"Could not extract Python imports: {e}")', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 780, 'text': 'imports.extend(self._extract_imports_manual(tree.root_node, source_code))', 'matches': [[12, 18], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 782, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 784, 'text': 'def _extract_imports_manual(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 786, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 787, 'text': '"""Manual import extraction for tree-sitter 0.25.x compatibility"""', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 788, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 791, 'text': 'if node.type in ["import_statement", "import_from_statement"]:', 'matches': [[30, 36], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 801, 'text': '# Extract module name from the import statement', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 803, 'text': 'imported_names = []', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 805, 'text': 'if node.type == "import_statement":', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 806, 'text': '# Simple import: import os, sys', 'matches': [[33, 39], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 814, 'text': 'imported_names.append(module_name)', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 815, 'text': 'elif node.type == "import_from_statement":', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 816, 'text': '# From import: from os import path', 'matches': [[31, 37], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 825, 'text': 'if module_name or imported_names:', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 826, 'text': 'import_obj = Import(', 'matches': [[24, 30], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 827, 'text': 'name=module_name or imported_names[0]', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 828, 'text': 'if imported_names', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 834, 'text': 'imported_names=imported_names,', 'matches': [[28, 34], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 835, 'text': 'element_type="import",', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 837, 'text': 'imports.append(import_obj)', 'matches': [[24, 30], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 839, 'text': 'log_warning(f"Failed to extract import manually: {e}")', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 846, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 991, 'text': 'def _extract_import_info(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 992, 'text': 'self, node: "tree_sitter.Node", source_code: str, import_type: str', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 993, 'text': ') -> Import | None:', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 994, 'text': '"""Extract detailed import information from AST node"""', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 999, 'text': '# Safely extract import text, avoiding index out of bounds', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1002, 'text': 'import_text = (', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1008, 'text': '# Extract import name and module name (simplified)', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1009, 'text': 'if import_type == "from_import":', 'matches': [[15, 21], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1010, 'text': 'if "from" in import_text and "import" in import_text:', 'matches': [[29, 35], [46, 52], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1011, 'text': 'parts = import_text.split("import")', 'matches': [[28, 34], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1013, 'text': 'import_name = parts[1].strip()', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1016, 'text': 'import_name = import_text', 'matches': [[20, 26], [34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1017, 'text': 'elif import_type == "aliased_import":', 'matches': [[17, 23], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1019, 'text': 'import_name = import_text', 'matches': [[16, 22], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1022, 'text': 'import_name = import_text.replace("import", "").strip()', 'matches': [[16, 22], [30, 36], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1024, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1025, 'text': 'name=import_name,', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1028, 'text': 'raw_text=import_text,', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1034, 'text': 'log_warning(f"Could not extract import info: {e}")', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1217, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1219, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1220, 'text': '"""Extract imports from the tree (legacy compatibility)"""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1222, 'text': 'return extractor.extract_imports(tree, source_code)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1228, 'text': 'import tree_sitter', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1229, 'text': 'import tree_sitter_python as tspython', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1234, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1248, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1320, 'text': 'elif query_key in ["import", "imports", "from_import", "from_imports"]:', 'matches': [[28, 34], [38, 44], [54, 60], [69, 75]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1321, 'text': 'elements = extractor.extract_imports(tree, source_code)', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1343, 'text': 'from ..models import Class, Function, Import, Variable', 'matches': [[22, 28], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1351, 'text': 'elif isinstance(element, Import):', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1352, 'text': 'return "import_statement"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1376, 'text': '# Import-related queries', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1377, 'text': '"import": ["import_statement", "import_from_statement"],', 'matches': [[13, 19], [24, 30], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1378, 'text': '"imports": ["import_statement", "import_from_statement"],', 'matches': [[13, 19], [25, 31], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1379, 'text': '"from_import": ["import_from_statement"],', 'matches': [[18, 24], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1380, 'text': '"from_imports": ["import_from_statement"],', 'matches': [[18, 24], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1423, 'text': '"import_statement",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1424, 'text': '"import_from_statement",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1478, 'text': 'imports = extractor.extract_imports(tree, source_code)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1483, 'text': 'elements.extend(imports)', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1541, 'text': 'elements.extend(extractor.extract_imports(tree, source_code))', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_helper.py', 'line': 9, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_helper.py', 'line': 10, 'text': 'import subprocess # nosec B404', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_helper.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_helper.py', 'line': 12, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 6, 'text': 'Covers functions, classes, variables, imports, decorators, async/await,', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 32, 'text': '# Import statements', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 33, 'text': 'IMPORTS = """', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 34, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 35, 'text': 'name: (dotted_name) @import.name) @import.statement', 'matches': [[25, 31], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 37, 'text': '(import_from_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 38, 'text': 'module_name: (dotted_name)? @import.module', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 39, 'text': 'name: (dotted_name) @import.name) @import.from', 'matches': [[25, 31], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 41, 'text': '(import_from_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 42, 'text': 'module_name: (dotted_name)? @import.module', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 43, 'text': 'name: (import_list) @import.list) @import.from_list', 'matches': [[11, 17], [25, 31], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 45, 'text': '(aliased_import', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 46, 'text': 'name: (dotted_name) @import.name', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 47, 'text': 'alias: (identifier) @import.alias) @import.aliased', 'matches': [[25, 31], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 322, 'text': '# --- Imports ---', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 323, 'text': '"import": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 324, 'text': '(import_statement) @import', 'matches': [[5, 11], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 326, 'text': '"import_statement": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 327, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 328, 'text': 'name: (dotted_name) @import_name) @import_statement', 'matches': [[29, 35], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 330, 'text': '"import_from": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 331, 'text': '(import_from_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 333, 'text': 'name: (dotted_name) @import_name) @import_from', 'matches': [[29, 35], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 335, 'text': '"import_from_list": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 336, 'text': '(import_from_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 338, 'text': 'name: (import_list) @import_list) @import_from_list', 'matches': [[15, 21], [29, 35], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 340, 'text': '"aliased_import": """', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 341, 'text': '(aliased_import', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 342, 'text': 'name: (dotted_name) @import_name', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 343, 'text': 'alias: (identifier) @alias) @aliased_import', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 345, 'text': '"import_star": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 346, 'text': '(import_from_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 348, 'text': 'name: (wildcard_import) @star_import) @import_star', 'matches': [[24, 30], [38, 44], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 664, 'text': '"import": "Search import statements",', 'matches': [[5, 11], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 665, 'text': '"import_statement": "Search import statements with details",', 'matches': [[5, 11], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 666, 'text': '"import_from": "Search from-import statements",', 'matches': [[5, 11], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 667, 'text': '"import_from_list": "Search from-import with multiple names",', 'matches': [[5, 11], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 668, 'text': '"aliased_import": "Search aliased imports (as keyword)",', 'matches': [[13, 19], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 669, 'text': '"import_star": "Search star imports (from module import *)",', 'matches': [[5, 11], [32, 38], [53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 733, 'text': 'ALL_QUERIES["imports"] = {', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 734, 'text': '"query": IMPORTS,', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 735, 'text': '"description": "Search all import statements",', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 13, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 14, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 15, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 16, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 17, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 19, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 44, 'text': 'import java.util.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 45, 'text': 'import java.util.concurrent.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 46, 'text': 'import java.util.stream.Collectors;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 163, 'text': ').write_text("""import { EventEmitter } from \'events\';', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 297, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 298, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 299, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 300, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 301, 'text': 'from typing import Dict, List, Optional, Union, Callable, Any, TypeVar, Generic', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 302, 'text': 'from concurrent.futures import ThreadPoolExecutor', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 303, 'text': 'from contextlib import asynccontextmanager', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 504, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 505, 'text': 'from analytics_engine import create_default_engine', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 1049, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 1051, 'text': 'import psutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 13, 'text': 'from ..encoding_utils import read_file_safe', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 14, 'text': 'from ..plugins.manager import PluginManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 15, 'text': 'from ..query_loader import query_loader', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 16, 'text': 'from ..utils.tree_sitter_compat import TreeSitterQueryCompat, get_node_text_safe', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 17, 'text': 'from .parser import Parser', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 18, 'text': 'from .query_filter import QueryFilter', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 311, 'text': 'elif query_key in ("import", "imports") and "import" in node_type:', 'matches': [[32, 38], [42, 48], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 15, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 16, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 406, 'text': 'def test_extract_import_info_simple_no_source(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 407, 'text': '"""Test import extraction with no source string"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 408, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 409, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 410, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 411, 'text': 'mock_import_node.end_point = (0, 20)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 412, 'text': 'mock_import_node.children = [] # No string literal child', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 414, 'text': 'extractor._get_node_text_optimized = Mock(return_value="import { Component }")', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 416, 'text': 'result = extractor._extract_import_info_simple(mock_import_node)', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 419, 'text': 'def test_extract_import_info_simple_error_handling(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 420, 'text': '"""Test import extraction with error handling"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 421, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 422, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 423, 'text': 'mock_import_node.end_point = (0, 20)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 428, 'text': 'result = extractor._extract_import_info_simple(mock_import_node)', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 431, 'text': 'def test_extract_dynamic_import_no_call_expression(self, extractor):', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 432, 'text': '"""Test dynamic import extraction with no call expression"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 437, 'text': 'result = extractor._extract_dynamic_import(mock_expr_stmt)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 440, 'text': 'def test_extract_dynamic_import_no_import_identifier(self, extractor):', 'matches': [[29, 35], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 441, 'text': '"""Test dynamic import extraction with no import identifier"""', 'matches': [[24, 30], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 445, 'text': '# Mock call expression without import identifier', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 448, 'text': 'call_expr.children = [] # No import identifier', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 452, 'text': 'result = extractor._extract_dynamic_import(mock_expr_stmt)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 455, 'text': 'def test_extract_dynamic_import_error_handling(self, extractor):', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 456, 'text': '"""Test dynamic import extraction with error handling"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 462, 'text': 'result = extractor._extract_dynamic_import(mock_expr_stmt)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 584, 'text': 'import asyncio', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 609, 'text': 'import asyncio', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 637, 'text': 'import asyncio', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 10, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 13, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 16, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 19, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 22, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 23, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 24, 'text': 'from ..models import AnalysisResult, CodeElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 25, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 26, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 27, 'text': 'from ..utils.tree_sitter_compat import TreeSitterQueryCompat', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 102, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 654, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 708, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 762, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 816, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 861, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 899, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1107, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1176, 'text': 'import re', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1197, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1240, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1296, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1332, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1368, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1441, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1457, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1526, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1529, 'text': '"""Extract imports from the tree (legacy compatibility)"""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1531, 'text': 'return extractor.extract_imports(tree, source_code)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1537, 'text': 'import tree_sitter', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1538, 'text': 'import tree_sitter_markdown as tsmarkdown', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1543, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1707, 'text': '# Import query definitions', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1708, 'text': 'from ..queries.markdown import get_query', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1785, 'text': '# Reference queries (mapped to imports)', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1786, 'text': '"import": lambda: self._extractor.extract_references(tree, source_code),', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1890, 'text': '# Reference categories (import-like)', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1891, 'text': '"import": ["link_reference_definition"],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 14, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 15, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 17, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 48, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 49, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 50, 'text': 'from typing import List, Dict, Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 177, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 178, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 179, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 180, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 181, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 182, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 187, 'text': 'from main import DataProcessor', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 296, 'text': 'from src.main import DataProcessor', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 531, 'text': '{"query": "import", "roots": ["src/"], "total_only": True}', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 536, 'text': 'assert result >= 2 # 複数のimport文が存在', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 655, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 681, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 15, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 16, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 301, 'text': 'def test_extract_import_info_simple(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 302, 'text': '"""Test simple import extraction"""', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 303, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 304, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 305, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 306, 'text': 'mock_import_node.end_point = (0, 30)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 307, 'text': 'mock_import_node.children = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 309, 'text': '# Mock import clause', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 310, 'text': 'import_clause = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 311, 'text': 'import_clause.type = "import_clause"', 'matches': [[8, 14], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 318, 'text': 'mock_import_node.children = [import_clause, string_literal]', 'matches': [[13, 19], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 322, 'text': 'mock_import_node: "import { Component } from \'./module\'",', 'matches': [[21, 27], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 323, 'text': 'import_clause: "{ Component }",', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 327, 'text': 'extractor._extract_import_names = Mock(return_value=["Component"])', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 329, 'text': 'result = extractor._extract_import_info_simple(mock_import_node)', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 333, 'text': 'assert result.imported_names == ["Component"]', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 336, 'text': 'def test_extract_import_info_simple_type_import(self, extractor):', 'matches': [[21, 27], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 337, 'text': '"""Test type-only import extraction"""', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 338, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 339, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 340, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 341, 'text': 'mock_import_node.end_point = (0, 35)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 342, 'text': 'mock_import_node.children = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 343, 'text': 'mock_import_node.text = "import type { User } from \'./types\'"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 346, 'text': 'return_value="import type { User } from \'./types\'"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 348, 'text': 'extractor._extract_import_names = Mock(return_value=["User"])', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 350, 'text': '# Mock import clause', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 351, 'text': 'import_clause = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 352, 'text': 'import_clause.type = "import_clause"', 'matches': [[8, 14], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 359, 'text': 'mock_import_node.children = [import_clause, string_literal]', 'matches': [[13, 19], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 361, 'text': 'result = extractor._extract_import_info_simple(mock_import_node)', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 365, 'text': 'assert result.imported_names == ["User"]', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 366, 'text': '# Note: is_type_import is not available in the Import model', 'matches': [[24, 30], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 367, 'text': 'assert "type" in result.raw_text # Check if type import is detected in raw text', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 369, 'text': 'def test_extract_import_names(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 370, 'text': '"""Test import names extraction"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 371, 'text': '# Test named imports', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 373, 'text': 'mock_clause.type = "import_clause"', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 375, 'text': 'named_imports = Mock()', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 376, 'text': 'named_imports.type = "named_imports"', 'matches': [[14, 20], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 378, 'text': 'import_spec1 = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 379, 'text': 'import_spec1.type = "import_specifier"', 'matches': [[8, 14], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 381, 'text': 'import_spec2 = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 382, 'text': 'import_spec2.type = "import_specifier"', 'matches': [[8, 14], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 384, 'text': 'named_imports.children = [import_spec1, import_spec2]', 'matches': [[14, 20], [34, 40], [48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 385, 'text': 'mock_clause.children = [named_imports]', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 389, 'text': 'import_spec1: "Component",', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 390, 'text': 'import_spec2: "useState as state",', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 394, 'text': 'result = extractor._extract_import_names(', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 395, 'text': 'mock_clause, "import { Component, useState as state } from \'react\'"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 402, 'text': 'def test_extract_import_names_default(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 403, 'text': '"""Test default import names extraction"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 405, 'text': 'mock_clause.type = "import_clause"', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 413, 'text': 'result = extractor._extract_import_names(', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 414, 'text': 'mock_clause, "import React from \'react\'"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 420, 'text': 'def test_extract_import_names_namespace(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 421, 'text': '"""Test namespace import names extraction"""', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 423, 'text': 'mock_clause.type = "import_clause"', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 425, 'text': 'namespace_import = Mock()', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 426, 'text': 'namespace_import.type = "namespace_import"', 'matches': [[18, 24], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 432, 'text': "namespace_import.children = [Mock(), identifier] # First child is 'as' keyword", 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 433, 'text': 'mock_clause.children = [namespace_import]', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 435, 'text': 'result = extractor._extract_import_names(', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 436, 'text': 'mock_clause, "import * as Utils from \'./utils\'"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 442, 'text': 'def test_extract_dynamic_import(self, extractor):', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 443, 'text': '"""Test dynamic import extraction"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 453, 'text': '# Mock import identifier', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 454, 'text': 'import_id = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 455, 'text': 'import_id.type = "import"', 'matches': [[8, 14], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 466, 'text': 'call_expr.children = [import_id, arguments]', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 470, 'text': 'return_value="import(\'./dynamic-module\')"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 473, 'text': 'result = extractor._extract_dynamic_import(mock_expr_stmt)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 478, 'text': 'assert "dynamic_import" in result.imported_names', 'matches': [[24, 30], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 530, 'text': 'assert result[0].imported_names == ["fs"]', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 905, 'text': '"Import/export statements",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_filter.py', 'line': 8, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_filter.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 6, 'text': 'Covers functions, classes, variables, imports, exports, and modern JavaScript features.', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 142, 'text': '# --- Imports and Exports ---', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 143, 'text': '"import": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 144, 'text': '(import_statement) @import', 'matches': [[5, 11], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 146, 'text': '"import_statement": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 147, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 148, 'text': 'source: (string) @source) @import_statement', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 150, 'text': '"import_default": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 151, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 152, 'text': '(import_clause', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 153, 'text': '(import_default_specifier', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 155, 'text': 'source: (string) @source) @import_default', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 157, 'text': '"import_named": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 158, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 159, 'text': '(import_clause', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 160, 'text': '(named_imports', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 161, 'text': '(import_specifier', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 162, 'text': 'name: (identifier) @import_name', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 164, 'text': 'source: (string) @source) @import_named', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 166, 'text': '"import_namespace": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 167, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 168, 'text': '(import_clause', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 169, 'text': '(namespace_import', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 171, 'text': 'source: (string) @source) @import_namespace', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 173, 'text': '"dynamic_import": """', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 175, 'text': 'function: (identifier) @import_function', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 176, 'text': '(#match? @import_function "import")', 'matches': [[18, 24], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 177, 'text': 'arguments: (arguments (string) @source)) @dynamic_import', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 462, 'text': '"import": "Search import statements",', 'matches': [[5, 11], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 463, 'text': '"import_statement": "Search import statements with details",', 'matches': [[5, 11], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 464, 'text': '"import_default": "Search default imports",', 'matches': [[5, 11], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 465, 'text': '"import_named": "Search named imports",', 'matches': [[5, 11], [34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 466, 'text': '"import_namespace": "Search namespace imports",', 'matches': [[5, 11], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 467, 'text': '"dynamic_import": "Search dynamic imports",', 'matches': [[13, 19], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 566, 'text': 'IMPORTS = """', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 567, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 568, 'text': 'source: (string) @import.source) @import.statement', 'matches': [[22, 28], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 570, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 571, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 572, 'text': '(named_imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 573, 'text': '(import_specifier', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 574, 'text': 'name: (identifier) @import.name', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 575, 'text': 'alias: (identifier)? @import.alias)))) @import.named', 'matches': [[38, 44], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 577, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 578, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 579, 'text': '(import_default_specifier', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 580, 'text': '(identifier) @import.default))) @import.default', 'matches': [[26, 32], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 582, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 583, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 584, 'text': '(namespace_import', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 585, 'text': '(identifier) @import.namespace))) @import.namespace', 'matches': [[26, 32], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 633, 'text': 'ALL_QUERIES["imports"] = {', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 634, 'text': '"query": IMPORTS,', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 635, 'text': '"description": "Search all import statements and clauses",', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 17, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 18, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 19, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 21, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 129, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 130, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 131, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 132, 'text': 'from typing import Dict, List, Any, Optional, Union, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 133, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 134, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 135, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 136, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 386, 'text': 'import random', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 10, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 13, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 15, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 16, 'text': 'from ..models import AnalysisResult', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 18, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 19, 'text': 'from ..models import Class, CodeElement, Function, Import, Package, Variable', 'matches': [[14, 20], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 20, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 21, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 33, 'text': 'self.imports: list[str] = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 105, 'text': '# is called independently or before extract_imports', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 150, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 152, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 153, 'text': '"""Extract Java import statements with enhanced robustness"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 157, 'text': 'imports: list[Import] = []', 'matches': [[8, 14], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 159, 'text': '# Extract package and imports efficiently (from AdvancedAnalyzer)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 163, 'text': 'elif child.type == "import_declaration":', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 164, 'text': 'import_info = self._extract_import_info(child, source_code)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 165, 'text': 'if import_info:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 166, 'text': 'imports.append(import_info)', 'matches': [[20, 26], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 172, 'text': '# After package and imports come class declarations, so stop', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 175, 'text': '# Fallback: if no imports found via tree-sitter, try regex-based extraction', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 176, 'text': 'if not imports and "import" in source_code:', 'matches': [[15, 21], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 177, 'text': 'log_debug("No imports found via tree-sitter, trying regex fallback")', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 178, 'text': 'fallback_imports = self._extract_imports_fallback(source_code)', 'matches': [[21, 27], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 179, 'text': 'imports.extend(fallback_imports)', 'matches': [[12, 18], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 181, 'text': 'log_debug(f"Extracted {len(imports)} imports")', 'matches': [[35, 41], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 182, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 184, 'text': 'def _extract_imports_fallback(self, source_code: str) -> list[Import]:', 'matches': [[17, 23], [66, 72]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 185, 'text': '"""Fallback import extraction using regex when tree-sitter fails"""', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 186, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 191, 'text': 'if line.startswith("import ") and line.endswith(";"):', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 192, 'text': '# Extract import statement', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 193, 'text': 'import_content = line[:-1] # Remove semicolon', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 195, 'text': 'if "static" in import_content:', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 196, 'text': '# Static import', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 198, 'text': 'r"import\\s+static\\s+([\\w.]+)", import_content', 'matches': [[26, 32], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 201, 'text': 'import_name = static_match.group(1)', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 202, 'text': 'if import_content.endswith(".*"):', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 203, 'text': 'import_name = import_name.replace(".*", "")', 'matches': [[28, 34], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 205, 'text': '# For static imports, extract the class name (remove method/field name)', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 206, 'text': 'parts = import_name.split(".")', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 209, 'text': 'import_name = ".".join(parts[:-1])', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 211, 'text': 'imports.append(', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 212, 'text': 'Import(', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 213, 'text': 'name=import_name,', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 218, 'text': 'module_name=import_name,', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 220, 'text': 'is_wildcard=import_content.endswith(".*"),', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 221, 'text': 'import_statement=import_content,', 'matches': [[32, 38], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 225, 'text': '# Normal import', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 226, 'text': 'normal_match = re.search(r"import\\s+([\\w.]+)", import_content)', 'matches': [[47, 53], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 228, 'text': 'import_name = normal_match.group(1)', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 229, 'text': 'if import_content.endswith(".*"):', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 230, 'text': 'if import_name.endswith(".*"):', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 231, 'text': 'import_name = import_name[:-2]', 'matches': [[32, 38], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 232, 'text': 'elif import_name.endswith("."):', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 233, 'text': 'import_name = import_name[:-1]', 'matches': [[32, 38], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 235, 'text': 'imports.append(', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 236, 'text': 'Import(', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 237, 'text': 'name=import_name,', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 242, 'text': 'module_name=import_name,', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 244, 'text': 'is_wildcard=import_content.endswith(".*"),', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 245, 'text': 'import_statement=import_content,', 'matches': [[32, 38], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 249, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1045, 'text': 'def _extract_import_info(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1047, 'text': ') -> Import | None:', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1048, 'text': '"""Extract import information (from AdvancedAnalyzer)"""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1050, 'text': 'import_text = self._get_node_text_optimized(node)', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1052, 'text': 'import_content = import_text.strip()', 'matches': [[12, 18], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1053, 'text': 'if import_content.endswith(";"):', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1054, 'text': 'import_content = import_content[:-1]', 'matches': [[16, 22], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1056, 'text': 'if "static" in import_content:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1057, 'text': '# Static import', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1058, 'text': 'static_match = re.search(r"import\\s+static\\s+([\\w.]+)", import_content)', 'matches': [[43, 49], [72, 78]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1060, 'text': 'import_name = static_match.group(1)', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1062, 'text': 'if import_content.endswith(".*"):', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1063, 'text': 'import_name = import_name.replace(".*", "")', 'matches': [[24, 30], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1065, 'text': '# For static imports, extract the class name (remove method/field name)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1066, 'text': 'parts = import_name.split(".")', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1069, 'text': 'import_name = ".".join(parts[:-1])', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1071, 'text': 'return Import(', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1072, 'text': 'name=import_name,', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1075, 'text': 'raw_text=import_text,', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1077, 'text': 'module_name=import_name,', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1079, 'text': 'is_wildcard=import_content.endswith(".*"),', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1080, 'text': 'import_statement=import_content,', 'matches': [[24, 30], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1083, 'text': '# Normal import', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1084, 'text': 'normal_match = re.search(r"import\\s+([\\w.]+)", import_content)', 'matches': [[43, 49], [63, 69]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1086, 'text': 'import_name = normal_match.group(1)', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1088, 'text': 'if import_content.endswith(".*"):', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1089, 'text': 'if import_name.endswith(".*"):', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1090, 'text': 'import_name = import_name[:-2] # Remove trailing .*', 'matches': [[28, 34], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1091, 'text': 'elif import_name.endswith("."):', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1092, 'text': 'import_name = import_name[:-1] # Remove trailing .', 'matches': [[28, 34], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1094, 'text': 'return Import(', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1095, 'text': 'name=import_name,', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1098, 'text': 'raw_text=import_text,', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1100, 'text': 'module_name=import_name,', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1102, 'text': 'is_wildcard=import_content.endswith(".*"),', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1103, 'text': 'import_statement=import_content,', 'matches': [[24, 30], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1106, 'text': 'log_debug(f"Failed to extract import info: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1108, 'text': 'log_error(f"Unexpected error in import extraction: {e}")', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1119, 'text': 'elements.extend(self.extract_imports(tree, source_code))', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1162, 'text': 'import tree_sitter_java as tsjava', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1165, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1175, 'text': 'return ["class", "method", "field", "import"]', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1218, 'text': 'elif query_key in ["import", "imports"]:', 'matches': [[28, 34], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1219, 'text': 'elements = extractor.extract_imports(tree, source_code)', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1245, 'text': 'from ..models import Class, Function, Import, Package, Variable', 'matches': [[22, 28], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1262, 'text': 'elif isinstance(element, Import):', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1263, 'text': 'return "import_declaration"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1292, 'text': '# Import-related queries', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1293, 'text': '"import": ["import_declaration"],', 'matches': [[13, 19], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1294, 'text': '"imports": ["import_declaration"],', 'matches': [[13, 19], [25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1309, 'text': '"import_declaration",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1330, 'text': 'from ..core.parser import Parser', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1331, 'text': 'from ..models import AnalysisResult', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1381, 'text': 'log_debug("Java Plugin: Extracting imports...")', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1382, 'text': 'imports = extractor.extract_imports(parse_result.tree, source_code)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1383, 'text': 'log_debug(f"Java Plugin: Found {len(imports)} imports")', 'matches': [[52, 58], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1389, 'text': 'imports = []', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1397, 'text': 'all_elements.extend(imports)', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1416, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1441, 'text': '"imports": [],', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1453, 'text': '"imports": extractor.extract_imports(tree, source_code),', 'matches': [[13, 19], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 6, 'text': 'Covers classes, methods, annotations, imports, and other Java-specific elements.', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 50, 'text': '# --- Imports and Packages ---', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 51, 'text': '"import": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 52, 'text': '(import_declaration) @import', 'matches': [[5, 11], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 54, 'text': '"static_import": """', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 55, 'text': '(import_declaration', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 56, 'text': '"static") @static_import', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 230, 'text': '"import_detailed": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 231, 'text': '(import_declaration', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 233, 'text': '(scoped_identifier) @import_path) @import_detailed', 'matches': [[27, 33], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 269, 'text': '"import": "Extract Java import statements",', 'matches': [[5, 11], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 292, 'text': '"import_detailed": "Extract detailed import statement information",', 'matches': [[5, 11], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 304, 'text': '"static_import": "Extract static import statements",', 'matches': [[12, 18], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 10, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 13, 'text': 'from tree_sitter import Language, Node, Tree', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 15, 'text': 'from ..query_loader import get_query_loader', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 16, 'text': 'from ..utils.tree_sitter_compat import TreeSitterQueryCompat, get_node_text_safe', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 391, 'text': 'from ..language_loader import get_loader', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 476, 'text': 'from ..query_loader import get_query_loader', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 487, 'text': 'from ..query_loader import get_query_loader', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 508, 'text': 'import warnings', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 521, 'text': 'from ..language_loader import get_loader', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 10, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 14, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 18, 'text': 'from tree_sitter_analyzer.plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 43, 'text': "import { Component } from 'react';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 44, 'text': "import type { User } from './types';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 164, 'text': 'assert extractor.imports == []', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 172, 'text': 'extractor.source_code = "import React from \'react\'; export default MyComponent;"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 188, 'text': 'extractor.source_code = "import { Component } from \'@angular/core\';"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 195, 'text': 'extractor.source_code = "import Vue from \'vue\';"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 269, 'text': 'def test_extract_imports_empty_tree(self, extractor, mock_tree):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 270, 'text': '"""Test import extraction with empty tree"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 271, 'text': 'imports = extractor.extract_imports(mock_tree, "")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 272, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 376, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 429, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 441, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 453, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 490, 'text': 'from tree_sitter_analyzer.plugins.manager import PluginManager', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 513, 'text': 'from tree_sitter_analyzer.formatters.formatter_factory import (', 'matches': [[63, 69]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 531, 'text': 'from tree_sitter_analyzer.language_detector import detector', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 543, 'text': 'from tree_sitter_analyzer.language_loader import get_loader', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 9, 'text': '# Import from tree-sitter compatibility module', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 10, 'text': 'from .tree_sitter_compat import TreeSitterQueryCompat, get_node_text_safe, log_api_info', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 14, 'text': '# We need to import these dynamically to avoid circular imports', 'matches': [[13, 19], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 15, 'text': 'def _import_logging_functions():', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 16, 'text': '"""Dynamically import logging functions to avoid circular imports."""', 'matches': [[19, 25], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 17, 'text': 'import importlib.util', 'matches': [[4, 10], [11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 18, 'text': 'import os', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 20, 'text': '# Import the utils.py file from the parent directory', 'matches': [[6, 12]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 23, 'text': 'spec = importlib.util.spec_from_file_location(', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 26, 'text': 'utils_module = importlib.util.module_from_spec(spec)', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 44, 'text': '# Import logging functions', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 58, 'text': ') = _import_logging_functions()', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 60, 'text': '# Fallback logging functions if import fails', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 62, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 114, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 119, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 6, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 7, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 9, 'text': 'from unittest.mock import AsyncMock, Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.server import (', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 617, 'text': 'from tree_sitter_analyzer.mcp.server import main_sync', 'matches': [[57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 11, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 12, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 15, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 18, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 21, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 24, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 25, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 26, 'text': 'from ..language_loader import loader', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 27, 'text': 'from ..models import AnalysisResult, Class, CodeElement, Function, Import, Variable', 'matches': [[14, 20], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 28, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 29, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 40, 'text': 'self.imports: list[str] = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 130, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 132, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 133, 'text': '"""Extract JavaScript import statements with ES6+ support"""', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 137, 'text': 'imports: list[Import] = []', 'matches': [[8, 14], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 139, 'text': '# Extract imports efficiently', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 141, 'text': 'if child.type == "import_statement":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 142, 'text': 'import_info = self._extract_import_info_simple(child)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 143, 'text': 'if import_info:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 144, 'text': 'imports.append(import_info)', 'matches': [[20, 26], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 146, 'text': '# Check for dynamic imports', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 147, 'text': 'dynamic_import = self._extract_dynamic_import(child)', 'matches': [[24, 30], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 148, 'text': 'if dynamic_import:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 149, 'text': 'imports.append(dynamic_import)', 'matches': [[20, 26], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 152, 'text': 'commonjs_imports = self._extract_commonjs_requires(tree, source_code)', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 153, 'text': 'imports.extend(commonjs_imports)', 'matches': [[8, 14], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 155, 'text': 'log_debug(f"Extracted {len(imports)} JavaScript imports")', 'matches': [[35, 41], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 156, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 193, 'text': 'self.is_module = "import " in self.source_code or "export " in self.source_code', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 378, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 857, 'text': 'def _extract_import_info_simple(self, node: "tree_sitter.Node") -> Import | None:', 'matches': [[17, 23], [71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 858, 'text': '"""Extract import information from import_statement node"""', 'matches': [[19, 25], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 869, 'text': '# Extract import details from AST structure', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 870, 'text': 'import_names = []', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 874, 'text': 'if child.type == "import_clause":', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 875, 'text': 'import_names.extend(self._extract_import_names(child))', 'matches': [[20, 26], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 883, 'text': '# Use first import name or "unknown"', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 884, 'text': 'primary_name = import_names[0] if import_names else "unknown"', 'matches': [[27, 33], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 886, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 894, 'text': 'imported_names=import_names,', 'matches': [[16, 22], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 898, 'text': 'log_debug(f"Failed to extract import info: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 901, 'text': 'def _extract_import_names(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 902, 'text': 'self, import_clause_node: "tree_sitter.Node"', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 904, 'text': '"""Extract import names from import clause"""', 'matches': [[19, 25], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 908, 'text': 'for child in import_clause_node.children:', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 909, 'text': 'if child.type == "import_default_specifier":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 910, 'text': '# Default import', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 917, 'text': 'elif child.type == "named_imports":', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 918, 'text': '# Named imports', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 920, 'text': 'if grandchild.type == "import_specifier":', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 930, 'text': 'def _extract_import_info_enhanced(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 932, 'text': ') -> Import | None:', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 933, 'text': '"""Extract enhanced import information"""', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 935, 'text': 'import_text = self._get_node_text_optimized(node)', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 937, 'text': '# Parse different import types', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 938, 'text': 'import_info = self._parse_import_statement(import_text)', 'matches': [[12, 18], [38, 44], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 939, 'text': 'if not import_info:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 942, 'text': 'import_type, names, source, is_default, is_namespace = import_info', 'matches': [[12, 18], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 944, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 948, 'text': 'raw_text=import_text,', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 952, 'text': 'import_type=import_type,', 'matches': [[16, 22], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 953, 'text': 'imported_names=names,', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 959, 'text': 'log_debug(f"Failed to extract import info: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 962, 'text': 'def _extract_dynamic_import(self, node: "tree_sitter.Node") -> Import | None:', 'matches': [[25, 31], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 963, 'text': '"""Extract dynamic import() calls"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 967, 'text': '# Look for import() calls', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 968, 'text': 'import_match = re.search(', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 969, 'text': 'r"import\\s*\\(\\s*[\\"\']([^\\"\']+)[\\"\']\\s*\\)", node_text', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 971, 'text': 'if not import_match:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 974, 'text': 'source = import_match.group(1)', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 976, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 977, 'text': 'name="dynamic_import",', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 984, 'text': 'import_type="dynamic",', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 988, 'text': 'log_debug(f"Failed to extract dynamic import: {e}")', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 993, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 995, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1008, 'text': 'import_obj = Import(', 'matches': [[16, 22], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1016, 'text': 'imported_names=[var_name],', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1018, 'text': 'imports.append(import_obj)', 'matches': [[16, 22], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1025, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1085, 'text': 'def _parse_import_statement(', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1086, 'text': 'self, import_text: str', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1088, 'text': '"""Parse import statement to extract details"""', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1091, 'text': 'clean_text = import_text.strip().rstrip(";")', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1100, 'text': '# Determine import type and extract names', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1101, 'text': 'if "import * as" in clean_text:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1102, 'text': '# Namespace import', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1103, 'text': 'namespace_match = re.search(r"import\\s+\\*\\s+as\\s+(\\w+)", clean_text)', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1107, 'text': 'elif "import {" in clean_text:', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1108, 'text': '# Named imports', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1109, 'text': 'named_match = re.search(r"import\\s+\\{([^}]+)\\}", clean_text)', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1116, 'text': '# Default import', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1117, 'text': 'default_match = re.search(r"import\\s+(\\w+)", clean_text)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1229, 'text': 'elements.extend(self.extract_imports(tree, source_code))', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1403, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1434, 'text': '"Module imports/exports",', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1478, 'text': 'elif query_key in ["import", "imports"]:', 'matches': [[28, 34], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1479, 'text': 'elements = extractor.extract_imports(tree, source_code)', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1501, 'text': 'from ..models import Class, Function, Import, Variable', 'matches': [[22, 28], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1514, 'text': 'elif isinstance(element, Import):', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1515, 'text': 'return "import_statement"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1544, 'text': '# Import/Export-related queries', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1545, 'text': '"import": ["import_statement"],', 'matches': [[13, 19], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1546, 'text': '"imports": ["import_statement"],', 'matches': [[13, 19], [25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1566, 'text': '"import_statement",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1611, 'text': 'imports = extractor.extract_imports(tree, source_code)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1624, 'text': 'elements.extend(imports)', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1657, 'text': '"imports": [],', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1664, 'text': 'imports = self._extractor.extract_imports(tree, source_code)', 'matches': [[12, 18], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1670, 'text': '"imports": imports,', 'matches': [[17, 23], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1679, 'text': '"imports": [],', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 11, 'text': 'from typing import Any, NamedTuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 13, 'text': 'from tree_sitter import Tree', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 15, 'text': 'from ..encoding_utils import EncodingManager', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 16, 'text': 'from ..language_loader import get_loader', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 6, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 10, 'text': 'from tree_sitter_analyzer.languages.python_plugin import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 14, 'text': 'from tree_sitter_analyzer.models import Class', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 351, 'text': 'def test_extract_imports_with_malformed_captures(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 352, 'text': '"""Test import extraction with malformed captures"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 364, 'text': 'result = extractor.extract_imports(mock_tree, "import os")', 'matches': [[35, 41], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 369, 'text': 'def test_extract_imports_with_query_exception(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 370, 'text': '"""Test import extraction when query raises exception"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 379, 'text': 'result = extractor.extract_imports(mock_tree, "import os")', 'matches': [[35, 41], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 446, 'text': 'def test_detect_file_characteristics_with_partial_imports(self, extractor):', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 447, 'text': '"""Test file characteristics detection with partial import statements"""', 'matches': [[60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 448, 'text': 'extractor.source_code = "imp" # Partial import', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 460, 'text': '("from DJANGO import", ""), # Wrong case', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 461, 'text': '("from django import", "django"), # Correct case', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 615, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 616, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 11, 'text': 'from typing import TYPE_CHECKING', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 13, 'text': 'from ..models import AnalysisResult, MarkupElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 14, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 15, 'text': 'from ..utils import log_debug, log_error, log_info', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 18, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 20, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 119, 'text': 'def extract_imports(self, tree: "tree_sitter.Tree", source_code: str) -> list:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 120, 'text': '"""HTML doesn\'t have imports, return empty list"""', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 375, 'text': 'from ..queries.html import HTML_QUERIES', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 406, 'text': 'from ..encoding_utils import read_file_safe', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 414, 'text': 'import tree_sitter', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 415, 'text': 'import tree_sitter_html as ts_html', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 445, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\total_only_optimization_demo.py', 'line': 16, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\total_only_optimization_demo.py', 'line': 17, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\total_only_optimization_demo.py', 'line': 18, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\total_only_optimization_demo.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\total_only_optimization_demo.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import (', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 41, 'text': 'import tree_sitter', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 73, 'text': 'import tree_sitter', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 188, 'text': 'import tree_sitter', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 264, 'text': 'import tree_sitter', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 288, 'text': 'except ImportError:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 6, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 7, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 8, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 10, 'text': 'from unittest.mock import AsyncMock, Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.server import (', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 78, 'text': 'side_effect=ImportError,', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 936, 'text': 'import inspect', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 13, 'text': 'from tree_sitter import Tree', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 15, 'text': 'from ..language_detector import LanguageDetector', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 16, 'text': 'from ..models import AnalysisResult, CodeElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 17, 'text': 'from ..plugins.manager import PluginManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 18, 'text': 'from .parser import Parser, ParseResult', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 19, 'text': 'from .query import QueryExecutor', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 326, 'text': '# Extract imports', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 327, 'text': 'if hasattr(extractor, "extract_imports"):', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 328, 'text': 'imports = extractor.extract_imports(', 'matches': [[24, 30], [52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 331, 'text': 'elements.extend(imports)', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 3, 'text': 'Tests all major functionality including functions, classes, variables, imports,', 'matches': [[71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 7, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 11, 'text': 'from tree_sitter_analyzer.languages.python_plugin import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 15, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import, Variable', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 38, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 39, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 40, 'text': 'from typing import List, Dict, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 41, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 103, 'text': 'assert extractor.imports == []', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 139, 'text': '# Should detect as module due to imports', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 143, 'text': 'django_code = "from django.db import models\\nclass MyModel(models.Model): pass"', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 149, 'text': 'flask_code = "from flask import Flask\\napp = Flask(__name__)"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 155, 'text': 'fastapi_code = "from fastapi import FastAPI\\napp = FastAPI()"', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 750, 'text': 'extractor.source_code = "from flask import Flask"', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 756, 'text': 'extractor.source_code = "from fastapi import APIRouter"', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 830, 'text': 'def test_extract_imports_basic(self, extractor, mock_tree):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 831, 'text': '"""Test basic import extraction"""', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 838, 'text': '# Make extract_imports use manual extraction', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 839, 'text': 'with patch.object(extractor, "_extract_imports_manual") as mock_manual:', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 840, 'text': 'mock_import = Import(', 'matches': [[17, 23], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 844, 'text': 'raw_text="import test_module",', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 847, 'text': 'mock_manual.return_value = [mock_import]', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 849, 'text': 'imports = extractor.extract_imports(mock_tree, "import test_module")', 'matches': [[12, 18], [40, 46], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 851, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 853, 'text': 'assert len(imports) >= 0', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 975, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1020, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1104, 'text': 'import queue', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1105, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1203, 'text': 'def test_plugin_extract_imports(self, plugin):', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1204, 'text': '"""Test plugin import extraction"""', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1209, 'text': 'with patch.object(plugin.extractor, "extract_imports") as mock_extract:', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1212, 'text': 'result = plugin.extract_imports(mock_tree, "test code")', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1220, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1221, 'text': 'from typing import List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1222, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1275, 'text': 'imports = plugin.extract_imports(mock_tree, python_code)', 'matches': [[12, 18], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1281, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1298, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1299, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1300, 'text': 'from typing import Dict, List, Optional, Union', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1301, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1302, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1303, 'text': 'from enum import Enum', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1379, 'text': 'import asyncio', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1423, 'text': 'import asyncio', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1442, 'text': 'imports = plugin.extract_imports(mock_tree, complex_code)', 'matches': [[8, 14], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1448, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1456, 'text': 'from django.db import models', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1457, 'text': 'from django.contrib.auth.models import User', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1487, 'text': 'import', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1488, 'text': '# Incomplete import statement', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 80, 'text': '"import_statement": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 81, 'text': '(import_statement) @import_statement', 'matches': [[5, 11], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 377, 'text': '# --- Important Declarations ---', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 378, 'text': '"important": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 381, 'text': '"!" @important_mark', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 382, 'text': '"important" @important_keyword) @important', 'matches': [[9, 15], [21, 27], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 433, 'text': '"import_statement": "Search @import statements",', 'matches': [[5, 11], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 491, 'text': '"important": "Search !important declarations",', 'matches': [[5, 11], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 13, 'text': 'import pytest_asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp import MCP_INFO', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 25, 'text': 'from tree_sitter_analyzer.core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 26, 'text': 'from tree_sitter_analyzer.core.cache_service import CacheService', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 143, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\suppress_output_demo.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\suppress_output_demo.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\suppress_output_demo.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\suppress_output_demo.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 13, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 11, 'text': 'from typing import TYPE_CHECKING', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 13, 'text': 'from ..models import AnalysisResult, StyleElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 14, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 15, 'text': 'from ..utils import log_debug, log_error, log_info', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 18, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 20, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 95, 'text': 'def extract_imports(self, tree: "tree_sitter.Tree", source_code: str) -> list:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 96, 'text': '"""CSS doesn\'t have imports in the traditional sense, return empty list"""', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 136, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 160, 'text': '"import_statement",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 332, 'text': 'from ..queries.css import CSS_QUERIES', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 365, 'text': 'from ..encoding_utils import read_file_safe', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 373, 'text': 'import tree_sitter', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 374, 'text': 'import tree_sitter_css as ts_css', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 404, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 6, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 7, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 9, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.utils.gitignore_detector import (', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 494, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 531, 'text': 'import threading', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 15, 'text': 'from tree_sitter_analyzer.languages.python_plugin import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 19, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import, Variable', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 20, 'text': 'from tree_sitter_analyzer.plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 45, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 46, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 47, 'text': 'from typing import List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 48, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 108, 'text': 'assert hasattr(extractor, "extract_imports")', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 163, 'text': 'def test_extract_imports_success(', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 166, 'text': '"""Test successful import extraction"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 170, 'text': 'mock_query.captures.return_value = {"import.statement": []}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 172, 'text': 'imports = extractor.extract_imports(mock_tree, "test code")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 174, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 279, 'text': 'def test_extract_import_info(self, extractor: PythonElementExtractor) -> None:', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 280, 'text': '"""Test import information extraction"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 282, 'text': 'mock_node.type = "import_statement"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 292, 'text': 'result = extractor._extract_import_info(mock_node, "import os", "import")', 'matches': [[40, 46], [64, 70], [77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 295, 'text': 'assert isinstance(result, Import)', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 639, 'text': 'mock_language.side_effect = ImportError("Module not found")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 781, 'text': 'def test_python_import_variations(self, plugin: PythonPlugin) -> None:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 782, 'text': '"""Test Python import statement variations"""', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 785, 'text': '# Test different import patterns', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 786, 'text': '# Test different import patterns (simplified for testing)', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 15, 'text': 'import hashlib', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 16, 'text': 'import threading', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 17, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 18, 'text': 'from datetime import datetime, timedelta', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 19, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 21, 'text': 'from cachetools import LRUCache, TTLCache', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 23, 'text': 'from ..utils import log_debug, log_info', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 188, 'text': 'import pickle # nosec B403', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 229, 'text': 'import logging', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 323, 'text': 'import sys', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 332, 'text': '# Silently ignore all errors during shutdown to prevent ImportError', 'matches': [[68, 74]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\smart_cache_demo.py', 'line': 13, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\smart_cache_demo.py', 'line': 14, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\smart_cache_demo.py', 'line': 15, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\smart_cache_demo.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\smart_cache_demo.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import (', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 8, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.utils.gitignore_detector import (', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 6, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 10, 'text': 'from tree_sitter_analyzer.languages.java_plugin import JavaElementExtractor, JavaPlugin', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 35, 'text': 'imports = extractor.extract_imports(mock_tree, "")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 42, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 55, 'text': 'import java.util.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 93, 'text': 'import java.util.日本語;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 432, 'text': 'def test_import_extraction_with_malformed_imports(self, extractor):', 'matches': [[13, 19], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 433, 'text': '"""Test import extraction with malformed import statements"""', 'matches': [[16, 22], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 434, 'text': 'malformed_imports = """', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 435, 'text': 'import ;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 436, 'text': 'import java.util.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 437, 'text': 'import static ;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 438, 'text': 'import static java.util.Collections.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 439, 'text': 'import java..util.List;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 445, 'text': '# Should handle malformed imports gracefully', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 446, 'text': 'imports = extractor.extract_imports(mock_tree, malformed_imports)', 'matches': [[8, 14], [36, 42], [65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 447, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 449, 'text': 'def test_import_fallback_with_invalid_patterns(self, extractor):', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 450, 'text': '"""Test import fallback with invalid patterns"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 451, 'text': 'invalid_imports = """', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 452, 'text': 'import ;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 453, 'text': 'import java.util.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 454, 'text': 'import static ;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 455, 'text': 'import static java.util.Collections.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 458, 'text': 'imports = extractor._extract_imports_fallback(invalid_imports)', 'matches': [[8, 14], [37, 43], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 461, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 462, 'text': '# May contain some imports if patterns partially match', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 522, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 523, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 583, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 619, 'text': 'mock_extractor.extract_imports.side_effect = Exception(', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 620, 'text': '"Import extraction error"', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 637, 'text': '"imports",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 692, 'text': 'imports = extractor.extract_imports(mock_tree, None)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 700, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 15, 'text': 'import hashlib', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 16, 'text': 'import threading', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 17, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 18, 'text': 'from typing import Any, Optional, Protocol', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 20, 'text': 'from ..models import AnalysisResult', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 21, 'text': 'from ..plugins.base import LanguagePlugin as BaseLanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 22, 'text': 'from ..plugins.manager import PluginManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 23, 'text': 'from ..security import SecurityValidator', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 24, 'text': 'from ..utils import log_debug, log_error, log_info, log_performance', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 25, 'text': 'from .cache_service import CacheService', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 134, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 140, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 259, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 398, 'text': 'from pathlib import Path', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.analysis_engine import get_analysis_engine', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.tools.universal_analyze_tool import UniversalAnalyzeTool', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 16, 'text': 'from tree_sitter_analyzer.security import SecurityValidator', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 177, 'text': 'import time', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 204, 'text': 'import shutil', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__main__.py', 'line': 8, 'text': 'from .cli_main import main', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 3, 'text': 'Tests all major functionality including functions, classes, variables, imports,', 'matches': [[71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 7, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 11, 'text': 'from tree_sitter_analyzer.languages.javascript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 14, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 37, 'text': "import React, { useState, useEffect } from 'react';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 38, 'text': "import axios from 'axios';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 39, 'text': "import { debounce } from 'lodash';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 204, 'text': 'assert extractor.imports == []', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 241, 'text': '# Should detect as module due to imports/exports', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 251, 'text': 'vue_code = "import Vue from \'vue\'; export default { name: \'Component\' }"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 257, 'text': 'angular_code = "import { Component } from \'@angular/core\';"', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 333, 'text': 'def test_extract_imports_basic(self, extractor, mock_tree, sample_javascript_code):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 334, 'text': '"""Test basic import extraction"""', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 335, 'text': '# Mock import statement', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 336, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 337, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 339, 'text': 'mock_tree.root_node.children = [mock_import_node]', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 341, 'text': 'with patch.object(extractor, "_extract_import_info_simple") as mock_extract:', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 342, 'text': 'mock_import = Import(', 'matches': [[17, 23], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 346, 'text': 'raw_text="import React from \'react\'",', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 349, 'text': 'mock_extract.return_value = mock_import', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 351, 'text': 'imports = extractor.extract_imports(mock_tree, sample_javascript_code)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 353, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 802, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 849, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 17, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError, ValidationError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 26, 'text': 'from tree_sitter_analyzer.security.validator import SecurityValidator', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 265, 'text': 'import platform', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 266, 'text': 'from unittest.mock import patch', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 15, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 17, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 18, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 19, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 20, 'text': 'from typing import Any, Dict, List, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 466, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 14, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 15, 'text': 'import gc', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 16, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 17, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 18, 'text': 'import warnings', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 19, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 22, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 23, 'text': 'import pytest_asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.utils import (', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 138, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 180, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 181, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 220, 'text': 'from typing import List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 3, 'text': 'Tests all major functionality including methods, classes, fields, imports, packages,', 'matches': [[66, 72]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 7, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 11, 'text': 'from tree_sitter_analyzer.languages.java_plugin import JavaElementExtractor, JavaPlugin', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 12, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import, Package, Variable', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 37, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 38, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 39, 'text': 'import java.util.Map;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 40, 'text': 'import java.util.HashMap;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 41, 'text': 'import java.util.concurrent.CompletableFuture;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 42, 'text': 'import javax.annotation.Nullable;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 43, 'text': 'import org.springframework.stereotype.Service;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 44, 'text': 'import org.springframework.beans.factory.annotation.Autowired;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 45, 'text': 'import static java.util.Collections.emptyList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 46, 'text': 'import static org.junit.Assert.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 354, 'text': 'assert extractor.imports == []', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 477, 'text': 'def test_extract_imports_basic(self, extractor, mock_tree, sample_java_code):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 478, 'text': '"""Test basic import extraction"""', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 479, 'text': '# Mock package and import nodes', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 483, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 484, 'text': 'mock_import_node.type = "import_declaration"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 491, 'text': 'mock_import_node,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 496, 'text': 'with patch.object(extractor, "_extract_import_info") as mock_extract_import:', 'matches': [[51, 57], [81, 87]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 497, 'text': 'mock_import = Import(', 'matches': [[21, 27], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 501, 'text': 'raw_text="import java.util.List;",', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 504, 'text': 'mock_extract_import.return_value = mock_import', 'matches': [[29, 35], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 506, 'text': 'imports = extractor.extract_imports(mock_tree, sample_java_code)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 508, 'text': 'assert isinstance(imports, list)', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 510, 'text': 'mock_extract_import.assert_called_once()', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 512, 'text': 'def test_extract_imports_with_fallback(self, extractor, mock_tree):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 513, 'text': '"""Test import extraction with regex fallback"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 514, 'text': '# Mock tree with no import nodes', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 517, 'text': '# Source code with imports', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 518, 'text': 'source_with_imports = """', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 519, 'text': 'import java.util.List;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 520, 'text': 'import static java.util.Collections.emptyList;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 521, 'text': 'import javax.annotation.*;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 524, 'text': 'with patch.object(extractor, "_extract_imports_fallback") as mock_fallback:', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 526, 'text': 'Import(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 530, 'text': 'raw_text="import java.util.List;",', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 535, 'text': 'imports = extractor.extract_imports(mock_tree, source_with_imports)', 'matches': [[12, 18], [40, 46], [71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 537, 'text': '# Should call fallback when no imports found via tree-sitter', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 539, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1150, 'text': 'def test_extract_imports_fallback_static_imports(self, extractor):', 'matches': [[21, 27], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1151, 'text': '"""Test fallback import extraction for static imports"""', 'matches': [[25, 31], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1153, 'text': 'import static java.util.Collections.emptyList;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1154, 'text': 'import static org.junit.Assert.*;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1155, 'text': 'import static com.example.Utils.helper;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1158, 'text': 'imports = extractor._extract_imports_fallback(source_code)', 'matches': [[8, 14], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1160, 'text': 'assert len(imports) == 3', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1162, 'text': '# Check static imports', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1163, 'text': 'assert imports[0].name == "java.util.Collections"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1164, 'text': 'assert imports[0].is_static is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1165, 'text': 'assert imports[0].is_wildcard is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1167, 'text': 'assert imports[1].name == "org.junit.Assert"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1168, 'text': 'assert imports[1].is_static is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1169, 'text': 'assert imports[1].is_wildcard is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1171, 'text': 'assert imports[2].name == "com.example.Utils"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1172, 'text': 'assert imports[2].is_static is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1173, 'text': 'assert imports[2].is_wildcard is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1175, 'text': 'def test_extract_imports_fallback_normal_imports(self, extractor):', 'matches': [[21, 27], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1176, 'text': '"""Test fallback import extraction for normal imports"""', 'matches': [[25, 31], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1178, 'text': 'import java.util.List;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1179, 'text': 'import java.util.*;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1180, 'text': 'import javax.annotation.Nullable;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1183, 'text': 'imports = extractor._extract_imports_fallback(source_code)', 'matches': [[8, 14], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1185, 'text': 'assert len(imports) == 3', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1187, 'text': '# Check normal imports', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1188, 'text': 'assert imports[0].name == "java.util.List"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1189, 'text': 'assert imports[0].is_static is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1190, 'text': 'assert imports[0].is_wildcard is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1192, 'text': 'assert imports[1].name == "java.util"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1193, 'text': 'assert imports[1].is_static is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1194, 'text': 'assert imports[1].is_wildcard is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1196, 'text': 'assert imports[2].name == "javax.annotation.Nullable"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1197, 'text': 'assert imports[2].is_static is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1198, 'text': 'assert imports[2].is_wildcard is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1202, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1249, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1414, 'text': 'plugin.extractor, "extract_imports"', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1415, 'text': ') as mock_imports:', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1425, 'text': 'mock_imports.return_value = []', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1434, 'text': 'assert "imports" in result', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1446, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1469, 'text': 'plugin.extractor, "extract_imports"', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1470, 'text': ') as mock_imports:', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1486, 'text': 'mock_imports.side_effect = Exception(', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1487, 'text': '"Import extraction error"', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1506, 'text': '"imports",', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1516, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1517, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 18, 'text': '# Legacy imports for backward compatibility', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 20, 'text': '# Core Engine - temporary direct import', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 21, 'text': 'from .core.analysis_engine import UnifiedAnalysisEngine as UniversalCodeAnalyzer', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 22, 'text': 'from .encoding_utils import (', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 32, 'text': '# from .java_advanced_analyzer import AdvancedAnalyzer # Removed - migrated to plugin system', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 33, 'text': 'from .language_detector import LanguageDetector', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 34, 'text': 'from .language_loader import get_loader', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 38, 'text': 'from .models import (', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 43, 'text': 'Import,', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 47, 'text': 'JavaImport,', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 52, 'text': 'from .output_manager import (', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 63, 'text': 'from .plugins import ElementExtractor, LanguagePlugin', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 64, 'text': 'from .plugins.manager import PluginManager', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 65, 'text': 'from .query_loader import QueryLoader, get_query_loader', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 67, 'text': '# Import new utility modules', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 68, 'text': 'from .utils import (', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 82, 'text': '"JavaImport",', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 91, 'text': '"Import",', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_demo.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_demo.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_demo.py', 'line': 12, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_demo.py', 'line': 13, 'text': 'from tree_sitter_analyzer.security import (', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_demo.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 15, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 17, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 18, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 19, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 20, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 21, 'text': 'from typing import Any, Dict, List, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 200, 'text': 'important_fields = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 205, 'text': 'for field in important_fields:', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 559, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 15, 'text': 'from tree_sitter_analyzer.languages.java_plugin import JavaElementExtractor, JavaPlugin', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 16, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 17, 'text': 'from tree_sitter_analyzer.plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 44, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 45, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 88, 'text': 'assert hasattr(extractor, "extract_imports")', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 145, 'text': 'def test_extract_imports_success(', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 148, 'text': '"""Test successful import extraction"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 152, 'text': 'mock_query.captures.return_value = {"import.declaration": []}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 154, 'text': 'imports = extractor.extract_imports(mock_tree, "test code")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 156, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 203, 'text': 'def test_extract_import_info(self, extractor: JavaElementExtractor) -> None:', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 204, 'text': '"""Test import information extraction"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 206, 'text': 'mock_node.type = "import_declaration"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 213, 'text': 'result = extractor._extract_import_info(mock_node, "import java.util.List;")', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 216, 'text': 'assert result is None or isinstance(result, Import)', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 473, 'text': 'mock_language.side_effect = ImportError("Module not found")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 12, 'text': 'from tree_sitter_analyzer.api import analyze_file', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 13, 'text': 'from tree_sitter_analyzer.formatters.formatter_factory import TableFormatterFactory', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 74, 'text': 'imports = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 77, 'text': 'if e.get("type") == "import"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 78, 'text': 'or e.get("element_type") == "import"', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 79, 'text': 'or e.__class__.__name__ == "Import"', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 86, 'text': 'print(f" • Imports: {len(imports)}")', 'matches': [[23, 29], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 273, 'text': '# Show import analysis', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 274, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 275, 'text': 'print("📥 Import Analysis:")', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 278, 'text': '# Group imports by type', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 279, 'text': 'es6_imports = []', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 280, 'text': 'commonjs_imports = []', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 281, 'text': 'dynamic_imports = []', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 283, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 284, 'text': 'import_type = getattr(imp, "import_type", "unknown")', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 285, 'text': 'if import_type == "commonjs":', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 286, 'text': 'commonjs_imports.append(imp)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 287, 'text': 'elif import_type == "dynamic":', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 288, 'text': 'dynamic_imports.append(imp)', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 290, 'text': 'es6_imports.append(imp)', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 292, 'text': 'if es6_imports:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 293, 'text': 'print(f"📦 ES6 Imports ({len(es6_imports)}):")', 'matches': [[33, 39], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 294, 'text': 'for imp in es6_imports[:5]:', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 296, 'text': 'import_type = imp.get("import_type", "default")', 'matches': [[24, 30], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 297, 'text': 'names = imp.get("imported_names", [imp.get("name", "unknown")])', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 300, 'text': 'import_type = getattr(imp, "import_type", "default")', 'matches': [[24, 30], [52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 301, 'text': 'names = getattr(imp, "imported_names", [imp.name])', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 308, 'text': 'print(f" • {names_str} from \'{module_path}\' ({import_type})")', 'matches': [[70, 76]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 309, 'text': 'if len(es6_imports) > 5:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 310, 'text': 'print(f" ... and {len(es6_imports) - 5} more")', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 313, 'text': 'if commonjs_imports:', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 314, 'text': 'print(f"🔧 CommonJS Imports ({len(commonjs_imports)}):")', 'matches': [[38, 44], [61, 67]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 315, 'text': 'for imp in commonjs_imports:', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 327, 'text': 'if dynamic_imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 328, 'text': 'print(f"⚡ Dynamic Imports ({len(dynamic_imports)}):")', 'matches': [[36, 42], [58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 329, 'text': 'for imp in dynamic_imports:', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 335, 'text': 'print(f" • import(\'{module_path}\')")', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 505, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 511, 'text': '"import_type": (', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 512, 'text': 'i.get("import_type", "default")', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 514, 'text': 'else getattr(i, "import_type", "default")', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 520, 'text': 'for i in imports', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 527, 'text': '"import_count": len(imports),', 'matches': [[17, 23], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 558, 'text': 'import traceback', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 568, 'text': 'from tree_sitter_analyzer.queries.javascript import get_available_javascript_queries', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 581, 'text': '"Imports/Exports": [q for q in queries if "import" in q or "export" in q],', 'matches': [[9, 15], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 637, 'text': 'print("• Comprehensive element extraction (functions, classes, variables, imports)")', 'matches': [[80, 86]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 10, 'text': 'from collections import defaultdict', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 12, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 16, 'text': 'from tree_sitter_analyzer.core.analysis_engine import get_analysis_engine', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 17, 'text': 'from tree_sitter_analyzer.languages.css_plugin import CssPlugin', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 18, 'text': 'from tree_sitter_analyzer.models import StyleElement', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 19, 'text': 'except ImportError as e:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 248, 'text': 'import re', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 8, 'text': 'import atexit', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 10, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 12, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 13, 'text': 'from functools import wraps', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 15, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 241, 'text': '# Setup safe shutdown on import', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\sample.py', 'line': 9, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\sample.py', 'line': 10, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\sample.py', 'line': 83, 'text': 'import aiohttp', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\sample.py', 'line': 182, 'text': 'from functools import reduce', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 13, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 14, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 15, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 18, 'text': 'from colorama import Fore, Back, Style, init', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 22, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 242, 'text': 'import time', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 6, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 10, 'text': 'from tree_sitter_analyzer.languages.javascript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 14, 'text': 'from tree_sitter_analyzer.models import Function', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 39, 'text': 'imports = extractor.extract_imports(mock_tree, "")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 45, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 58, 'text': "import from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 363, 'text': 'def test_import_extraction_with_malformed_imports(self, extractor):', 'matches': [[13, 19], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 364, 'text': '"""Test import extraction with malformed import statements"""', 'matches': [[16, 22], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 365, 'text': 'malformed_imports = """', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 366, 'text': "import from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 367, 'text': "import 'module'", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 368, 'text': "import { } from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 369, 'text': "import { a, } from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 370, 'text': "import * as from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 377, 'text': '# Should handle malformed imports gracefully', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 378, 'text': 'imports = extractor.extract_imports(mock_tree, malformed_imports)', 'matches': [[8, 14], [36, 42], [65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 379, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 433, 'text': '"""Test framework detection with mixed framework imports"""', 'matches': [[57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 435, 'text': "import React from 'react';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 436, 'text': "import Vue from 'vue';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 437, 'text': "import { Component } from '@angular/core';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 486, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 487, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 550, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 563, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 584, 'text': 'mock_extractor.extract_imports.side_effect = Exception(', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 585, 'text': '"Import extraction error"', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 599, 'text': '"imports": [],', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\calculate_token_comparison.py', 'line': 7, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\calculate_token_comparison.py', 'line': 8, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 15, 'text': 'from tree_sitter_analyzer.core.analysis_engine import get_analysis_engine', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 16, 'text': 'from tree_sitter_analyzer.formatters.html_formatter import HtmlFormatter', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 17, 'text': 'from tree_sitter_analyzer.languages.html_plugin import HtmlPlugin', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 18, 'text': 'from tree_sitter_analyzer.models import MarkupElement', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 19, 'text': 'except ImportError as e:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.analysis_engine import get_analysis_engine', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 15, 'text': 'from tree_sitter_analyzer.project_detector import (', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 85, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 86, 'text': 'from src.main import Calculator, fibonacci', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 267, 'text': 'import shutil', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 16, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 17, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 18, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 19, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 20, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 21, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 22, 'text': 'from typing import Any, Dict, List, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 24, 'text': 'from colored_logger import get_logger', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 25, 'text': 'from test_case_loader import TestCaseLoader', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 321, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 358, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 408, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 8, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 10, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 13, 'text': '# Add the project root to Python path for imports', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import configure_cache', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 210, 'text': 'import traceback', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cache_logic_only.py', 'line': 8, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cache_logic_only.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cache_logic_only.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import (', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_factory_demo.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_factory_demo.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_factory_demo.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.utils.file_output_factory import (', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_factory_demo.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.utils.file_output_manager import FileOutputManager', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_factory_demo.py', 'line': 180, 'text': 'import threading', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_factory_demo.py', 'line': 181, 'text': 'import time', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 12, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 57, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 58, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 59, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 60, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 62, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 63, 'text': 'import_statement = imp.get("statement", "")', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 64, 'text': 'if not import_statement:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 65, 'text': '# Construct import statement from parts', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 68, 'text': 'is_type_import = imp.get("is_type_import", False)', 'matches': [[28, 34], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 70, 'text': 'type_prefix = "type " if is_type_import else ""', 'matches': [[57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 71, 'text': 'import_statement = f"import {type_prefix}{name} from {source};"', 'matches': [[24, 30], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 72, 'text': 'lines.append(import_statement)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 462, 'text': 'elif element_type == "import":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 463, 'text': 'return "Import"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 10, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 12, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 13, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 15, 'text': 'from .. import __version__', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 18, 'text': 'from mcp.server import Server', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 19, 'text': 'from mcp.server.models import InitializationOptions', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 20, 'text': 'from mcp.server.stdio import stdio_server', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 21, 'text': 'from mcp.types import Resource, TextContent, Tool', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 24, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 48, 'text': 'from .. import api', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 49, 'text': 'from ..utils import log_error, log_info', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 69, 'text': 'raise ImportError("MCP library not available. Please install mcp package.")', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 9, 'text': '# Import from tree-sitter compatibility module', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 10, 'text': 'from .tree_sitter_compat import TreeSitterQueryCompat, get_node_text_safe, log_api_info', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 14, 'text': '# We need to import these dynamically to avoid circular imports', 'matches': [[13, 19], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 15, 'text': 'def _import_logging_functions():', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 16, 'text': '"""Dynamically import logging functions to avoid circular imports."""', 'matches': [[19, 25], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 17, 'text': 'import importlib.util', 'matches': [[4, 10], [11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 18, 'text': 'import os', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 20, 'text': '# Import the utils.py file from the parent directory', 'matches': [[6, 12]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 23, 'text': 'spec = importlib.util.spec_from_file_location(', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 26, 'text': 'utils_module = importlib.util.module_from_spec(spec)', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 44, 'text': '# Import logging functions', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 58, 'text': ') = _import_logging_functions()', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 60, 'text': '# Fallback logging functions if import fails', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 62, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 114, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 119, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cache_format_compatibility_bug.py', 'line': 8, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cache_format_compatibility_bug.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cache_format_compatibility_bug.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import SearchCache', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 10, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 11, 'text': 'from tree_sitter_analyzer.security import SecurityValidator', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 24, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 11, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 12, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 13, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 15, 'text': 'from typing import Dict, Any, Optional, List', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 103, 'text': '"import tree_sitter_analyzer; print(tree_sitter_analyzer.__version__)"],', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 12, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 52, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 76, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 77, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 78, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 80, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 81, 'text': 'import_statement = imp.get("raw_text", "")', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 82, 'text': 'if not import_statement:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 87, 'text': 'import_statement = f"from {module_name} import {name}"', 'matches': [[24, 30], [64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 89, 'text': 'import_statement = f"import {name}"', 'matches': [[24, 30], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 90, 'text': 'lines.append(import_statement)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 446, 'text': '# Show important decorators', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 447, 'text': 'important = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 457, 'text': 'if any(imp in dec for imp in important):', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 41, 'text': 'import tree_sitter', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 73, 'text': 'import tree_sitter', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 188, 'text': 'import tree_sitter', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 264, 'text': 'import tree_sitter', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 288, 'text': 'except ImportError:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_query_service.py', 'line': 4, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_query_service.py', 'line': 5, 'text': 'import inspect', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_query_service.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_query_service.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_query_service.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_query_service.py', 'line': 11, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 8, 'text': 'from typing import TYPE_CHECKING, Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 10, 'text': 'from ..models import AnalysisResult', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 13, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 18, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 46, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 54, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 71, 'text': 'from ..constants import (', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 75, 'text': 'ELEMENT_TYPE_IMPORT,', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 83, 'text': 'imports = [e for e in elements if is_element_of_type(e, ELEMENT_TYPE_IMPORT)]', 'matches': [[8, 14], [77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 107, 'text': '"imports": [', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 109, 'text': 'for imp in imports', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 127, 'text': '"import_count": len(imports),', 'matches': [[17, 23], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 143, 'text': 'from ..models import AnalysisResult', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 12, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 13, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 15, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 17, 'text': 'import psutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 18, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 101, 'text': 'lines.append("from typing import Any, Dict, List, Optional")', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_regex_checker.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_regex_checker.py', 'line': 8, 'text': 'from tree_sitter_analyzer.security import RegexSafetyChecker', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 12, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 16, 'text': 'from tree_sitter_analyzer.interfaces.mcp_adapter import MCPAdapter, MCPServerAdapter', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 17, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 58, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 621, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 622, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\__init__.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\__init__.py', 'line': 11, 'text': '# Import main package version for consistency', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\__init__.py', 'line': 13, 'text': 'from .. import __version__ as main_version', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\__init__.py', 'line': 16, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 8, 'text': 'import csv', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 9, 'text': 'import io', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 10, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 29, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 112, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 113, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 114, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 115, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 117, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 575, 'text': '"imports": data.get("imports", []),', 'matches': [[17, 23], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 7, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 8, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 10, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 11, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 12, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 13, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 14, 'text': 'import venv', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 15, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 16, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 17, 'text': 'from typing import Dict, List, Any, Optional, Union', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 18, 'text': 'import copy', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 11, 'text': 'from .base_formatter import BaseFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 513, 'text': 'import re', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 608, 'text': 'import json', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 620, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 4, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 5, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 6, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 9, 'text': 'import psutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 12, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 355, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 15, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 17, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 18, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 19, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 21, 'text': 'from ..core.analysis_engine import AnalysisRequest, UnifiedAnalysisEngine', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 22, 'text': 'from ..models import AnalysisResult', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 139, 'text': '- imports', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 154, 'text': 'from ..constants import (', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 158, 'text': 'ELEMENT_TYPE_IMPORT,', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 166, 'text': 'imports = [e for e in elements if is_element_of_type(e, ELEMENT_TYPE_IMPORT)]', 'matches': [[8, 14], [77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 178, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 179, 'text': '{"name": imp.name, "type": str(type(imp).__name__)} for imp in imports', 'matches': [[79, 85]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 357, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 11, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 15, 'text': 'from tree_sitter_analyzer.interfaces.cli_adapter import CLIAdapter', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 16, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 57, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 429, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 430, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 11, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 13, 'text': 'from tree_sitter_analyzer.security import SecurityValidator', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 39, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 99, 'text': '(r"import\\s+[\\w.]+", True), # Safe import pattern', 'matches': [[15, 21], [48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 267, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 14, 'text': 'from tree_sitter_analyzer import __version__, api', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 50, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 373, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 374, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 9, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 10, 'text': 'import importlib.metadata', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 11, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 12, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 13, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 15, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 17, 'text': 'from .. import api', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 59, 'text': 'version = importlib.metadata.version("tree-sitter-analyzer")', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 60, 'text': 'except importlib.metadata.PackageNotFoundError:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\language_formatter_factory.py', 'line': 6, 'text': 'from .base_formatter import BaseFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\language_formatter_factory.py', 'line': 7, 'text': 'from .html_formatter import HtmlFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\language_formatter_factory.py', 'line': 8, 'text': 'from .markdown_formatter import MarkdownFormatter', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 16, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 17, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 18, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 19, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 20, 'text': 'from typing import Any, Dict, List, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 495, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 11, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 12, 'text': 'from tree_sitter_analyzer.security import (', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 38, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 11, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 12, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 13, 'text': 'from unittest.mock import MagicMock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 33, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 34, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 35, 'text': 'import java.util.Map;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 36, 'text': 'import java.util.HashMap;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 37, 'text': 'import java.util.stream.Collectors;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 38, 'text': 'import javax.annotation.Nullable;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 170, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 171, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 172, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 173, 'text': 'from typing import List, Dict, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 376, 'text': 'assert "imports" in summary', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 12, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 15, 'text': 'from .error_handler import (', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 30, 'text': 'from .path_resolver import PathResolver, resolve_path', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 49, 'text': '# Import unified services for backward compatibility', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 51, 'text': 'from ...core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 52, 'text': 'from ...core.cache_service import CacheService as UnifiedCacheService', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 81, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 10, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 12, 'text': 'from ..models import CodeElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 171, 'text': 'import json', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 213, 'text': 'import csv', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 214, 'text': 'import io', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 356, 'text': 'from .html_formatter import (', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 365, 'text': 'except ImportError:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 370, 'text': '# Auto-register built-in formatters when module is imported', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 6, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 8, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 32, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 33, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 34, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 35, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 37, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 10, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 12, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 23, 'text': 'from version_manager import create_version_manager', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 24, 'text': 'from mcp_client import SimpleMCPClient', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 133, 'text': 'import os', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 11, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 12, 'text': 'from tree_sitter_analyzer.security import ProjectBoundaryManager', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 33, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 113, 'text': 'import shutil', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 10, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 11, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 12, 'text': 'from unittest.mock import MagicMock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 16, 'text': '# Import the module under test', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool_cli_compatible import (', 'matches': [[70, 76]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 37, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 38, 'text': 'import java.util.Map;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 80, 'text': 'result.imports = [MagicMock(), MagicMock()] # 2 imports', 'matches': [[11, 17], [53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 259, 'text': 'assert result["element_counts"]["imports"] == 2', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 381, 'text': 'assert result["element_counts"]["imports"] == 0', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 407, 'text': 'assert result["element_counts"]["imports"] == 0', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 422, 'text': 'result_no_package.imports = []', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 443, 'text': 'result_no_annotations.imports = []', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 478, 'text': 'with patch("mcp.types.Tool", side_effect=ImportError):', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 534, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 550, 'text': 'import asyncio', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 597, 'text': 'import time', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 622, 'text': 'large_result.imports = [MagicMock() for _ in range(1000)]', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 636, 'text': 'assert result["element_counts"]["imports"] == 1000', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 6, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 7, 'text': 'from .java_formatter import JavaTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 8, 'text': 'from .javascript_formatter import JavaScriptTableFormatter', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 9, 'text': 'from .python_formatter import PythonTableFormatter', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 10, 'text': 'from .typescript_formatter import TypeScriptTableFormatter', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 10, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 12, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 13, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 15, 'text': 'from .. import __version__', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 18, 'text': 'from mcp.server import Server', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 19, 'text': 'from mcp.server.models import InitializationOptions', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 20, 'text': 'from mcp.server.stdio import stdio_server', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 21, 'text': 'from mcp.types import Resource, TextContent, Tool', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 24, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 48, 'text': 'from .. import api', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 49, 'text': 'from ..utils import log_error, log_info', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 69, 'text': 'raise ImportError("MCP library not available. Please install mcp package.")', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 12, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 79, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 80, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 81, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 82, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 84, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 86, 'text': '# Handle malformed data where import is a string', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 87, 'text': 'import_statement = imp', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 89, 'text': 'import_statement = imp.get("statement", "")', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 90, 'text': 'if not import_statement:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 91, 'text': '# Construct import statement from parts', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 95, 'text': 'import_statement = f"import {name} from {source};"', 'matches': [[28, 34], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 97, 'text': 'import_statement = str(imp)', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 98, 'text': 'lines.append(import_statement)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 567, 'text': 'import json', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_simplified_version_manager.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_simplified_version_manager.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_simplified_version_manager.py', 'line': 13, 'text': 'from tests.compatibility_test.version_manager import VersionManager', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 6, 'text': 'import csv', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 7, 'text': 'import io', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 8, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 52, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 8, 'text': 'from typing import TYPE_CHECKING, Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 10, 'text': 'from ..models import AnalysisResult', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 13, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 18, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 46, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 54, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 71, 'text': 'from ..constants import (', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 75, 'text': 'ELEMENT_TYPE_IMPORT,', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 83, 'text': 'imports = [e for e in elements if is_element_of_type(e, ELEMENT_TYPE_IMPORT)]', 'matches': [[8, 14], [77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 107, 'text': '"imports": [', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 109, 'text': 'for imp in imports', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 127, 'text': '"import_count": len(imports),', 'matches': [[17, 23], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 143, 'text': 'from ..models import AnalysisResult', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\tools\\__init__.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 8, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 11, 'text': 'from typing import Any, Dict, List, Optional, Union', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 13, 'text': 'from colored_logger import get_logger', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 12, 'text': 'from ..models import CodeElement, MarkupElement, StyleElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 13, 'text': 'from .base_formatter import BaseFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 14, 'text': 'from .formatter_registry import IFormatter', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 17, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError, ValidationError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 26, 'text': 'from tree_sitter_analyzer.security.validator import SecurityValidator', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 265, 'text': 'import platform', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 266, 'text': 'from unittest.mock import patch', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_data\\small_sample.py', 'line': 7, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_data\\small_sample.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_data\\small_sample.py', 'line': 9, 'text': 'from typing import List, Dict, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 16, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 17, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 18, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 19, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 20, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 21, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 22, 'text': 'from typing import Any, Dict, List, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 24, 'text': 'from colored_logger import get_logger', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 25, 'text': 'from test_case_loader import TestCaseLoader', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 321, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 358, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 408, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 15, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 17, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 18, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 19, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 21, 'text': 'from ..core.analysis_engine import AnalysisRequest, UnifiedAnalysisEngine', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 22, 'text': 'from ..models import AnalysisResult', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 139, 'text': '- imports', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 154, 'text': 'from ..constants import (', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 158, 'text': 'ELEMENT_TYPE_IMPORT,', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 166, 'text': 'imports = [e for e in elements if is_element_of_type(e, ELEMENT_TYPE_IMPORT)]', 'matches': [[8, 14], [77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 178, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 179, 'text': '{"name": imp.name, "type": str(type(imp).__name__)} for imp in imports', 'matches': [[79, 85]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 357, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_service.py', 'line': 8, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_service.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_service.py', 'line': 12, 'text': 'from tree_sitter_analyzer.core.parser import ParseResult', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_service.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_service.py', 'line': 268, 'text': 'mock_loader.list_queries.return_value = ["methods", "class", "imports"]', 'matches': [[74, 80]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_service.py', 'line': 272, 'text': 'assert result == ["methods", "class", "imports"]', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 11, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 13, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 14, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 15, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 17, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 18, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 19, 'text': 'from typing import List, Dict, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 20, 'text': 'from concurrent.futures import ThreadPoolExecutor', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 21, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 25, 'text': 'import questionary', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 26, 'text': 'from rich.console import Console', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 27, 'text': 'from rich.progress import Progress, TaskID, SpinnerColumn, TextColumn, BarColumn, TimeElapsedColumn', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 28, 'text': 'from rich.table import Table', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 29, 'text': 'from rich.panel import Panel', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 30, 'text': 'from rich.text import Text', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 31, 'text': 'from rich.live import Live', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 32, 'text': 'from packaging import version', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 33, 'text': 'import yaml', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 34, 'text': 'except ImportError as e:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 127, 'text': '"import tree_sitter_analyzer; print(tree_sitter_analyzer.__version__)"', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 273, 'text': 'import urllib.request', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 274, 'text': 'import json', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 489, 'text': '"import tree_sitter_analyzer; print(tree_sitter_analyzer.__version__)"', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 9, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 10, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 11, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 12, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 13, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 14, 'text': 'from pathlib import Path as PathClass', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 15, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 18, 'text': 'from mcp.server import Server', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 19, 'text': 'from mcp.server.models import InitializationOptions', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 20, 'text': 'from mcp.server.stdio import stdio_server', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 21, 'text': 'from mcp.types import Resource, TextContent, Tool', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 24, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 48, 'text': 'from ..constants import (', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 51, 'text': 'ELEMENT_TYPE_IMPORT,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 56, 'text': 'from ..core.analysis_engine import get_analysis_engine', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 57, 'text': 'from ..project_detector import detect_project_root', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 58, 'text': 'from ..security import SecurityValidator', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 59, 'text': 'from ..utils import setup_logger', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 60, 'text': 'from . import MCP_INFO', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 61, 'text': 'from .resources import CodeFileResource, ProjectStatsResource', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 62, 'text': 'from .tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 63, 'text': 'from .tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 64, 'text': 'from .tools.list_files_tool import ListFilesTool', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 65, 'text': 'from .tools.query_tool import QueryTool', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 66, 'text': 'from .tools.read_partial_tool import ReadPartialTool', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 67, 'text': 'from .tools.search_content_tool import SearchContentTool', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 68, 'text': 'from .tools.table_format_tool import TableFormatTool', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 70, 'text': '# Import UniversalAnalyzeTool at module level for test compatibility', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 72, 'text': 'from .tools.universal_analyze_tool import UniversalAnalyzeTool', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 73, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 159, 'text': 'from .utils.error_handler import MCPError', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 196, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 197, 'text': 'from ..language_detector import detect_language_from_file', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 239, 'text': 'imports_count = len(', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 240, 'text': '[e for e in elements if is_element_of_type(e, ELEMENT_TYPE_IMPORT)]', 'matches': [[71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 249, 'text': '+ imports_count', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 271, 'text': '"imports": imports_count,', 'matches': [[21, 27], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 639, 'text': 'from mcp.types import Prompt # type: ignore', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\__init__.py', 'line': 14, 'text': 'from .boundary_manager import ProjectBoundaryManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\__init__.py', 'line': 15, 'text': 'from .regex_checker import RegexSafetyChecker', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\__init__.py', 'line': 16, 'text': 'from .validator import SecurityValidator', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 13, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 14, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 15, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 18, 'text': 'from colorama import Fore, Back, Style, init', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 22, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 242, 'text': 'import time', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 15, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 17, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 18, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 19, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 20, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 21, 'text': 'from typing import Any, Dict, List, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 200, 'text': 'important_fields = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 205, 'text': 'for field in important_fields:', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 559, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 9, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 10, 'text': 'import importlib.metadata', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 11, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 12, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 13, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 15, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 17, 'text': 'from .. import api', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 59, 'text': 'version = importlib.metadata.version("tree-sitter-analyzer")', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 60, 'text': 'except importlib.metadata.PackageNotFoundError:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_to_pypi.py', 'line': 7, 'text': 'import getpass', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_to_pypi.py', 'line': 8, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_to_pypi.py', 'line': 9, 'text': 'import subprocess # nosec B404', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_to_pypi.py', 'line': 10, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_to_pypi.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_to_pypi.py', 'line': 18, 'text': 'import tomllib', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_to_pypi.py', 'line': 23, 'text': 'except ImportError:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_to_pypi.py', 'line': 29, 'text': 'import re', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_to_pypi.py', 'line': 48, 'text': 'import tree_sitter_analyzer', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_to_pypi.py', 'line': 143, 'text': 'import json', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_to_pypi.py', 'line': 144, 'text': 'import urllib.request', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_to_pypi.py', 'line': 166, 'text': 'import requests', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_to_pypi.py', 'line': 399, 'text': '\' python -c "import tree_sitter_analyzer; print(tree_sitter_analyzer.__version__)"\'', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 20, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 21, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 22, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 23, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 24, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 25, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 26, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 27, 'text': 'import importlib', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 28, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 29, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 30, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 31, 'text': 'from typing import Any, Dict, List, Optional, Set', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 38, 'text': 'from config_manager import ConfigManager', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 39, 'text': 'from colored_logger import ColoredLogger', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 40, 'text': 'from test_case_loader import TestCaseLoader', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 43, 'text': 'from version_manager import VersionManager, create_version_manager', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 69, 'text': 'import tempfile', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 142, 'text': "script = f'''import sys", 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 143, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 144, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 145, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 152, 'text': 'from {module_path}.mcp.tools.{module_name} import {class_name}', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 241, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 242, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[66, 72]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 243, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[66, 72]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 244, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 245, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 246, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[68, 74]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 247, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 259, 'text': 'except ImportError as e:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_filter.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_filter.py', 'line': 10, 'text': 'from tree_sitter_analyzer.core.query_filter import QueryFilter', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 12, 'text': 'from ..exceptions import SecurityError', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 13, 'text': 'from ..utils import log_debug, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 14, 'text': 'from .boundary_manager import ProjectBoundaryManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 15, 'text': 'from .regex_checker import RegexSafetyChecker', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 350, 'text': 'import platform', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 356, 'text': 'import stat', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 368, 'text': 'import ctypes', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 369, 'text': 'from ctypes import wintypes', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 383, 'text': 'except (ImportError, AttributeError, OSError):', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 426, 'text': 'import platform', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 480, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 481, 'text': 'import tempfile', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 15, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 17, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 18, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 19, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 20, 'text': 'from typing import Any, Dict, List, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 466, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\resources\\__init__.py', 'line': 18, 'text': 'from .code_file_resource import CodeFileResource', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\resources\\__init__.py', 'line': 19, 'text': 'from .project_stats_resource import ProjectStatsResource', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 17, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 18, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 19, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 21, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 129, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 130, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 131, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 132, 'text': 'from typing import Dict, List, Any, Optional, Union, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 133, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 134, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 135, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 136, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 386, 'text': 'import random', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_interactive.py', 'line': 7, 'text': 'import getpass', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_interactive.py', 'line': 8, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_interactive.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_interactive.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_interactive.py', 'line': 12, 'text': 'import toml', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\upload_interactive.py', 'line': 131, 'text': '\' python -c "import tree_sitter_analyzer; print(tree_sitter_analyzer.__version__)"\'', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 10, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 12, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 13, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 15, 'text': 'from typing import Any, Dict, List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 18, 'text': 'from version_manager import VersionManager, create_version_manager', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 21, 'text': 'from mcp import ClientSession, StdioServerParameters', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 22, 'text': 'from mcp.client.stdio import stdio_client', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 24, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 9, 'text': 'from unittest.mock import Mock', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.query import QueryExecutor', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 14, 'text': 'from tree_sitter_analyzer.exceptions import QueryError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 259, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 303, 'text': 'import time', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 323, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 364, 'text': 'import importlib.util', 'matches': [[12, 18], [19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 366, 'text': 'tree_sitter_spec = importlib.util.find_spec("tree_sitter")', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 388, 'text': 'except ImportError:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\regex_checker.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\regex_checker.py', 'line': 10, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\regex_checker.py', 'line': 12, 'text': 'from ..utils import log_debug, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 13, 'text': 'import pytest_asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp import MCP_INFO', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 25, 'text': 'from tree_sitter_analyzer.core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 26, 'text': 'from tree_sitter_analyzer.core.cache_service import CacheService', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 143, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 14, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 15, 'text': 'import gc', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 16, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 17, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 18, 'text': 'import warnings', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 19, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 22, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 23, 'text': 'import pytest_asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.utils import (', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 138, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 180, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 181, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 220, 'text': 'from typing import List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\config_manager.py', 'line': 8, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\config_manager.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\config_manager.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\config_manager.py', 'line': 11, 'text': 'from typing import Any, Dict, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\boundary_manager.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\boundary_manager.py', 'line': 11, 'text': 'from ..exceptions import SecurityError', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\boundary_manager.py', 'line': 12, 'text': 'from ..utils import log_debug, log_info, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 15, 'text': 'from tree_sitter_analyzer.core.engine import AnalysisEngine', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 16, 'text': 'from tree_sitter_analyzer.exceptions import AnalysisError, ParseError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 17, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 83, 'text': '"import", # Incomplete import', 'matches': [[13, 19], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 195, 'text': 'except (ImportError, AttributeError):', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 226, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 263, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 14, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 15, 'text': 'import ast', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 16, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 17, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 18, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 76, 'text': 'self._check_imports(file_path, tree, content)', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 176, 'text': 'def _check_imports(self, file_path: Path, tree: ast.AST, content: str):', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 177, 'text': '"""Check import organization and usage."""', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 178, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 180, 'text': 'if isinstance(node, ast.Import | ast.ImportFrom):', 'matches': [[36, 42], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 181, 'text': 'imports.append((node.lineno, node))', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 183, 'text': '# Check if imports are at the top (basic check)', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 184, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 185, 'text': 'first_import_line = imports[0][0]', 'matches': [[18, 24], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 188, 'text': '# Look for non-import, non-comment, non-docstring code before imports', 'matches': [[27, 33], [74, 80]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 189, 'text': 'for _i, line in enumerate(lines[: first_import_line - 1], 1):', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 201, 'text': '"import_order",', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 202, 'text': '"Imports should be at the top of the file",', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\llm_code_checker.py', 'line': 203, 'text': 'first_import_line,', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\config_manager.py', 'line': 8, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\config_manager.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\config_manager.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\config_manager.py', 'line': 11, 'text': 'from typing import Any, Dict, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\collect_project_metrics.py', 'line': 6, 'text': 'from collections import defaultdict', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\collect_project_metrics.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 13, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 7, 'text': 'import importlib', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 9, 'text': 'from .utils import log_error', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 23, 'text': '"import": "(import_declaration) @import",', 'matches': [[13, 19], [24, 30], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 41, 'text': '"import": "Extract import statements",', 'matches': [[9, 15], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 76, 'text': 'module = importlib.import_module(module_name)', 'matches': [[21, 27], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 96, 'text': 'except ImportError:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 179, 'text': 'importlib.import_module(module_name)', 'matches': [[20, 26], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 181, 'text': 'except ImportError:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 189, 'text': 'return ["functions", "classes", "variables", "imports"]', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 17, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 18, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 19, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 20, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 22, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 69, 'text': 'import org.junit.Test;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 70, 'text': 'import static org.junit.Assert.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 97, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 98, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 99, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 276, 'text': '{"roots": [temp_project], "query": "import", "total_only": True}', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 281, 'text': 'assert result > 0 # importステートメントが存在するはず', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 564, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 10, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 12, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 13, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 15, 'text': 'from typing import Any, Dict, List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 18, 'text': 'from version_manager import VersionManager, create_version_manager', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 21, 'text': 'from mcp import ClientSession, StdioServerParameters', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 22, 'text': 'from mcp.client.stdio import stdio_client', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 24, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\check_quality.py', 'line': 9, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\check_quality.py', 'line': 10, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\check_quality.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\check_quality.py', 'line': 12, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 20, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 21, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 22, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 23, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 24, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 25, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 26, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 27, 'text': 'import importlib', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 28, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 29, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 30, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 31, 'text': 'from typing import Any, Dict, List, Optional, Set', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 38, 'text': 'from config_manager import ConfigManager', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 39, 'text': 'from colored_logger import ColoredLogger', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 40, 'text': 'from test_case_loader import TestCaseLoader', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 43, 'text': 'from version_manager import VersionManager, create_version_manager', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 69, 'text': 'import tempfile', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 142, 'text': "script = f'''import sys", 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 143, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 144, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 145, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 152, 'text': 'from {module_path}.mcp.tools.{module_name} import {class_name}', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 241, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 242, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[66, 72]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 243, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[66, 72]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 244, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 245, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 246, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[68, 74]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 247, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 259, 'text': 'except ImportError as e:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 13, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 14, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 15, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 16, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 17, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 19, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 44, 'text': 'import java.util.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 45, 'text': 'import java.util.concurrent.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 46, 'text': 'import java.util.stream.Collectors;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 163, 'text': ').write_text("""import { EventEmitter } from \'events\';', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 297, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 298, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 299, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 300, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 301, 'text': 'from typing import Dict, List, Optional, Union, Callable, Any, TypeVar, Generic', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 302, 'text': 'from concurrent.futures import ThreadPoolExecutor', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 303, 'text': 'from contextlib import asynccontextmanager', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 504, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 505, 'text': 'from analytics_engine import create_default_engine', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 1049, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 1051, 'text': 'import psutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 11, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 13, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 14, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 15, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 17, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 18, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 19, 'text': 'from typing import List, Dict, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 20, 'text': 'from concurrent.futures import ThreadPoolExecutor', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 21, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 25, 'text': 'import questionary', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 26, 'text': 'from rich.console import Console', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 27, 'text': 'from rich.progress import Progress, TaskID, SpinnerColumn, TextColumn, BarColumn, TimeElapsedColumn', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 28, 'text': 'from rich.table import Table', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 29, 'text': 'from rich.panel import Panel', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 30, 'text': 'from rich.text import Text', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 31, 'text': 'from rich.live import Live', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 32, 'text': 'from packaging import version', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 33, 'text': 'import yaml', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 34, 'text': 'except ImportError as e:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 127, 'text': '"import tree_sitter_analyzer; print(tree_sitter_analyzer.__version__)"', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 273, 'text': 'import urllib.request', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 274, 'text': 'import json', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 489, 'text': '"import tree_sitter_analyzer; print(tree_sitter_analyzer.__version__)"', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\build_standalone.py', 'line': 7, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\build_standalone.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\build_standalone.py', 'line': 14, 'text': 'import importlib.util', 'matches': [[8, 14], [15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\build_standalone.py', 'line': 16, 'text': 'if importlib.util.find_spec("PyInstaller") is not None:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\build_standalone.py', 'line': 19, 'text': 'raise ImportError("PyInstaller not found")', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\build_standalone.py', 'line': 20, 'text': 'except ImportError:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\build_standalone.py', 'line': 38, 'text': 'hiddenimports=[', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 8, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 11, 'text': 'from typing import Any, Dict, List, Optional, Union', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 13, 'text': 'from colored_logger import get_logger', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 14, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 15, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 17, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 48, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 49, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 50, 'text': 'from typing import List, Dict, Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 177, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 178, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 179, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 180, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 181, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 182, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 187, 'text': 'from main import DataProcessor', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 296, 'text': 'from src.main import DataProcessor', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 531, 'text': '{"query": "import", "roots": ["src/"], "total_only": True}', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 536, 'text': 'assert result >= 2 # 複数のimport文が存在', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 655, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 681, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 10, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 17, 'text': 'from tree_sitter_analyzer.cli.commands import list_files_cli', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 53, 'text': 'from tree_sitter_analyzer.cli.commands import search_content_cli', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 95, 'text': 'from tree_sitter_analyzer.cli.commands import find_and_grep_cli', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 99, 'text': 'assert arguments["query"] == "import"', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 122, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_simplified_version_manager.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_simplified_version_manager.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_simplified_version_manager.py', 'line': 13, 'text': 'from tests.compatibility_test.version_manager import VersionManager', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 10, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 12, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 87, 'text': 'assert "## Imports" in stdout', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 118, 'text': ') # Total elements (methods, classes, fields, imports, package)', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 129, 'text': 'imports = [e for e in elements if e["type"] == "import"]', 'matches': [[8, 14], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 135, 'text': 'assert len(imports) == 8 # Import statements', 'matches': [[19, 25], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 207, 'text': 'assert "imports" in data', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 214, 'text': 'assert len(data["imports"]) == 8', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 12, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 13, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 15, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 17, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 19, 'text': 'from tree_sitter_analyzer.cli_main import main', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 28, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 127, 'text': 'assert "Imports: 1" in output # Sample file has 1 import', 'matches': [[16, 22], [59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 167, 'text': 'elif line.startswith(\'"Imports: \'):', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 168, 'text': 'element_counts["imports"] = int(line.split(": ")[1].rstrip(\'"\'))', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 180, 'text': 'assert element_counts.get("imports", 0) == 1, (', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 181, 'text': 'f"Expected 1 import, got {element_counts.get(\'imports\', 0)}"', 'matches': [[25, 31], [58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 198, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 371, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 470, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 642, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 945, 'text': 'return ["methods", "class", "imports"] # Return some available queries', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 989, 'text': 'return ["methods", "class", "imports"]', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 1314, 'text': 'import tempfile', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 4, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 5, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 463, 'text': 'import concurrent.futures', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 544, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_query_filter_integration.py', 'line': 8, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_query_filter_integration.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_query_filter_integration.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_query_filter_integration.py', 'line': 13, 'text': 'from tree_sitter_analyzer.cli.commands.query_command import QueryCommand', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 10, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 12, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 23, 'text': 'from version_manager import create_version_manager', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 24, 'text': 'from mcp_client import SimpleMCPClient', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 133, 'text': 'import os', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_query.py', 'line': 9, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_query.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_query.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.query import QueryExecutor', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 13, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 14, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 17, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 19, 'text': '# Import test targets', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 20, 'text': 'from tree_sitter_analyzer.core.cache_service import CacheEntry, CacheService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 237, 'text': 'from datetime import datetime, timedelta', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 256, 'text': 'from datetime import datetime, timedelta', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_argument_validation.py', 'line': 8, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_argument_validation.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_argument_validation.py', 'line': 12, 'text': 'from tree_sitter_analyzer.cli.argument_validator import CLIArgumentValidator', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 16, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 17, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 18, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 19, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 20, 'text': 'from typing import Any, Dict, List, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 495, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 12, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 16, 'text': 'from tree_sitter_analyzer.core.parser import Parser, ParseResult', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 372, 'text': 'import java.util.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 373, 'text': 'import java.io.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 423, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 424, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 425, 'text': 'from typing import List, Dict, Optional, Union', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 426, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 427, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 13, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 14, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 15, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 16, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 18, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 20, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError, ValidationError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 27, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 28, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 135, 'text': 'import java.security.SecureRandom;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 136, 'text': 'import java.util.logging.Logger;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 178, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 179, 'text': 'import hashlib', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 180, 'text': 'import secrets', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 181, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_analysis_engine.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_analysis_engine.py', 'line': 18, 'text': '# Import test targets', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_analysis_engine.py', 'line': 19, 'text': 'from tree_sitter_analyzer.core.analysis_engine import (', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_analysis_engine.py', 'line': 74, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 7, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 8, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 10, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 11, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 12, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 13, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 14, 'text': 'import venv', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 15, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 16, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 17, 'text': 'from typing import Dict, List, Any, Optional, Union', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 18, 'text': 'import copy', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 12, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 13, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 18, 'text': 'from tree_sitter_analyzer.cli_main import main', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 88, 'text': '"imports",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 11, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 12, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 13, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 15, 'text': 'from typing import Dict, Any, Optional, List', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 103, 'text': '"import tree_sitter_analyzer; print(tree_sitter_analyzer.__version__)"],', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__main__.py', 'line': 9, 'text': 'from ..cli_main import main', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 12, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 16, 'text': 'from tree_sitter_analyzer.core.engine import AnalysisEngine', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 17, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 279, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 320, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 321, 'text': 'from typing import List', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 13, 'text': 'import gc', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 14, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 15, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 16, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 17, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 19, 'text': 'import psutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 20, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 87, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 88, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 89, 'text': 'import java.util.Map;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 90, 'text': 'import java.util.HashMap;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 152, 'text': 'from typing import List, Dict, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 153, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 154, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 155, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 296, 'text': "import React, {{ useState, useEffect, useCallback, useMemo }} from 'react';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 573, 'text': '("import", ["*.java", "*.py", "*.js"]),', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 743, 'text': 'queries = ["class", "function", "import", "def", "const"]', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 6, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 7, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 11, 'text': 'from tree_sitter_analyzer.core.engine import AnalysisEngine', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 12, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 58, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 78, 'text': 'assert "import" in element_types', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_find_and_grep_tool_file_output.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_find_and_grep_tool_file_output.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_find_and_grep_tool_file_output.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_find_and_grep_tool_file_output.py', 'line': 12, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_find_and_grep_tool_file_output.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_find_and_grep_tool_file_output.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 8, 'text': 'from .info_commands import (', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 16, 'text': '# Modern framework imports', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 18, 'text': 'from ..cli_main import main', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 19, 'text': 'from ..core.analysis_engine import get_analysis_engine', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 20, 'text': 'from ..query_loader import QueryLoader', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 23, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 24, 'text': '# Minimal fallback for import safety', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 12, 'text': 'from unittest.mock import AsyncMock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_manager_factory.py', 'line': 12, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_manager_factory.py', 'line': 13, 'text': 'import threading', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_manager_factory.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_manager_factory.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.utils.file_output_factory import (', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_manager_factory.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.utils.file_output_manager import FileOutputManager', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_manager_factory.py', 'line': 327, 'text': '# (Fallback testing is complex due to import mechanics)', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 8, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 11, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 12, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 16, 'text': 'from tree_sitter_analyzer.interfaces.cli import (', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 13, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 14, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 15, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 16, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 18, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 8, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 245, 'text': 'test_file.write_text("important data here\\n")', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 255, 'text': '"lines": {"text": "important data here"},', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_utils.py', 'line': 8, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_utils.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_utils.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_utils.py', 'line': 13, 'text': '# Import the module under test', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_utils.py', 'line': 14, 'text': 'from tree_sitter_analyzer.encoding_utils import (', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_utils.py', 'line': 253, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_exceptions.py', 'line': 9, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_exceptions.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_exceptions.py', 'line': 13, 'text': 'from tree_sitter_analyzer.exceptions import (', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_exceptions.py', 'line': 93, 'text': 'from pathlib import Path', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 8, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 9, 'text': 'from argparse import Namespace', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 11, 'text': 'from ..language_detector import detect_language_from_file, detector', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 12, 'text': 'from ..output_manager import output_data, output_error, output_info, output_list', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 13, 'text': 'from ..query_loader import query_loader', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 116, 'text': 'from itertools import islice', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatter_registry.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatter_registry.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatter_registry.py', 'line': 13, 'text': 'from tree_sitter_analyzer.formatters.formatter_registry import (', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatter_registry.py', 'line': 21, 'text': 'from tree_sitter_analyzer.models import (', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatter_registry.py', 'line': 75, 'text': 'from tree_sitter_analyzer.formatters.formatter_registry import (', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatter_registry.py', 'line': 227, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\__init__.py', 'line': 15, 'text': 'from tree_sitter_analyzer.queries import get_query, list_queries', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\__init__.py', 'line': 24, 'text': 'from ..query_loader import get_query, is_language_supported, list_queries, query_loader', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_formatter.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_formatter.py', 'line': 11, 'text': 'from tree_sitter_analyzer.formatters.formatter_registry import IFormatter', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_formatter.py', 'line': 12, 'text': 'from tree_sitter_analyzer.formatters.html_formatter import (', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_formatter.py', 'line': 17, 'text': 'from tree_sitter_analyzer.models import (', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_formatter.py', 'line': 672, 'text': 'from tree_sitter_analyzer.formatters.formatter_registry import FormatterRegistry', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_formatter.py', 'line': 682, 'text': 'from tree_sitter_analyzer.formatters.formatter_registry import FormatterRegistry', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 13, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 14, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 15, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 16, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 17, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 18, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 20, 'text': 'import psutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 21, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 27, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 28, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 29, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 30, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 68, 'text': 'import java.time.LocalDateTime;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 69, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 70, 'text': 'import java.util.UUID;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 139, 'text': 'import com.enterprise.domain.User;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 140, 'text': 'import com.enterprise.repository.UserRepository;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 141, 'text': 'import org.springframework.beans.factory.annotation.Autowired;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 142, 'text': 'import org.springframework.stereotype.Service;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 143, 'text': 'import org.springframework.transaction.annotation.Transactional;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 145, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 146, 'text': 'import java.util.Optional;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 147, 'text': 'import java.util.UUID;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 254, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 255, 'text': 'from typing import List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 256, 'text': 'from uuid import UUID, uuid4', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 257, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 258, 'text': 'from enum import Enum', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 405, 'text': "import React, { useState, useEffect, useCallback } from 'react';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 1116, 'text': 'import_search = await search_tool.execute(', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 1119, 'text': '"query": "import.*User|from.*user",', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 1125, 'text': 'assert import_search["success"]', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 1126, 'text': 'results["steps"].append(("import_search", import_search["count"]))', 'matches': [[34, 40], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_cache.py', 'line': 6, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_cache.py', 'line': 7, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_cache.py', 'line': 8, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_cache.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_cache.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_cache.py', 'line': 13, 'text': 'from tree_sitter_analyzer.encoding_utils import (', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 11, 'text': 'from tree_sitter_analyzer.formatters.base_formatter import BaseTableFormatter', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 12, 'text': 'from tree_sitter_analyzer.formatters.formatter_factory import TableFormatterFactory', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 13, 'text': 'from tree_sitter_analyzer.formatters.java_formatter import JavaTableFormatter', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 14, 'text': 'from tree_sitter_analyzer.formatters.javascript_formatter import (', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 17, 'text': 'from tree_sitter_analyzer.formatters.python_formatter import PythonTableFormatter', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 18, 'text': 'from tree_sitter_analyzer.formatters.typescript_formatter import (', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 432, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 491, 'text': '"imports": [{"statement": "java.util.List"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_error_handling_improvements.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_error_handling_improvements.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_error_handling_improvements.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_error_handling_improvements.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 83, 'text': '# Import and export statements', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 84, 'text': 'IMPORTS = """', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 85, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 86, 'text': 'source: (string) @import.source) @import.statement', 'matches': [[22, 28], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 88, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 89, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 90, 'text': '(named_imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 91, 'text': '(import_specifier', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 92, 'text': 'name: (identifier) @import.name', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 93, 'text': 'alias: (identifier)? @import.alias)))) @import.named', 'matches': [[38, 44], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 95, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 96, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 97, 'text': '(import_default_specifier', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 98, 'text': '(identifier) @import.default))) @import.default', 'matches': [[26, 32], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 100, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 101, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 102, 'text': '(namespace_import', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 103, 'text': '(identifier) @import.namespace))) @import.namespace', 'matches': [[26, 32], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 105, 'text': '(type_import', 'matches': [[6, 12]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 106, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 107, 'text': '(named_imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 108, 'text': '(import_specifier', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 109, 'text': 'name: (identifier) @import.type.name', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 110, 'text': 'alias: (identifier)? @import.type.alias)))) @import.type', 'matches': [[38, 44], [61, 67]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 193, 'text': '"imports": {', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 194, 'text': '"query": IMPORTS,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 195, 'text': '"description": "Search all import statements including type imports",', 'matches': [[35, 41], [68, 74]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 327, 'text': '# Add import-specific queries', 'matches': [[6, 12]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 328, 'text': 'ALL_QUERIES["import_statement"] = {', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 330, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 331, 'text': 'source: (string) @import.source) @import.statement', 'matches': [[22, 28], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 333, 'text': '"description": "Search import statements with details",', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 336, 'text': 'ALL_QUERIES["type_import"] = {', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 338, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 340, 'text': '(import_clause) @import.clause', 'matches': [[5, 11], [21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 341, 'text': 'source: (string) @import.source) @type_import', 'matches': [[22, 28], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 343, 'text': '"description": "Search type import statements",', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 757, 'text': 'ALL_QUERIES["import_type"] = {', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 759, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 760, 'text': '"type" @import_type.keyword', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 761, 'text': '(import_clause) @import_type.clause', 'matches': [[5, 11], [21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 762, 'text': 'source: (string) @import_type.source) @import_type.statement', 'matches': [[22, 28], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 764, 'text': '"description": "Search import type statements",', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 12, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 57, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 58, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 59, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 60, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 62, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 63, 'text': 'import_statement = imp.get("statement", "")', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 64, 'text': 'if not import_statement:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 65, 'text': '# Construct import statement from parts', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 68, 'text': 'is_type_import = imp.get("is_type_import", False)', 'matches': [[28, 34], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 70, 'text': 'type_prefix = "type " if is_type_import else ""', 'matches': [[57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 71, 'text': 'import_statement = f"import {type_prefix}{name} from {source};"', 'matches': [[24, 30], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 72, 'text': 'lines.append(import_statement)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 462, 'text': 'elif element_type == "import":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 463, 'text': 'return "Import"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\conftest.py', 'line': 6, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\conftest.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\conftest.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\conftest.py', 'line': 63, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\conftest.py', 'line': 64, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 12, 'text': 'from tree_sitter_analyzer.languages.html_plugin import HtmlElementExtractor, HtmlPlugin', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 13, 'text': 'from tree_sitter_analyzer.models import MarkupElement', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 55, 'text': 'def test_extract_imports_returns_empty(self):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 56, 'text': '"""Test that HTML extractor returns empty list for imports"""', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 57, 'text': 'result = self.extractor.extract_imports(None, "")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 143, 'text': 'import tempfile', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 10, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 15, 'text': 'from tree_sitter_analyzer.cli_main import main', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 16, 'text': 'from tree_sitter_analyzer.constants import (', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 19, 'text': 'ELEMENT_TYPE_IMPORT,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 35, 'text': 'assert ELEMENT_TYPE_IMPORT == "import"', 'matches': [[28, 34], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 88, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 149, 'text': 'elif line.startswith(\'"Imports: \'):', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 150, 'text': 'element_counts["imports"] = int(line.split(": ")[1].rstrip(\'"\'))', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 162, 'text': 'assert element_counts.get("imports", 0) == 1, (', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 163, 'text': 'f"Expected 1 import, got {element_counts.get(\'imports\', 0)}"', 'matches': [[25, 31], [58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 284, 'text': 'elif line.startswith(\'"Imports: \'):', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 286, 'text': 'advanced_counts["imports"] = int(line.split(": ")[1].rstrip(\'"\'))', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 410, 'text': 'elif line.startswith(\'"Imports: \'):', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 411, 'text': 'element_counts["imports"] = int(line.split(": ")[1].rstrip(\'"\'))', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 413, 'text': '# For an empty class, we should have 1 class, 0 methods, 0 fields, 0 imports', 'matches': [[77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 419, 'text': 'assert element_counts.get("imports", 0) == 0, (', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 420, 'text': '"Empty class should have 0 imports"', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 12, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 16, 'text': 'from tree_sitter_analyzer.interfaces.mcp_adapter import MCPAdapter, MCPServerAdapter', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 17, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 58, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 621, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 622, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 8, 'text': 'from .advanced_command import AdvancedCommand', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 9, 'text': 'from .base_command import BaseCommand', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 10, 'text': 'from .default_command import DefaultCommand', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 11, 'text': 'from .partial_read_command import PartialReadCommand', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 12, 'text': 'from .query_command import QueryCommand', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 13, 'text': 'from .structure_command import StructureCommand', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 14, 'text': 'from .summary_command import SummaryCommand', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 15, 'text': 'from .table_command import TableCommand', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 6, 'text': 'Covers functions, classes, variables, imports, decorators, async/await,', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 32, 'text': '# Import statements', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 33, 'text': 'IMPORTS = """', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 34, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 35, 'text': 'name: (dotted_name) @import.name) @import.statement', 'matches': [[25, 31], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 37, 'text': '(import_from_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 38, 'text': 'module_name: (dotted_name)? @import.module', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 39, 'text': 'name: (dotted_name) @import.name) @import.from', 'matches': [[25, 31], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 41, 'text': '(import_from_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 42, 'text': 'module_name: (dotted_name)? @import.module', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 43, 'text': 'name: (import_list) @import.list) @import.from_list', 'matches': [[11, 17], [25, 31], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 45, 'text': '(aliased_import', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 46, 'text': 'name: (dotted_name) @import.name', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 47, 'text': 'alias: (identifier) @import.alias) @import.aliased', 'matches': [[25, 31], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 322, 'text': '# --- Imports ---', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 323, 'text': '"import": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 324, 'text': '(import_statement) @import', 'matches': [[5, 11], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 326, 'text': '"import_statement": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 327, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 328, 'text': 'name: (dotted_name) @import_name) @import_statement', 'matches': [[29, 35], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 330, 'text': '"import_from": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 331, 'text': '(import_from_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 333, 'text': 'name: (dotted_name) @import_name) @import_from', 'matches': [[29, 35], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 335, 'text': '"import_from_list": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 336, 'text': '(import_from_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 338, 'text': 'name: (import_list) @import_list) @import_from_list', 'matches': [[15, 21], [29, 35], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 340, 'text': '"aliased_import": """', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 341, 'text': '(aliased_import', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 342, 'text': 'name: (dotted_name) @import_name', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 343, 'text': 'alias: (identifier) @alias) @aliased_import', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 345, 'text': '"import_star": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 346, 'text': '(import_from_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 348, 'text': 'name: (wildcard_import) @star_import) @import_star', 'matches': [[24, 30], [38, 44], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 664, 'text': '"import": "Search import statements",', 'matches': [[5, 11], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 665, 'text': '"import_statement": "Search import statements with details",', 'matches': [[5, 11], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 666, 'text': '"import_from": "Search from-import statements",', 'matches': [[5, 11], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 667, 'text': '"import_from_list": "Search from-import with multiple names",', 'matches': [[5, 11], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 668, 'text': '"aliased_import": "Search aliased imports (as keyword)",', 'matches': [[13, 19], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 669, 'text': '"import_star": "Search star imports (from module import *)",', 'matches': [[5, 11], [32, 38], [53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 733, 'text': 'ALL_QUERIES["imports"] = {', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 734, 'text': '"query": IMPORTS,', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 735, 'text': '"description": "Search all import statements",', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 11, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 15, 'text': 'from tree_sitter_analyzer.interfaces.cli_adapter import CLIAdapter', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 16, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 57, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 429, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 430, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 12, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 52, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 76, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 77, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 78, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 80, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 81, 'text': 'import_statement = imp.get("raw_text", "")', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 82, 'text': 'if not import_statement:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 87, 'text': 'import_statement = f"from {module_name} import {name}"', 'matches': [[24, 30], [64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 89, 'text': 'import_statement = f"import {name}"', 'matches': [[24, 30], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 90, 'text': 'lines.append(import_statement)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 446, 'text': '# Show important decorators', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 447, 'text': 'important = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 457, 'text': 'if any(imp in dec for imp in important):', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 12, 'text': 'from tree_sitter_analyzer.languages.css_plugin import CssElementExtractor, CssPlugin', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 13, 'text': 'from tree_sitter_analyzer.models import StyleElement', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 73, 'text': 'def test_extract_imports_returns_empty(self):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 74, 'text': '"""Test that CSS extractor returns empty list for imports"""', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 75, 'text': 'result = self.extractor.extract_imports(None, "")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 185, 'text': 'import tempfile', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 10, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 11, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 12, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 20, 'text': 'from tree_sitter_analyzer.cli_main import main', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 21, 'text': 'from tree_sitter_analyzer.core.analysis_engine import get_analysis_engine', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 27, 'text': 'import asyncio', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 29, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 39, 'text': 'import time', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 73, 'text': 'imports = [', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 76, 'text': 'if hasattr(e, "element_type") and e.element_type == "import"', 'matches': [[73, 79]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 236, 'text': '"imports": [', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 241, 'text': '"statement": getattr(i, "import_statement", ""),', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 247, 'text': 'for i in imports', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 267, 'text': '"import_count": len(imports),', 'matches': [[25, 31], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 281, 'text': 'import concurrent.futures', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 315, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 442, 'text': 'assert "imports" in json_output', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 470, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 485, 'text': 'assert isinstance(result["imports"], list)', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 497, 'text': '"import_count",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 553, 'text': 'import java.util.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 554, 'text': 'import java.io.Serializable;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 555, 'text': 'import static java.lang.Math.PI;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 660, 'text': '# Verify import information（フォールバック対応）', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 661, 'text': 'imports = result["imports"]', 'matches': [[8, 14], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 662, 'text': 'if len(imports) == 0:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 665, 'text': 'assert "import java.util.*;" in source_code, (', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 668, 'text': 'assert "import static java.lang.Math.PI;" in source_code, (', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 674, 'text': 'static_imports = [imp for imp in imports if imp["is_static"]]', 'matches': [[19, 25], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 676, 'text': 'if len(static_imports) == 0:', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 678, 'text': 'assert "import static java.lang.Math.PI;" in source_code, (', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 829, 'text': 'for imp in result["imports"]:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 830, 'text': 'required_import_keys = [', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 837, 'text': 'for key in required_import_keys:', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\argument_validator.py', 'line': 8, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 15, 'text': 'from tree_sitter_analyzer.language_detector import (', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 54, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 55, 'text': 'from sys import argv', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 167, 'text': '#import <Foundation/Foundation.h>', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 193, 'text': '#import "MyClass.h"', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 404, 'text': 'content = "#import <Foundation/Foundation.h>\\n@interface Test"', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 9, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 13, 'text': 'from tree_sitter_analyzer.formatters.javascript_formatter import (', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 32, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 34, 'text': '"statement": "import React from \'react\';",', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 39, 'text': '"statement": "import { useState, useEffect } from \'react\';",', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 273, 'text': 'assert "## Imports" in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 283, 'text': 'assert "import React from \'react\';" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 293, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 305, 'text': 'def test_format_full_table_with_import_construction(self, formatter):', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 306, 'text': '"""Test import statement construction when statement is missing"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 309, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 325, 'text': 'assert "import React from \'react\';" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 331, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 732, 'text': 'def test_format_full_table_no_imports(self, formatter):', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 733, 'text': '"""Test full table formatting without imports"""', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 736, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 746, 'text': 'assert "## Imports" not in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 752, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 768, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 784, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 802, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 818, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 850, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 907, 'text': '"imports": None,', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 925, 'text': '"imports": "not_a_list", # Should be list', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1070, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1075, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1076, 'text': '{"name": f"import{i}", "source": f"module{i}"} for i in range(100)', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1109, 'text': '"imports": [{"name": "モジュール", "source": "ライブラリ"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1130, 'text': '"imports": [{"name": "module<>", "source": "lib|pipe"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1145, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1149, 'text': '"imports": [{"name": "test", "source": "module"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1172, 'text': 'import queue', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1173, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1177, 'text': '"imports": [{"name": "test", "source": "module"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1228, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1284, 'text': '"import_count": 5,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1315, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1393, 'text': '"import_count": 4,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 9, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 12, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 16, 'text': 'from tree_sitter_analyzer.utils import log_error, log_info, log_warning', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 69, 'text': 'import fnmatch', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 551, 'text': 'from tree_sitter_analyzer.utils import log_info', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 633, 'text': 'import platform', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 11, 'text': 'from .base_formatter import BaseFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 513, 'text': 'import re', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 608, 'text': 'import json', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 620, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 15, 'text': 'from tree_sitter_analyzer.languages.javascript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 21, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import, Variable', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 140, 'text': '# Parameters may be empty due to mocking limitations - the important part is that the function is extracted', 'matches': [[67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 289, 'text': 'def test_extract_import_info_with_valid_node(self, extractor, mocker):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 290, 'text': '"""Test import info extraction with valid node"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 297, 'text': '# Mock string node for import source - "\'./module\'" is at position 16-26', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 305, 'text': 'source_code = "import foo from \'./module\';"', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 311, 'text': 'imp = extractor._extract_import_info_simple(mock_node)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 314, 'text': 'assert isinstance(imp, Import)', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 315, 'text': '# The import name extraction may return different values based on parsing', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 316, 'text': 'assert imp.name in ["import", "unknown", ""]', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 320, 'text': 'def test_extract_import_info_with_double_quotes(self, extractor, mocker):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 321, 'text': '"""Test import info extraction with double quotes"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 328, 'text': '# Mock string node for import source - \'"./module"\' is at position 16-26', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 336, 'text': 'source_code = \'import foo from "./module";\'', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 342, 'text': 'imp = extractor._extract_import_info_simple(mock_node)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 347, 'text': 'def test_extract_import_info_with_no_source(self, extractor, mocker):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 348, 'text': '"""Test import info extraction with no source node"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 353, 'text': 'extractor.source_code = "import;"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 354, 'text': 'extractor.content_lines = ["import;"]', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 356, 'text': 'imp = extractor._extract_import_info_simple(mock_node)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 358, 'text': '# The method may return an Import object with default values instead of None', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 359, 'text': 'assert imp is None or (isinstance(imp, Import) and imp.name == "unknown")', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 361, 'text': 'def test_extract_import_info_with_exception(self, extractor, mocker):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 362, 'text': '"""Test import info extraction with exception"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 370, 'text': 'imp = extractor._extract_import_info_simple(mock_node)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 432, 'text': 'def test_extract_imports_with_exception(self, extractor, mocker):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 433, 'text': '"""Test import extraction with exception during query"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 440, 'text': 'imports = extractor.extract_imports(mock_tree, "test code")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 442, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 528, 'text': 'def test_extract_imports_without_language(self, mocker):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 529, 'text': '"""Test import extraction without language"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 534, 'text': 'imports = extractor.extract_imports(mock_tree, "import \'./module\';")', 'matches': [[8, 14], [36, 42], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 536, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_factory_demo.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_factory_demo.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_factory_demo.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.utils.file_output_factory import (', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_factory_demo.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.utils.file_output_manager import FileOutputManager', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_factory_demo.py', 'line': 180, 'text': 'import threading', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_factory_demo.py', 'line': 181, 'text': 'import time', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_data\\small_sample.py', 'line': 7, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_data\\small_sample.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_data\\small_sample.py', 'line': 9, 'text': 'from typing import List, Dict, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 6, 'text': 'Covers functions, classes, variables, imports, exports, and modern JavaScript features.', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 142, 'text': '# --- Imports and Exports ---', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 143, 'text': '"import": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 144, 'text': '(import_statement) @import', 'matches': [[5, 11], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 146, 'text': '"import_statement": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 147, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 148, 'text': 'source: (string) @source) @import_statement', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 150, 'text': '"import_default": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 151, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 152, 'text': '(import_clause', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 153, 'text': '(import_default_specifier', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 155, 'text': 'source: (string) @source) @import_default', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 157, 'text': '"import_named": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 158, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 159, 'text': '(import_clause', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 160, 'text': '(named_imports', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 161, 'text': '(import_specifier', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 162, 'text': 'name: (identifier) @import_name', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 164, 'text': 'source: (string) @source) @import_named', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 166, 'text': '"import_namespace": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 167, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 168, 'text': '(import_clause', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 169, 'text': '(namespace_import', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 171, 'text': 'source: (string) @source) @import_namespace', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 173, 'text': '"dynamic_import": """', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 175, 'text': 'function: (identifier) @import_function', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 176, 'text': '(#match? @import_function "import")', 'matches': [[18, 24], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 177, 'text': 'arguments: (arguments (string) @source)) @dynamic_import', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 462, 'text': '"import": "Search import statements",', 'matches': [[5, 11], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 463, 'text': '"import_statement": "Search import statements with details",', 'matches': [[5, 11], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 464, 'text': '"import_default": "Search default imports",', 'matches': [[5, 11], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 465, 'text': '"import_named": "Search named imports",', 'matches': [[5, 11], [34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 466, 'text': '"import_namespace": "Search namespace imports",', 'matches': [[5, 11], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 467, 'text': '"dynamic_import": "Search dynamic imports",', 'matches': [[13, 19], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 566, 'text': 'IMPORTS = """', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 567, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 568, 'text': 'source: (string) @import.source) @import.statement', 'matches': [[22, 28], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 570, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 571, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 572, 'text': '(named_imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 573, 'text': '(import_specifier', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 574, 'text': 'name: (identifier) @import.name', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 575, 'text': 'alias: (identifier)? @import.alias)))) @import.named', 'matches': [[38, 44], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 577, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 578, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 579, 'text': '(import_default_specifier', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 580, 'text': '(identifier) @import.default))) @import.default', 'matches': [[26, 32], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 582, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 583, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 584, 'text': '(namespace_import', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 585, 'text': '(identifier) @import.namespace))) @import.namespace', 'matches': [[26, 32], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 633, 'text': 'ALL_QUERIES["imports"] = {', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 634, 'text': '"query": IMPORTS,', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 635, 'text': '"description": "Search all import statements and clauses",', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector.py', 'line': 11, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector.py', 'line': 12, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector.py', 'line': 14, 'text': 'from tree_sitter_analyzer.language_detector import (', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 6, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 10, 'text': 'from tree_sitter_analyzer.formatters.javascript_formatter import (', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 40, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 67, 'text': '"imports": [{"name": long_name, "source": long_name}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 84, 'text': '"imports": [{"name": special_chars, "source": special_chars}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 101, 'text': '"imports": [{"name": f"module{control_chars}", "source": "lib"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 329, 'text': 'import unicodedata', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 8, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 9, 'text': 'from unittest.mock import AsyncMock, Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 13, 'text': 'from tree_sitter_analyzer import __version__', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 14, 'text': 'from tree_sitter_analyzer.interfaces.mcp_server import (', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 49, 'text': 'with pytest.raises(ImportError, match="MCP library not available"):', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 261, 'text': 'class TestModuleImports:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 262, 'text': '"""Test module imports and dependencies."""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 264, 'text': 'def test_module_imports(self):', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 265, 'text': '"""Test that required modules can be imported."""', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 266, 'text': '# Test that the module can be imported', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 267, 'text': 'from tree_sitter_analyzer.interfaces import mcp_server', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 383, 'text': 'import inspect', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 390, 'text': 'import inspect', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\language_formatter_factory.py', 'line': 6, 'text': 'from .base_formatter import BaseFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\language_formatter_factory.py', 'line': 7, 'text': 'from .html_formatter import HtmlFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\language_formatter_factory.py', 'line': 8, 'text': 'from .markdown_formatter import MarkdownFormatter', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 16, 'text': 'from tree_sitter_analyzer.languages.javascript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 39, 'text': 'extractor.source_code = "import React from \'react\'; export default MyComponent;"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 55, 'text': 'extractor.source_code = "import Vue from \'vue\';"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 92, 'text': 'def test_parse_import_statement_default(self, extractor):', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 93, 'text': '"""Test parsing default import statements"""', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 94, 'text': 'result = extractor._parse_import_statement("import React from \'react\';")', 'matches': [[34, 40], [52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 96, 'text': 'import_type, names, source, is_default, is_namespace = result', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 97, 'text': 'assert import_type == "default"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 103, 'text': 'def test_parse_import_statement_named(self, extractor):', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 104, 'text': '"""Test parsing named import statements"""', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 105, 'text': 'result = extractor._parse_import_statement(', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 106, 'text': '"import { useState, useEffect } from \'react\';"', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 109, 'text': 'import_type, names, source, is_default, is_namespace = result', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 110, 'text': 'assert import_type == "named"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 117, 'text': 'def test_parse_import_statement_namespace(self, extractor):', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 118, 'text': '"""Test parsing namespace import statements"""', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 119, 'text': 'result = extractor._parse_import_statement("import * as React from \'react\';")', 'matches': [[34, 40], [52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 121, 'text': 'import_type, names, source, is_default, is_namespace = result', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 122, 'text': 'assert import_type == "namespace"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 234, 'text': 'imports = extractor._extract_commonjs_requires(mock_tree, source_code)', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 236, 'text': 'assert len(imports) == 2', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 237, 'text': 'assert imports[0].name == "fs"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 238, 'text': 'assert imports[0].module_path == "fs"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 239, 'text': 'assert imports[1].name == "path"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 240, 'text': 'assert imports[1].module_path == "path"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 276, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 434, 'text': 'def test_parse_import_statement_error(self, extractor):', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 435, 'text': '"""Test import statement parsing with malformed input"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 436, 'text': 'result = extractor._parse_import_statement("invalid import statement")', 'matches': [[34, 40], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\file_output_demo.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 6, 'text': 'Covers classes, methods, annotations, imports, and other Java-specific elements.', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 50, 'text': '# --- Imports and Packages ---', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 51, 'text': '"import": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 52, 'text': '(import_declaration) @import', 'matches': [[5, 11], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 54, 'text': '"static_import": """', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 55, 'text': '(import_declaration', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 56, 'text': '"static") @static_import', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 230, 'text': '"import_detailed": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 231, 'text': '(import_declaration', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 233, 'text': '(scoped_identifier) @import_path) @import_detailed', 'matches': [[27, 33], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 269, 'text': '"import": "Extract Java import statements",', 'matches': [[5, 11], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 292, 'text': '"import_detailed": "Extract detailed import statement information",', 'matches': [[5, 11], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 304, 'text': '"static_import": "Extract static import statements",', 'matches': [[12, 18], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_markdown.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_markdown.py', 'line': 10, 'text': 'from tree_sitter_analyzer.language_detector import LanguageDetector', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 8, 'text': 'from tree_sitter_analyzer.formatters.python_formatter import PythonTableFormatter', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 93, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 94, 'text': '{"name": "math", "module_name": "", "raw_text": "import math"},', 'matches': [[65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 98, 'text': '"raw_text": "from math import sqrt",', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 102, 'text': '"source_code": \'"""Calculator module for basic arithmetic operations."""\\n\\nimport math\\nfrom math import sqrt\\n\\nclass Calculator:\\n """A simple calculator class."""\\n precision = 2\\n \\n def add(self, a: int, b: int) -> int:\\n """Add two numbers."""\\n return a + b\',', 'matches': [[88, 94], [111, 117]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 145, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 158, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 173, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 187, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 195, 'text': 'def test_full_format_imports_section(self, formatter):', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 196, 'text': '"""Test full format imports section."""', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 201, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 202, 'text': '{"raw_text": "import os"},', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 203, 'text': '{"raw_text": "from typing import List"},', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 210, 'text': 'assert "## Imports" in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 212, 'text': 'assert "import os" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 213, 'text': 'assert "from typing import List" in result', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 214, 'text': 'assert "import json" in result # Fallback construction', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 240, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 264, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 281, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 315, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 735, 'text': 'data = {"source_code": "import os\\n\\nclass Test:\\n pass"}', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 763, 'text': 'def test_format_decorators_important(self, formatter):', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 764, 'text': '"""Test formatting important decorators."""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 778, 'text': 'def test_format_decorators_multiple_non_important(self, formatter):', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 779, 'text': '"""Test formatting multiple non-important decorators."""', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 798, 'text': '# Missing classes, functions, imports, etc.', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 812, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 841, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 874, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 905, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 924, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 969, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 10, 'text': 'from tree_sitter_analyzer.language_detector import (', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 91, 'text': 'import re', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 143, 'text': 'import re', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 258, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 269, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 283, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 294, 'text': 'content = "@media screen { .class { display: block; } } @import \'styles.css\'; @keyframes fade { from { opacity: 0; } }"', 'matches': [[65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 297, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 6, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 8, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 32, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 33, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 34, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 35, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 37, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 9, 'text': '# Import SafeStreamHandler directly from the main utils module', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 10, 'text': 'import importlib.util', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 12, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 13, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 14, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 15, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 16, 'text': 'from unittest.mock import MagicMock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 18, 'text': '# Import setup_logger from utils package', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 19, 'text': 'from tree_sitter_analyzer.utils import setup_logger', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 24, 'text': 'spec = importlib.util.spec_from_file_location("utils_module", utils_path)', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 25, 'text': 'utils_module = importlib.util.module_from_spec(spec)', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 52, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 82, 'text': '# Check handler type by class name instead of isinstance due to import differences', 'matches': [[72, 78]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 338, 'text': 'import sys', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 345, 'text': 'from io import StringIO', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 353, 'text': 'from io import StringIO', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 8, 'text': 'from tree_sitter_analyzer.formatters.python_formatter import PythonTableFormatter', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 52, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 65, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 103, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 140, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 161, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 183, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 211, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 244, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 281, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 312, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 342, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 362, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 383, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 502, 'text': 'def test_extract_module_docstring_with_imports_before(self, formatter):', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 503, 'text': '"""Test extracting module docstring with imports before it."""', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 505, 'text': '"source_code": """import os', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 506, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 507, 'text': "'''Module docstring after imports.'''", 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 514, 'text': 'assert result == "Module docstring after imports."', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 592, 'text': 'def test_format_decorators_mixed_important_and_custom(self, formatter):', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 593, 'text': '"""Test formatting mix of important and custom decorators."""', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 625, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 649, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 683, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 8, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 16, 'text': 'def test_main_module_import_only(self):', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 17, 'text': '"""Test for module import only"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 18, 'text': '# Verify that no import errors occur', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 20, 'text': 'import tree_sitter_analyzer.__main__ # noqa: F401', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 22, 'text': 'assert True # Import successful', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 23, 'text': 'except ImportError as e:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 24, 'text': 'pytest.fail(f"Failed to import __main__ module: {e}")', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 38, 'text': 'from tree_sitter_analyzer import cli', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 41, 'text': 'except ImportError:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 10, 'text': 'from collections import defaultdict', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 12, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 16, 'text': 'from tree_sitter_analyzer.core.analysis_engine import get_analysis_engine', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 17, 'text': 'from tree_sitter_analyzer.languages.css_plugin import CssPlugin', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 18, 'text': 'from tree_sitter_analyzer.models import StyleElement', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 19, 'text': 'except ImportError as e:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\css_analysis_demo.py', 'line': 248, 'text': 'import re', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 3, 'text': 'Tests all major functionality including functions, classes, variables, imports,', 'matches': [[71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 7, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 11, 'text': 'from tree_sitter_analyzer.languages.javascript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 14, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 37, 'text': "import React, { useState, useEffect } from 'react';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 38, 'text': "import axios from 'axios';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 39, 'text': "import { debounce } from 'lodash';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 204, 'text': 'assert extractor.imports == []', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 241, 'text': '# Should detect as module due to imports/exports', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 251, 'text': 'vue_code = "import Vue from \'vue\'; export default { name: \'Component\' }"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 257, 'text': 'angular_code = "import { Component } from \'@angular/core\';"', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 333, 'text': 'def test_extract_imports_basic(self, extractor, mock_tree, sample_javascript_code):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 334, 'text': '"""Test basic import extraction"""', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 335, 'text': '# Mock import statement', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 336, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 337, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 339, 'text': 'mock_tree.root_node.children = [mock_import_node]', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 341, 'text': 'with patch.object(extractor, "_extract_import_info_simple") as mock_extract:', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 342, 'text': 'mock_import = Import(', 'matches': [[17, 23], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 346, 'text': 'raw_text="import React from \'react\'",', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 349, 'text': 'mock_extract.return_value = mock_import', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 351, 'text': 'imports = extractor.extract_imports(mock_tree, sample_javascript_code)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 353, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 802, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 849, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_loader.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_loader.py', 'line': 13, 'text': 'from tree_sitter_analyzer.language_loader import (', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_loader.py', 'line': 90, 'text': 'def test_load_language_with_import_error():', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_loader.py', 'line': 91, 'text': '"""Test language loading when import fails for unknown language"""', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 12, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 79, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 80, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 81, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 82, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 84, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 86, 'text': '# Handle malformed data where import is a string', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 87, 'text': 'import_statement = imp', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 89, 'text': 'import_statement = imp.get("statement", "")', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 90, 'text': 'if not import_statement:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 91, 'text': '# Construct import statement from parts', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 95, 'text': 'import_statement = f"import {name} from {source};"', 'matches': [[28, 34], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 97, 'text': 'import_statement = str(imp)', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 98, 'text': 'lines.append(import_statement)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 567, 'text': 'import json', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\total_only_optimization_demo.py', 'line': 16, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\total_only_optimization_demo.py', 'line': 17, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\total_only_optimization_demo.py', 'line': 18, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\total_only_optimization_demo.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\total_only_optimization_demo.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import (', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_formatter_new_elements.py', 'line': 13, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_formatter_new_elements.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_formatter_new_elements.py', 'line': 17, 'text': 'from tree_sitter_analyzer.formatters.markdown_formatter import MarkdownFormatter', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\debug_async_test.py', 'line': 4, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\debug_async_test.py', 'line': 5, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\debug_async_test.py', 'line': 6, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\debug_async_test.py', 'line': 8, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\debug_async_test.py', 'line': 60, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 80, 'text': '"import_statement": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 81, 'text': '(import_statement) @import_statement', 'matches': [[5, 11], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 377, 'text': '# --- Important Declarations ---', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 378, 'text': '"important": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 381, 'text': '"!" @important_mark', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 382, 'text': '"important" @important_keyword) @important', 'matches': [[9, 15], [21, 27], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 433, 'text': '"import_statement": "Search @import statements",', 'matches': [[5, 11], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 491, 'text': '"important": "Search !important declarations",', 'matches': [[5, 11], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\calculate_token_comparison.py', 'line': 7, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\calculate_token_comparison.py', 'line': 8, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 8, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 10, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 13, 'text': '# Add the project root to Python path for imports', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import configure_cache', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\cache_demo.py', 'line': 210, 'text': 'import traceback', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__main__.py', 'line': 8, 'text': 'from .cli_main import main', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_demo.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_demo.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_demo.py', 'line': 12, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_demo.py', 'line': 13, 'text': 'from tree_sitter_analyzer.security import (', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\smart_cache_demo.py', 'line': 13, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\smart_cache_demo.py', 'line': 14, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\smart_cache_demo.py', 'line': 15, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\smart_cache_demo.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\smart_cache_demo.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import (', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 12, 'text': 'from ..models import CodeElement, MarkupElement, StyleElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 13, 'text': 'from .base_formatter import BaseFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 14, 'text': 'from .formatter_registry import IFormatter', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\suppress_output_demo.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\suppress_output_demo.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\suppress_output_demo.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\suppress_output_demo.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 9, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 14, 'text': 'from tree_sitter_analyzer.languages.markdown_plugin import (', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 19, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 113, 'text': 'def test_extract_imports_with_none_tree(self):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 114, 'text': '"""Test extract_imports with None tree"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 115, 'text': 'result = self.extractor.extract_imports(None, "[ref]: url")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 374, 'text': 'def test_get_tree_sitter_language_import_error(self):', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 375, 'text': '"""Test get_tree_sitter_language with import error"""', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 378, 'text': '# Import happens inside the method, so we need to patch builtins.__import__', 'matches': [[10, 16], [75, 81]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 380, 'text': '"builtins.__import__",', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 381, 'text': 'side_effect=ImportError("tree_sitter_markdown not found"),', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 392, 'text': 'with patch("builtins.__import__") as mock_import:', 'matches': [[31, 37], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 393, 'text': '# Let tree_sitter import succeed, but make tsmarkdown.language() fail', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 394, 'text': 'def import_side_effect(name, *args, **kwargs):', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 399, 'text': 'return __import__(name, *args, **kwargs)', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 401, 'text': 'mock_import.side_effect = import_side_effect', 'matches': [[17, 23], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 411, 'text': 'with patch("builtins.__import__") as mock_import:', 'matches': [[31, 37], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 419, 'text': 'def import_side_effect(name, *args, **kwargs):', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 424, 'text': 'return __import__(name, *args, **kwargs)', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 426, 'text': 'mock_import.side_effect = import_side_effect', 'matches': [[17, 23], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 465, 'text': "# Patch get_query from where it's actually imported", 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 532, 'text': 'mock_extractor.extract_imports.return_value = []', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 539, 'text': 'self.plugin.extract_imports(mock_tree, "content")', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 545, 'text': 'mock_extractor.extract_imports.assert_called_once()', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 6, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 10, 'text': 'from tree_sitter_analyzer.languages.javascript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 14, 'text': 'from tree_sitter_analyzer.models import Function', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 39, 'text': 'imports = extractor.extract_imports(mock_tree, "")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 45, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 58, 'text': "import from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 363, 'text': 'def test_import_extraction_with_malformed_imports(self, extractor):', 'matches': [[13, 19], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 364, 'text': '"""Test import extraction with malformed import statements"""', 'matches': [[16, 22], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 365, 'text': 'malformed_imports = """', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 366, 'text': "import from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 367, 'text': "import 'module'", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 368, 'text': "import { } from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 369, 'text': "import { a, } from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 370, 'text': "import * as from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 377, 'text': '# Should handle malformed imports gracefully', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 378, 'text': 'imports = extractor.extract_imports(mock_tree, malformed_imports)', 'matches': [[8, 14], [36, 42], [65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 379, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 433, 'text': '"""Test framework detection with mixed framework imports"""', 'matches': [[57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 435, 'text': "import React from 'react';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 436, 'text': "import Vue from 'vue';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 437, 'text': "import { Component } from '@angular/core';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 486, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 487, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 550, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 563, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 584, 'text': 'mock_extractor.extract_imports.side_effect = Exception(', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 585, 'text': '"Import extraction error"', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 599, 'text': '"imports": [],', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\project_detector.py', 'line': 8, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\project_detector.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\project_detector.py', 'line': 320, 'text': 'import sys', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 18, 'text': '# Legacy imports for backward compatibility', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 20, 'text': '# Core Engine - temporary direct import', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 21, 'text': 'from .core.analysis_engine import UnifiedAnalysisEngine as UniversalCodeAnalyzer', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 22, 'text': 'from .encoding_utils import (', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 32, 'text': '# from .java_advanced_analyzer import AdvancedAnalyzer # Removed - migrated to plugin system', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 33, 'text': 'from .language_detector import LanguageDetector', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 34, 'text': 'from .language_loader import get_loader', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 38, 'text': 'from .models import (', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 43, 'text': 'Import,', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 47, 'text': 'JavaImport,', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 52, 'text': 'from .output_manager import (', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 63, 'text': 'from .plugins import ElementExtractor, LanguagePlugin', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 64, 'text': 'from .plugins.manager import PluginManager', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 65, 'text': 'from .query_loader import QueryLoader, get_query_loader', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 67, 'text': '# Import new utility modules', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 68, 'text': 'from .utils import (', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 82, 'text': '"JavaImport",', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\__init__.py', 'line': 91, 'text': '"Import",', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.analysis_engine import get_analysis_engine', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.tools.universal_analyze_tool import UniversalAnalyzeTool', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 16, 'text': 'from tree_sitter_analyzer.security import SecurityValidator', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 177, 'text': 'import time', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\security_integration_demo.py', 'line': 204, 'text': 'import shutil', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\sample.py', 'line': 9, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\sample.py', 'line': 10, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\sample.py', 'line': 83, 'text': 'import aiohttp', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\sample.py', 'line': 182, 'text': 'from functools import reduce', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 10, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 12, 'text': 'from ..models import CodeElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 171, 'text': 'import json', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 213, 'text': 'import csv', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 214, 'text': 'import io', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 356, 'text': 'from .html_formatter import (', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 365, 'text': 'except ImportError:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 370, 'text': '# Auto-register built-in formatters when module is imported', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 12, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 14, 'text': 'from . import __version__', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 15, 'text': 'from .core.engine import AnalysisEngine', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 16, 'text': 'from .utils import log_error', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 104, 'text': 'if hasattr(elem, "imported_names"):', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 105, 'text': 'elem_dict["imported_names"] = elem.imported_names', 'matches': [[31, 37], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 238, 'text': 'if hasattr(elem, "imported_names"):', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 239, 'text': 'elem_dict["imported_names"] = elem.imported_names', 'matches': [[31, 37], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 10, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 17, 'text': 'from tree_sitter_analyzer.project_detector import detect_project_root', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 18, 'text': 'from tree_sitter_analyzer.utils import setup_logger', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 89, 'text': 'import importlib.util', 'matches': [[8, 14], [15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 91, 'text': 'mcp_spec = importlib.util.find_spec("mcp")', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 93, 'text': 'raise ImportError()', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 95, 'text': 'except ImportError:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 100, 'text': 'import importlib.util', 'matches': [[8, 14], [15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 102, 'text': 'tree_sitter_spec = importlib.util.find_spec("tree_sitter")', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 104, 'text': 'raise ImportError()', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\start_mcp_server.py', 'line': 106, 'text': 'except ImportError:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 15, 'text': 'from tree_sitter_analyzer.languages.java_plugin import JavaElementExtractor, JavaPlugin', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 16, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 17, 'text': 'from tree_sitter_analyzer.plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 44, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 45, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 88, 'text': 'assert hasattr(extractor, "extract_imports")', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 145, 'text': 'def test_extract_imports_success(', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 148, 'text': '"""Test successful import extraction"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 152, 'text': 'mock_query.captures.return_value = {"import.declaration": []}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 154, 'text': 'imports = extractor.extract_imports(mock_tree, "test code")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 156, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 203, 'text': 'def test_extract_import_info(self, extractor: JavaElementExtractor) -> None:', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 204, 'text': '"""Test import information extraction"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 206, 'text': 'mock_node.type = "import_declaration"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 213, 'text': 'result = extractor._extract_import_info(mock_node, "import java.util.List;")', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 216, 'text': 'assert result is None or isinstance(result, Import)', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 473, 'text': 'mock_language.side_effect = ImportError("Module not found")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 8, 'text': 'import atexit', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 10, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 12, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 13, 'text': 'from functools import wraps', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 15, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils.py', 'line': 241, 'text': '# Setup safe shutdown on import', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 6, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 7, 'text': 'from .java_formatter import JavaTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 8, 'text': 'from .javascript_formatter import JavaScriptTableFormatter', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 9, 'text': 'from .python_formatter import PythonTableFormatter', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 10, 'text': 'from .typescript_formatter import TypeScriptTableFormatter', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.analysis_engine import get_analysis_engine', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 15, 'text': 'from tree_sitter_analyzer.project_detector import (', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 85, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 86, 'text': 'from src.main import Calculator, fibonacci', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\project_root_demo.py', 'line': 267, 'text': 'import shutil', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_fixes.py', 'line': 6, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_fixes.py', 'line': 7, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_fixes.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_fixes.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_fixes.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_fixes.py', 'line': 41, 'text': 'import sys', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_fixes.py', 'line': 42, 'text': 'from io import StringIO', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_fixes.py', 'line': 44, 'text': 'from tree_sitter_analyzer.output_manager import OutputManager', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_fixes.py', 'line': 86, 'text': 'from unittest.mock import Mock', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_fixes.py', 'line': 88, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_fixes.py', 'line': 123, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_fixes.py', 'line': 125, 'text': 'from tree_sitter_analyzer.utils import LoggingContext, setup_logger', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_fixes.py', 'line': 160, 'text': 'from tree_sitter_analyzer.utils import safe_print', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 3, 'text': 'Tests all major functionality including methods, classes, fields, imports, packages,', 'matches': [[66, 72]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 7, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 11, 'text': 'from tree_sitter_analyzer.languages.java_plugin import JavaElementExtractor, JavaPlugin', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 12, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import, Package, Variable', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 37, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 38, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 39, 'text': 'import java.util.Map;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 40, 'text': 'import java.util.HashMap;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 41, 'text': 'import java.util.concurrent.CompletableFuture;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 42, 'text': 'import javax.annotation.Nullable;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 43, 'text': 'import org.springframework.stereotype.Service;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 44, 'text': 'import org.springframework.beans.factory.annotation.Autowired;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 45, 'text': 'import static java.util.Collections.emptyList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 46, 'text': 'import static org.junit.Assert.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 354, 'text': 'assert extractor.imports == []', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 477, 'text': 'def test_extract_imports_basic(self, extractor, mock_tree, sample_java_code):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 478, 'text': '"""Test basic import extraction"""', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 479, 'text': '# Mock package and import nodes', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 483, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 484, 'text': 'mock_import_node.type = "import_declaration"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 491, 'text': 'mock_import_node,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 496, 'text': 'with patch.object(extractor, "_extract_import_info") as mock_extract_import:', 'matches': [[51, 57], [81, 87]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 497, 'text': 'mock_import = Import(', 'matches': [[21, 27], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 501, 'text': 'raw_text="import java.util.List;",', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 504, 'text': 'mock_extract_import.return_value = mock_import', 'matches': [[29, 35], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 506, 'text': 'imports = extractor.extract_imports(mock_tree, sample_java_code)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 508, 'text': 'assert isinstance(imports, list)', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 510, 'text': 'mock_extract_import.assert_called_once()', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 512, 'text': 'def test_extract_imports_with_fallback(self, extractor, mock_tree):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 513, 'text': '"""Test import extraction with regex fallback"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 514, 'text': '# Mock tree with no import nodes', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 517, 'text': '# Source code with imports', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 518, 'text': 'source_with_imports = """', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 519, 'text': 'import java.util.List;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 520, 'text': 'import static java.util.Collections.emptyList;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 521, 'text': 'import javax.annotation.*;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 524, 'text': 'with patch.object(extractor, "_extract_imports_fallback") as mock_fallback:', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 526, 'text': 'Import(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 530, 'text': 'raw_text="import java.util.List;",', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 535, 'text': 'imports = extractor.extract_imports(mock_tree, source_with_imports)', 'matches': [[12, 18], [40, 46], [71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 537, 'text': '# Should call fallback when no imports found via tree-sitter', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 539, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1150, 'text': 'def test_extract_imports_fallback_static_imports(self, extractor):', 'matches': [[21, 27], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1151, 'text': '"""Test fallback import extraction for static imports"""', 'matches': [[25, 31], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1153, 'text': 'import static java.util.Collections.emptyList;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1154, 'text': 'import static org.junit.Assert.*;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1155, 'text': 'import static com.example.Utils.helper;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1158, 'text': 'imports = extractor._extract_imports_fallback(source_code)', 'matches': [[8, 14], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1160, 'text': 'assert len(imports) == 3', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1162, 'text': '# Check static imports', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1163, 'text': 'assert imports[0].name == "java.util.Collections"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1164, 'text': 'assert imports[0].is_static is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1165, 'text': 'assert imports[0].is_wildcard is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1167, 'text': 'assert imports[1].name == "org.junit.Assert"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1168, 'text': 'assert imports[1].is_static is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1169, 'text': 'assert imports[1].is_wildcard is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1171, 'text': 'assert imports[2].name == "com.example.Utils"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1172, 'text': 'assert imports[2].is_static is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1173, 'text': 'assert imports[2].is_wildcard is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1175, 'text': 'def test_extract_imports_fallback_normal_imports(self, extractor):', 'matches': [[21, 27], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1176, 'text': '"""Test fallback import extraction for normal imports"""', 'matches': [[25, 31], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1178, 'text': 'import java.util.List;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1179, 'text': 'import java.util.*;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1180, 'text': 'import javax.annotation.Nullable;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1183, 'text': 'imports = extractor._extract_imports_fallback(source_code)', 'matches': [[8, 14], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1185, 'text': 'assert len(imports) == 3', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1187, 'text': '# Check normal imports', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1188, 'text': 'assert imports[0].name == "java.util.List"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1189, 'text': 'assert imports[0].is_static is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1190, 'text': 'assert imports[0].is_wildcard is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1192, 'text': 'assert imports[1].name == "java.util"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1193, 'text': 'assert imports[1].is_static is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1194, 'text': 'assert imports[1].is_wildcard is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1196, 'text': 'assert imports[2].name == "javax.annotation.Nullable"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1197, 'text': 'assert imports[2].is_static is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1198, 'text': 'assert imports[2].is_wildcard is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1202, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1249, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1414, 'text': 'plugin.extractor, "extract_imports"', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1415, 'text': ') as mock_imports:', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1425, 'text': 'mock_imports.return_value = []', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1434, 'text': 'assert "imports" in result', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1446, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1469, 'text': 'plugin.extractor, "extract_imports"', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1470, 'text': ') as mock_imports:', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1486, 'text': 'mock_imports.side_effect = Exception(', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1487, 'text': '"Import extraction error"', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1506, 'text': '"imports",', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1516, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1517, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 6, 'text': 'import csv', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 7, 'text': 'import io', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 8, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 52, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 12, 'text': 'from tree_sitter_analyzer.api import analyze_file', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 13, 'text': 'from tree_sitter_analyzer.formatters.formatter_factory import TableFormatterFactory', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 74, 'text': 'imports = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 77, 'text': 'if e.get("type") == "import"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 78, 'text': 'or e.get("element_type") == "import"', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 79, 'text': 'or e.__class__.__name__ == "Import"', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 86, 'text': 'print(f" • Imports: {len(imports)}")', 'matches': [[23, 29], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 273, 'text': '# Show import analysis', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 274, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 275, 'text': 'print("📥 Import Analysis:")', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 278, 'text': '# Group imports by type', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 279, 'text': 'es6_imports = []', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 280, 'text': 'commonjs_imports = []', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 281, 'text': 'dynamic_imports = []', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 283, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 284, 'text': 'import_type = getattr(imp, "import_type", "unknown")', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 285, 'text': 'if import_type == "commonjs":', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 286, 'text': 'commonjs_imports.append(imp)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 287, 'text': 'elif import_type == "dynamic":', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 288, 'text': 'dynamic_imports.append(imp)', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 290, 'text': 'es6_imports.append(imp)', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 292, 'text': 'if es6_imports:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 293, 'text': 'print(f"📦 ES6 Imports ({len(es6_imports)}):")', 'matches': [[33, 39], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 294, 'text': 'for imp in es6_imports[:5]:', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 296, 'text': 'import_type = imp.get("import_type", "default")', 'matches': [[24, 30], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 297, 'text': 'names = imp.get("imported_names", [imp.get("name", "unknown")])', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 300, 'text': 'import_type = getattr(imp, "import_type", "default")', 'matches': [[24, 30], [52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 301, 'text': 'names = getattr(imp, "imported_names", [imp.name])', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 308, 'text': 'print(f" • {names_str} from \'{module_path}\' ({import_type})")', 'matches': [[70, 76]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 309, 'text': 'if len(es6_imports) > 5:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 310, 'text': 'print(f" ... and {len(es6_imports) - 5} more")', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 313, 'text': 'if commonjs_imports:', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 314, 'text': 'print(f"🔧 CommonJS Imports ({len(commonjs_imports)}):")', 'matches': [[38, 44], [61, 67]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 315, 'text': 'for imp in commonjs_imports:', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 327, 'text': 'if dynamic_imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 328, 'text': 'print(f"⚡ Dynamic Imports ({len(dynamic_imports)}):")', 'matches': [[36, 42], [58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 329, 'text': 'for imp in dynamic_imports:', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 335, 'text': 'print(f" • import(\'{module_path}\')")', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 505, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 511, 'text': '"import_type": (', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 512, 'text': 'i.get("import_type", "default")', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 514, 'text': 'else getattr(i, "import_type", "default")', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 520, 'text': 'for i in imports', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 527, 'text': '"import_count": len(imports),', 'matches': [[17, 23], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 558, 'text': 'import traceback', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 568, 'text': 'from tree_sitter_analyzer.queries.javascript import get_available_javascript_queries', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 581, 'text': '"Imports/Exports": [q for q in queries if "import" in q or "export" in q],', 'matches': [[9, 15], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\javascript_analysis_demo.py', 'line': 637, 'text': 'print("• Comprehensive element extraction (functions, classes, variables, imports)")', 'matches': [[80, 86]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_emergency_fix.py', 'line': 8, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_emergency_fix.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_emergency_fix.py', 'line': 17, 'text': 'from tree_sitter_analyzer.core.query_result_parser import QueryResultParser', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_emergency_fix.py', 'line': 72, 'text': 'import traceback', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_emergency_fix.py', 'line': 78, 'text': 'def test_table_command_import():', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_emergency_fix.py', 'line': 79, 'text': '"""Test table command import"""', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_emergency_fix.py', 'line': 81, 'text': 'print("TableCommand import successful")', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_emergency_fix.py', 'line': 84, 'text': 'print(f"Error importing TableCommand: {e}")', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_emergency_fix.py', 'line': 85, 'text': 'import traceback', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_emergency_fix.py', 'line': 100, 'text': '# Test TableCommand import', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\test_emergency_fix.py', 'line': 101, 'text': 'table_success = test_table_command_import()', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 6, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 10, 'text': 'from tree_sitter_analyzer.languages.java_plugin import JavaElementExtractor, JavaPlugin', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 35, 'text': 'imports = extractor.extract_imports(mock_tree, "")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 42, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 55, 'text': 'import java.util.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 93, 'text': 'import java.util.日本語;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 432, 'text': 'def test_import_extraction_with_malformed_imports(self, extractor):', 'matches': [[13, 19], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 433, 'text': '"""Test import extraction with malformed import statements"""', 'matches': [[16, 22], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 434, 'text': 'malformed_imports = """', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 435, 'text': 'import ;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 436, 'text': 'import java.util.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 437, 'text': 'import static ;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 438, 'text': 'import static java.util.Collections.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 439, 'text': 'import java..util.List;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 445, 'text': '# Should handle malformed imports gracefully', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 446, 'text': 'imports = extractor.extract_imports(mock_tree, malformed_imports)', 'matches': [[8, 14], [36, 42], [65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 447, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 449, 'text': 'def test_import_fallback_with_invalid_patterns(self, extractor):', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 450, 'text': '"""Test import fallback with invalid patterns"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 451, 'text': 'invalid_imports = """', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 452, 'text': 'import ;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 453, 'text': 'import java.util.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 454, 'text': 'import static ;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 455, 'text': 'import static java.util.Collections.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 458, 'text': 'imports = extractor._extract_imports_fallback(invalid_imports)', 'matches': [[8, 14], [37, 43], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 461, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 462, 'text': '# May contain some imports if patterns partially match', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 522, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 523, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 583, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 619, 'text': 'mock_extractor.extract_imports.side_effect = Exception(', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 620, 'text': '"Import extraction error"', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 637, 'text': '"imports",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 692, 'text': 'imports = extractor.extract_imports(mock_tree, None)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 700, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\file_handler.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\file_handler.py', 'line': 10, 'text': 'from .encoding_utils import read_file_safe', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\file_handler.py', 'line': 11, 'text': 'from .utils import setup_logger', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 15, 'text': 'from tree_sitter_analyzer.core.analysis_engine import get_analysis_engine', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 16, 'text': 'from tree_sitter_analyzer.formatters.html_formatter import HtmlFormatter', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 17, 'text': 'from tree_sitter_analyzer.languages.html_plugin import HtmlPlugin', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 18, 'text': 'from tree_sitter_analyzer.models import MarkupElement', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\examples\\html_analysis_demo.py', 'line': 19, 'text': 'except ImportError as e:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 9, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 10, 'text': 'from typing import TYPE_CHECKING', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 13, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 15, 'text': '# from ..models import (', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 18, 'text': 'from ..models import Class as ModelClass', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 19, 'text': 'from ..models import Function as ModelFunction', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 20, 'text': 'from ..models import Import as ModelImport', 'matches': [[14, 20], [21, 27], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 21, 'text': 'from ..models import Variable as ModelVariable', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 22, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 60, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 62, 'text': ') -> list[ModelImport]:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 63, 'text': '"""Extract import statements from the syntax tree"""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 64, 'text': 'log_warning("extract_imports not implemented in subclass")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 140, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 142, 'text': ') -> list[ModelImport]:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 143, 'text': '"""Basic import extraction implementation"""', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 144, 'text': 'imports: list[ModelImport] = []', 'matches': [[8, 14], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 147, 'text': '# Generic import extraction logic', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 148, 'text': 'self._traverse_for_imports(', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 149, 'text': 'tree.root_node, imports, source_code.splitlines()', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 152, 'text': 'log_error(f"Error in import extraction: {e}")', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 153, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 226, 'text': 'def _traverse_for_imports(', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 227, 'text': 'self, node: "tree_sitter.Node", imports: list[ModelImport], lines: list[str]', 'matches': [[40, 46], [59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 229, 'text': '"""Traverse tree to find import statements"""', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 230, 'text': 'if hasattr(node, "type") and "import" in node.type.lower():', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 232, 'text': 'imp = ModelImport(', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 241, 'text': 'imports.append(imp)', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 243, 'text': 'log_debug(f"Failed to extract import: {e}")', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 247, 'text': 'self._traverse_for_imports(child, imports, lines)', 'matches': [[35, 41], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 280, 'text': '# from .manager import PluginManager', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 15, 'text': 'from tree_sitter_analyzer.languages.python_plugin import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 19, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import, Variable', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 20, 'text': 'from tree_sitter_analyzer.plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 45, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 46, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 47, 'text': 'from typing import List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 48, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 108, 'text': 'assert hasattr(extractor, "extract_imports")', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 163, 'text': 'def test_extract_imports_success(', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 166, 'text': '"""Test successful import extraction"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 170, 'text': 'mock_query.captures.return_value = {"import.statement": []}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 172, 'text': 'imports = extractor.extract_imports(mock_tree, "test code")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 174, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 279, 'text': 'def test_extract_import_info(self, extractor: PythonElementExtractor) -> None:', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 280, 'text': '"""Test import information extraction"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 282, 'text': 'mock_node.type = "import_statement"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 292, 'text': 'result = extractor._extract_import_info(mock_node, "import os", "import")', 'matches': [[40, 46], [64, 70], [77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 295, 'text': 'assert isinstance(result, Import)', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 639, 'text': 'mock_language.side_effect = ImportError("Module not found")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 781, 'text': 'def test_python_import_variations(self, plugin: PythonPlugin) -> None:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 782, 'text': '"""Test Python import statement variations"""', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 785, 'text': '# Test different import patterns', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 786, 'text': '# Test different import patterns (simplified for testing)', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 9, 'text': '# Import from tree-sitter compatibility module', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 10, 'text': 'from .tree_sitter_compat import TreeSitterQueryCompat, get_node_text_safe, log_api_info', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 14, 'text': '# We need to import these dynamically to avoid circular imports', 'matches': [[13, 19], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 15, 'text': 'def _import_logging_functions():', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 16, 'text': '"""Dynamically import logging functions to avoid circular imports."""', 'matches': [[19, 25], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 17, 'text': 'import importlib.util', 'matches': [[4, 10], [11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 18, 'text': 'import os', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 20, 'text': '# Import the utils.py file from the parent directory', 'matches': [[6, 12]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 23, 'text': 'spec = importlib.util.spec_from_file_location(', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 26, 'text': 'utils_module = importlib.util.module_from_spec(spec)', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 44, 'text': '# Import logging functions', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 58, 'text': ') = _import_logging_functions()', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 60, 'text': '# Fallback logging functions if import fails', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 62, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 114, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\__init__.py', 'line': 119, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 213, 'text': 'from .utils import log_error', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 259, 'text': 'from .utils import log_error', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 278, 'text': 'import traceback', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 323, 'text': 'from .utils import log_error', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 569, 'text': 'import traceback', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 576, 'text': '"timestamp": __import__("datetime").datetime.utcnow().isoformat() + "Z",', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 676, 'text': 'from .utils import log_error', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 703, 'text': 'from .utils import log_error', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 723, 'text': 'from .utils import log_error', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 740, 'text': 'if __import__("asyncio").iscoroutinefunction(func):', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 9, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 10, 'text': 'from typing import TYPE_CHECKING', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 13, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 15, 'text': '# from ..models import (', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 18, 'text': 'from ..models import Class as ModelClass', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 19, 'text': 'from ..models import Function as ModelFunction', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 20, 'text': 'from ..models import Import as ModelImport', 'matches': [[14, 20], [21, 27], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 21, 'text': 'from ..models import Variable as ModelVariable', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 22, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 60, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 62, 'text': ') -> list[ModelImport]:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 63, 'text': '"""Extract import statements from the syntax tree"""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 64, 'text': 'log_warning("extract_imports not implemented in subclass")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 140, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 142, 'text': ') -> list[ModelImport]:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 143, 'text': '"""Basic import extraction implementation"""', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 144, 'text': 'imports: list[ModelImport] = []', 'matches': [[8, 14], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 147, 'text': '# Generic import extraction logic', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 148, 'text': 'self._traverse_for_imports(', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 149, 'text': 'tree.root_node, imports, source_code.splitlines()', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 152, 'text': 'log_error(f"Error in import extraction: {e}")', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 153, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 226, 'text': 'def _traverse_for_imports(', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 227, 'text': 'self, node: "tree_sitter.Node", imports: list[ModelImport], lines: list[str]', 'matches': [[40, 46], [59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 229, 'text': '"""Traverse tree to find import statements"""', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 230, 'text': 'if hasattr(node, "type") and "import" in node.type.lower():', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 232, 'text': 'imp = ModelImport(', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 241, 'text': 'imports.append(imp)', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 243, 'text': 'log_debug(f"Failed to extract import: {e}")', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 247, 'text': 'self._traverse_for_imports(child, imports, lines)', 'matches': [[35, 41], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\__init__.py', 'line': 280, 'text': '# from .manager import PluginManager', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_helper.py', 'line': 9, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_helper.py', 'line': 10, 'text': 'import subprocess # nosec B404', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_helper.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_helper.py', 'line': 12, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\__init__.py', 'line': 14, 'text': 'from .boundary_manager import ProjectBoundaryManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\__init__.py', 'line': 15, 'text': 'from .regex_checker import RegexSafetyChecker', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\__init__.py', 'line': 16, 'text': 'from .validator import SecurityValidator', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 9, 'text': 'import importlib', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 10, 'text': 'import importlib.metadata', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 12, 'text': 'import pkgutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 14, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 16, 'text': 'from ..utils import log_debug, log_error, log_info, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 17, 'text': 'from .base import LanguagePlugin', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 68, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 86, 'text': 'entry_points = importlib.metadata.entry_points()', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 155, 'text': '# Import the languages package', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 159, 'text': 'languages_module = importlib.import_module(languages_package)', 'matches': [[35, 41], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 160, 'text': 'except ImportError as e:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 161, 'text': 'log_warning(f"Could not import languages package: {e}")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 172, 'text': '# Import the module', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 173, 'text': 'module = importlib.import_module(name)', 'matches': [[29, 35], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 3, 'text': 'Tests all major functionality including functions, classes, variables, imports,', 'matches': [[71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 7, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 11, 'text': 'from tree_sitter_analyzer.languages.python_plugin import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 15, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import, Variable', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 38, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 39, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 40, 'text': 'from typing import List, Dict, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 41, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 103, 'text': 'assert extractor.imports == []', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 139, 'text': '# Should detect as module due to imports', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 143, 'text': 'django_code = "from django.db import models\\nclass MyModel(models.Model): pass"', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 149, 'text': 'flask_code = "from flask import Flask\\napp = Flask(__name__)"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 155, 'text': 'fastapi_code = "from fastapi import FastAPI\\napp = FastAPI()"', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 750, 'text': 'extractor.source_code = "from flask import Flask"', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 756, 'text': 'extractor.source_code = "from fastapi import APIRouter"', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 830, 'text': 'def test_extract_imports_basic(self, extractor, mock_tree):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 831, 'text': '"""Test basic import extraction"""', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 838, 'text': '# Make extract_imports use manual extraction', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 839, 'text': 'with patch.object(extractor, "_extract_imports_manual") as mock_manual:', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 840, 'text': 'mock_import = Import(', 'matches': [[17, 23], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 844, 'text': 'raw_text="import test_module",', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 847, 'text': 'mock_manual.return_value = [mock_import]', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 849, 'text': 'imports = extractor.extract_imports(mock_tree, "import test_module")', 'matches': [[12, 18], [40, 46], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 851, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 853, 'text': 'assert len(imports) >= 0', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 975, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1020, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1104, 'text': 'import queue', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1105, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1203, 'text': 'def test_plugin_extract_imports(self, plugin):', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1204, 'text': '"""Test plugin import extraction"""', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1209, 'text': 'with patch.object(plugin.extractor, "extract_imports") as mock_extract:', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1212, 'text': 'result = plugin.extract_imports(mock_tree, "test code")', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1220, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1221, 'text': 'from typing import List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1222, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1275, 'text': 'imports = plugin.extract_imports(mock_tree, python_code)', 'matches': [[12, 18], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1281, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1298, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1299, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1300, 'text': 'from typing import Dict, List, Optional, Union', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1301, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1302, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1303, 'text': 'from enum import Enum', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1379, 'text': 'import asyncio', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1423, 'text': 'import asyncio', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1442, 'text': 'imports = plugin.extract_imports(mock_tree, complex_code)', 'matches': [[8, 14], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1448, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1456, 'text': 'from django.db import models', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1457, 'text': 'from django.contrib.auth.models import User', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1487, 'text': 'import', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1488, 'text': '# Incomplete import statement', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 41, 'text': 'import tree_sitter', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 73, 'text': 'import tree_sitter', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 188, 'text': 'import tree_sitter', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 264, 'text': 'import tree_sitter', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\utils\\tree_sitter_compat.py', 'line': 288, 'text': 'except ImportError:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 10, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 12, 'text': 'import threading', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 13, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 15, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 41, 'text': '# Set up environment when module is imported', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 44, 'text': '# Try to import chardet with fallback', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 46, 'text': 'import chardet', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 49, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 52, 'text': '# Import utilities with fallback', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 54, 'text': 'from .utils import log_debug, log_warning', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 55, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 9, 'text': 'import importlib', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 10, 'text': 'import importlib.metadata', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 12, 'text': 'import pkgutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 14, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 16, 'text': 'from ..utils import log_debug, log_error, log_info, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 17, 'text': 'from .base import LanguagePlugin', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 68, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 86, 'text': 'entry_points = importlib.metadata.entry_points()', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 155, 'text': '# Import the languages package', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 159, 'text': 'languages_module = importlib.import_module(languages_package)', 'matches': [[35, 41], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 160, 'text': 'except ImportError as e:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 161, 'text': 'log_warning(f"Could not import languages package: {e}")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 172, 'text': '# Import the module', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\manager.py', 'line': 173, 'text': 'module = importlib.import_module(name)', 'matches': [[29, 35], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\run_regression_tests.py', 'line': 4, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\run_regression_tests.py', 'line': 5, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\run_regression_tests.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\run_regression_tests.py', 'line': 7, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\run_regression_tests.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\run_regression_tests.py', 'line': 95, 'text': '(["python", "-c", "import pytest"], "pytest availability"),', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\run_regression_tests.py', 'line': 96, 'text': '(["python", "-c", "import asyncio"], "asyncio availability"),', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\run_regression_tests.py', 'line': 98, 'text': '["python", "-c", "import tree_sitter_analyzer"],', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\run_regression_tests.py', 'line': 99, 'text': '"tree_sitter_analyzer import",', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\run_regression_tests.py', 'line': 105, 'text': '"from tree_sitter_analyzer.core.query_service import QueryService",', 'matches': [[66, 72]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\run_regression_tests.py', 'line': 107, 'text': '"QueryService import",', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\run_regression_tests.py', 'line': 113, 'text': '"from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool",', 'matches': [[68, 74]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\run_regression_tests.py', 'line': 115, 'text': '"QueryTool import",', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 12, 'text': 'from ..exceptions import SecurityError', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 13, 'text': 'from ..utils import log_debug, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 14, 'text': 'from .boundary_manager import ProjectBoundaryManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 15, 'text': 'from .regex_checker import RegexSafetyChecker', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 350, 'text': 'import platform', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 356, 'text': 'import stat', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 368, 'text': 'import ctypes', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 369, 'text': 'from ctypes import wintypes', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 383, 'text': 'except (ImportError, AttributeError, OSError):', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 426, 'text': 'import platform', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 480, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 481, 'text': 'import tempfile', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 10, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 11, 'text': 'from typing import TYPE_CHECKING, Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 14, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 16, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 17, 'text': 'from ..models import AnalysisResult', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 19, 'text': 'from ..models import Class as ModelClass', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 20, 'text': 'from ..models import CodeElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 21, 'text': 'from ..models import Function as ModelFunction', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 22, 'text': 'from ..models import Import as ModelImport', 'matches': [[14, 20], [21, 27], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 23, 'text': 'from ..models import Variable as ModelVariable', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 24, 'text': 'from ..utils import log_debug, log_error', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 86, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 88, 'text': ') -> list[ModelImport]:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 90, 'text': 'Extract import statements from the syntax tree.', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 97, 'text': 'List of extracted import objects', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 120, 'text': 'elements.extend(self.extract_imports(tree, source_code))', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 188, 'text': 'return ["function", "class", "variable", "import"]', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 318, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 320, 'text': ') -> list[ModelImport]:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 321, 'text': '"""Basic import extraction implementation."""', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 322, 'text': 'imports: list[ModelImport] = []', 'matches': [[8, 14], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 327, 'text': 'self._traverse_for_imports(tree.root_node, imports, lines, source_code)', 'matches': [[35, 41], [59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 329, 'text': 'log_error(f"Error in import extraction: {e}")', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 331, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 423, 'text': 'def _traverse_for_imports(', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 426, 'text': 'imports: list[ModelImport],', 'matches': [[8, 14], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 430, 'text': '"""Traverse tree to find import statements."""', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 431, 'text': 'if hasattr(node, "type") and self._is_import_node(node.type):', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 436, 'text': 'imp = ModelImport(', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 445, 'text': 'imports.append(imp)', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 447, 'text': 'log_debug(f"Failed to extract import: {e}")', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 451, 'text': 'self._traverse_for_imports(child, imports, lines, source_code)', 'matches': [[35, 41], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 492, 'text': 'def _is_import_node(self, node_type: str) -> bool:', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 493, 'text': '"""Check if a node type represents an import."""', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 494, 'text': 'import_types = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 495, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 496, 'text': '"import_declaration",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 498, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 503, 'text': 'return any(itype in node_type.lower() for itype in import_types)', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 563, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 564, 'text': 'from ..models import AnalysisResult', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 8, 'text': 'import csv', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 9, 'text': 'import io', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 10, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 29, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 112, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 113, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 114, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 115, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 117, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\table_formatter.py', 'line': 575, 'text': '"imports": data.get("imports", []),', 'matches': [[17, 23], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 6, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 10, 'text': 'from tree_sitter_analyzer.languages.python_plugin import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 14, 'text': 'from tree_sitter_analyzer.models import Class', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 351, 'text': 'def test_extract_imports_with_malformed_captures(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 352, 'text': '"""Test import extraction with malformed captures"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 364, 'text': 'result = extractor.extract_imports(mock_tree, "import os")', 'matches': [[35, 41], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 369, 'text': 'def test_extract_imports_with_query_exception(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 370, 'text': '"""Test import extraction when query raises exception"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 379, 'text': 'result = extractor.extract_imports(mock_tree, "import os")', 'matches': [[35, 41], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 446, 'text': 'def test_detect_file_characteristics_with_partial_imports(self, extractor):', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 447, 'text': '"""Test file characteristics detection with partial import statements"""', 'matches': [[60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 448, 'text': 'extractor.source_code = "imp" # Partial import', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 460, 'text': '("from DJANGO import", ""), # Wrong case', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 461, 'text': '("from django import", "django"), # Correct case', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 615, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 616, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 10, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 11, 'text': 'from typing import TYPE_CHECKING, Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 14, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 16, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 17, 'text': 'from ..models import AnalysisResult', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 19, 'text': 'from ..models import Class as ModelClass', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 20, 'text': 'from ..models import CodeElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 21, 'text': 'from ..models import Function as ModelFunction', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 22, 'text': 'from ..models import Import as ModelImport', 'matches': [[14, 20], [21, 27], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 23, 'text': 'from ..models import Variable as ModelVariable', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 24, 'text': 'from ..utils import log_debug, log_error', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 86, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 88, 'text': ') -> list[ModelImport]:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 90, 'text': 'Extract import statements from the syntax tree.', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 97, 'text': 'List of extracted import objects', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 120, 'text': 'elements.extend(self.extract_imports(tree, source_code))', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 188, 'text': 'return ["function", "class", "variable", "import"]', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 318, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 320, 'text': ') -> list[ModelImport]:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 321, 'text': '"""Basic import extraction implementation."""', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 322, 'text': 'imports: list[ModelImport] = []', 'matches': [[8, 14], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 327, 'text': 'self._traverse_for_imports(tree.root_node, imports, lines, source_code)', 'matches': [[35, 41], [59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 329, 'text': 'log_error(f"Error in import extraction: {e}")', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 331, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 423, 'text': 'def _traverse_for_imports(', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 426, 'text': 'imports: list[ModelImport],', 'matches': [[8, 14], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 430, 'text': '"""Traverse tree to find import statements."""', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 431, 'text': 'if hasattr(node, "type") and self._is_import_node(node.type):', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 436, 'text': 'imp = ModelImport(', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 445, 'text': 'imports.append(imp)', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 447, 'text': 'log_debug(f"Failed to extract import: {e}")', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 451, 'text': 'self._traverse_for_imports(child, imports, lines, source_code)', 'matches': [[35, 41], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 492, 'text': 'def _is_import_node(self, node_type: str) -> bool:', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 493, 'text': '"""Check if a node type represents an import."""', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 494, 'text': 'import_types = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 495, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 496, 'text': '"import_declaration",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 498, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 503, 'text': 'return any(itype in node_type.lower() for itype in import_types)', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 563, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\plugins\\base.py', 'line': 564, 'text': 'from ..models import AnalysisResult', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\run_phase7_integration_tests.py', 'line': 8, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\run_phase7_integration_tests.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\run_phase7_integration_tests.py', 'line': 10, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\run_phase7_integration_tests.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\run_phase7_integration_tests.py', 'line': 12, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\run_phase7_integration_tests.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\regex_checker.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\regex_checker.py', 'line': 10, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\regex_checker.py', 'line': 12, 'text': 'from ..utils import log_debug, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 12, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 14, 'text': 'from . import __version__', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 15, 'text': 'from .core.engine import AnalysisEngine', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 16, 'text': 'from .utils import log_error', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 104, 'text': 'if hasattr(elem, "imported_names"):', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 105, 'text': 'elem_dict["imported_names"] = elem.imported_names', 'matches': [[31, 37], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 238, 'text': 'if hasattr(elem, "imported_names"):', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\api.py', 'line': 239, 'text': 'elem_dict["imported_names"] = elem.imported_names', 'matches': [[31, 37], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\output_manager.py', 'line': 8, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\output_manager.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\output_manager.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\output_manager.py', 'line': 12, 'text': 'from .utils import log_error, log_warning', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\output_manager.py', 'line': 122, 'text': 'from itertools import islice', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 10, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 14, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 18, 'text': 'from tree_sitter_analyzer.plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 43, 'text': "import { Component } from 'react';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 44, 'text': "import type { User } from './types';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 164, 'text': 'assert extractor.imports == []', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 172, 'text': 'extractor.source_code = "import React from \'react\'; export default MyComponent;"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 188, 'text': 'extractor.source_code = "import { Component } from \'@angular/core\';"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 195, 'text': 'extractor.source_code = "import Vue from \'vue\';"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 269, 'text': 'def test_extract_imports_empty_tree(self, extractor, mock_tree):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 270, 'text': '"""Test import extraction with empty tree"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 271, 'text': 'imports = extractor.extract_imports(mock_tree, "")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 272, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 376, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 429, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 441, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 453, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 490, 'text': 'from tree_sitter_analyzer.plugins.manager import PluginManager', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 513, 'text': 'from tree_sitter_analyzer.formatters.formatter_factory import (', 'matches': [[63, 69]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 531, 'text': 'from tree_sitter_analyzer.language_detector import detector', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 543, 'text': 'from tree_sitter_analyzer.language_loader import get_loader', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\output_manager.py', 'line': 8, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\output_manager.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\output_manager.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\output_manager.py', 'line': 12, 'text': 'from .utils import log_error, log_warning', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\output_manager.py', 'line': 122, 'text': 'from itertools import islice', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_release_automation.py', 'line': 16, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_release_automation.py', 'line': 17, 'text': 'import subprocess # nosec B404', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_release_automation.py', 'line': 18, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_release_automation.py', 'line': 19, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_release_automation.py', 'line': 20, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\gitflow_release_automation.py', 'line': 170, 'text': 'import re', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\boundary_manager.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\boundary_manager.py', 'line': 11, 'text': 'from ..exceptions import SecurityError', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\boundary_manager.py', 'line': 12, 'text': 'from ..utils import log_debug, log_info, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 9, 'text': 'from abc import ABC', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 10, 'text': 'from collections.abc import Callable', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 11, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 12, 'text': 'from typing import TYPE_CHECKING, Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 14, 'text': 'from .constants import (', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 18, 'text': 'ELEMENT_TYPE_IMPORT,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 130, 'text': 'class Import(CodeElement):', 'matches': [[6, 12]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 131, 'text': '"""Generic import statement representation"""', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 135, 'text': 'imported_names: list[str] = field(default_factory=list)', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 138, 'text': 'element_type: str = "import"', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 141, 'text': 'imported_name: str = "" # Alias for name', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 142, 'text': 'import_statement: str = "" # Full import statement', 'matches': [[4, 10], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 314, 'text': 'class JavaImport:', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 315, 'text': '"""Java import statement representation"""', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 319, 'text': 'imported_name: str = "" # Add imported_name for compatibility', 'matches': [[4, 10], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 320, 'text': 'import_statement: str = "" # Add import_statement for compatibility', 'matches': [[4, 10], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 331, 'text': '"type": "import",', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 362, 'text': '# imports: list[JavaImport] = field(default_factory=list)', 'matches': [[6, 12], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 380, 'text': 'imports = [e for e in elements if is_element_of_type(e, ELEMENT_TYPE_IMPORT)]', 'matches': [[8, 14], [77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 387, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 393, 'text': 'for imp in imports', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 437, 'text': '"imports": ELEMENT_TYPE_IMPORT,', 'matches': [[13, 19], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 463, 'text': 'imports = [e for e in elements if is_element_of_type(e, ELEMENT_TYPE_IMPORT)]', 'matches': [[8, 14], [77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 474, 'text': '"import_count": len(imports),', 'matches': [[13, 19], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 510, 'text': '"imports": [', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 523, 'text': 'if is_element_of_type(e, ELEMENT_TYPE_IMPORT)', 'matches': [[62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 611, 'text': '"import_count": len(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 615, 'text': 'if is_element_of_type(e, ELEMENT_TYPE_IMPORT)', 'matches': [[62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 15, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 16, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 301, 'text': 'def test_extract_import_info_simple(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 302, 'text': '"""Test simple import extraction"""', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 303, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 304, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 305, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 306, 'text': 'mock_import_node.end_point = (0, 30)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 307, 'text': 'mock_import_node.children = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 309, 'text': '# Mock import clause', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 310, 'text': 'import_clause = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 311, 'text': 'import_clause.type = "import_clause"', 'matches': [[8, 14], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 318, 'text': 'mock_import_node.children = [import_clause, string_literal]', 'matches': [[13, 19], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 322, 'text': 'mock_import_node: "import { Component } from \'./module\'",', 'matches': [[21, 27], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 323, 'text': 'import_clause: "{ Component }",', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 327, 'text': 'extractor._extract_import_names = Mock(return_value=["Component"])', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 329, 'text': 'result = extractor._extract_import_info_simple(mock_import_node)', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 333, 'text': 'assert result.imported_names == ["Component"]', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 336, 'text': 'def test_extract_import_info_simple_type_import(self, extractor):', 'matches': [[21, 27], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 337, 'text': '"""Test type-only import extraction"""', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 338, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 339, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 340, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 341, 'text': 'mock_import_node.end_point = (0, 35)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 342, 'text': 'mock_import_node.children = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 343, 'text': 'mock_import_node.text = "import type { User } from \'./types\'"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 346, 'text': 'return_value="import type { User } from \'./types\'"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 348, 'text': 'extractor._extract_import_names = Mock(return_value=["User"])', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 350, 'text': '# Mock import clause', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 351, 'text': 'import_clause = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 352, 'text': 'import_clause.type = "import_clause"', 'matches': [[8, 14], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 359, 'text': 'mock_import_node.children = [import_clause, string_literal]', 'matches': [[13, 19], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 361, 'text': 'result = extractor._extract_import_info_simple(mock_import_node)', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 365, 'text': 'assert result.imported_names == ["User"]', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 366, 'text': '# Note: is_type_import is not available in the Import model', 'matches': [[24, 30], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 367, 'text': 'assert "type" in result.raw_text # Check if type import is detected in raw text', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 369, 'text': 'def test_extract_import_names(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 370, 'text': '"""Test import names extraction"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 371, 'text': '# Test named imports', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 373, 'text': 'mock_clause.type = "import_clause"', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 375, 'text': 'named_imports = Mock()', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 376, 'text': 'named_imports.type = "named_imports"', 'matches': [[14, 20], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 378, 'text': 'import_spec1 = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 379, 'text': 'import_spec1.type = "import_specifier"', 'matches': [[8, 14], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 381, 'text': 'import_spec2 = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 382, 'text': 'import_spec2.type = "import_specifier"', 'matches': [[8, 14], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 384, 'text': 'named_imports.children = [import_spec1, import_spec2]', 'matches': [[14, 20], [34, 40], [48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 385, 'text': 'mock_clause.children = [named_imports]', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 389, 'text': 'import_spec1: "Component",', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 390, 'text': 'import_spec2: "useState as state",', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 394, 'text': 'result = extractor._extract_import_names(', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 395, 'text': 'mock_clause, "import { Component, useState as state } from \'react\'"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 402, 'text': 'def test_extract_import_names_default(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 403, 'text': '"""Test default import names extraction"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 405, 'text': 'mock_clause.type = "import_clause"', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 413, 'text': 'result = extractor._extract_import_names(', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 414, 'text': 'mock_clause, "import React from \'react\'"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 420, 'text': 'def test_extract_import_names_namespace(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 421, 'text': '"""Test namespace import names extraction"""', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 423, 'text': 'mock_clause.type = "import_clause"', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 425, 'text': 'namespace_import = Mock()', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 426, 'text': 'namespace_import.type = "namespace_import"', 'matches': [[18, 24], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 432, 'text': "namespace_import.children = [Mock(), identifier] # First child is 'as' keyword", 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 433, 'text': 'mock_clause.children = [namespace_import]', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 435, 'text': 'result = extractor._extract_import_names(', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 436, 'text': 'mock_clause, "import * as Utils from \'./utils\'"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 442, 'text': 'def test_extract_dynamic_import(self, extractor):', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 443, 'text': '"""Test dynamic import extraction"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 453, 'text': '# Mock import identifier', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 454, 'text': 'import_id = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 455, 'text': 'import_id.type = "import"', 'matches': [[8, 14], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 466, 'text': 'call_expr.children = [import_id, arguments]', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 470, 'text': 'return_value="import(\'./dynamic-module\')"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 473, 'text': 'result = extractor._extract_dynamic_import(mock_expr_stmt)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 478, 'text': 'assert "dynamic_import" in result.imported_names', 'matches': [[24, 30], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 530, 'text': 'assert result[0].imported_names == ["fs"]', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 905, 'text': '"Import/export statements",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\update_readme_stats.py', 'line': 11, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\update_readme_stats.py', 'line': 12, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\update_readme_stats.py', 'line': 13, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\update_readme_stats.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 9, 'text': 'from abc import ABC', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 10, 'text': 'from collections.abc import Callable', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 11, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 12, 'text': 'from typing import TYPE_CHECKING, Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 14, 'text': 'from .constants import (', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 18, 'text': 'ELEMENT_TYPE_IMPORT,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 130, 'text': 'class Import(CodeElement):', 'matches': [[6, 12]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 131, 'text': '"""Generic import statement representation"""', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 135, 'text': 'imported_names: list[str] = field(default_factory=list)', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 138, 'text': 'element_type: str = "import"', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 141, 'text': 'imported_name: str = "" # Alias for name', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 142, 'text': 'import_statement: str = "" # Full import statement', 'matches': [[4, 10], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 314, 'text': 'class JavaImport:', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 315, 'text': '"""Java import statement representation"""', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 319, 'text': 'imported_name: str = "" # Add imported_name for compatibility', 'matches': [[4, 10], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 320, 'text': 'import_statement: str = "" # Add import_statement for compatibility', 'matches': [[4, 10], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 331, 'text': '"type": "import",', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 362, 'text': '# imports: list[JavaImport] = field(default_factory=list)', 'matches': [[6, 12], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 380, 'text': 'imports = [e for e in elements if is_element_of_type(e, ELEMENT_TYPE_IMPORT)]', 'matches': [[8, 14], [77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 387, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 393, 'text': 'for imp in imports', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 437, 'text': '"imports": ELEMENT_TYPE_IMPORT,', 'matches': [[13, 19], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 463, 'text': 'imports = [e for e in elements if is_element_of_type(e, ELEMENT_TYPE_IMPORT)]', 'matches': [[8, 14], [77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 474, 'text': '"import_count": len(imports),', 'matches': [[13, 19], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 510, 'text': '"imports": [', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 523, 'text': 'if is_element_of_type(e, ELEMENT_TYPE_IMPORT)', 'matches': [[62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 611, 'text': '"import_count": len(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\models.py', 'line': 615, 'text': 'if is_element_of_type(e, ELEMENT_TYPE_IMPORT)', 'matches': [[62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 15, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 16, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 406, 'text': 'def test_extract_import_info_simple_no_source(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 407, 'text': '"""Test import extraction with no source string"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 408, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 409, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 410, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 411, 'text': 'mock_import_node.end_point = (0, 20)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 412, 'text': 'mock_import_node.children = [] # No string literal child', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 414, 'text': 'extractor._get_node_text_optimized = Mock(return_value="import { Component }")', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 416, 'text': 'result = extractor._extract_import_info_simple(mock_import_node)', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 419, 'text': 'def test_extract_import_info_simple_error_handling(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 420, 'text': '"""Test import extraction with error handling"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 421, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 422, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 423, 'text': 'mock_import_node.end_point = (0, 20)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 428, 'text': 'result = extractor._extract_import_info_simple(mock_import_node)', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 431, 'text': 'def test_extract_dynamic_import_no_call_expression(self, extractor):', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 432, 'text': '"""Test dynamic import extraction with no call expression"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 437, 'text': 'result = extractor._extract_dynamic_import(mock_expr_stmt)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 440, 'text': 'def test_extract_dynamic_import_no_import_identifier(self, extractor):', 'matches': [[29, 35], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 441, 'text': '"""Test dynamic import extraction with no import identifier"""', 'matches': [[24, 30], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 445, 'text': '# Mock call expression without import identifier', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 448, 'text': 'call_expr.children = [] # No import identifier', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 452, 'text': 'result = extractor._extract_dynamic_import(mock_expr_stmt)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 455, 'text': 'def test_extract_dynamic_import_error_handling(self, extractor):', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 456, 'text': '"""Test dynamic import extraction with error handling"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 462, 'text': 'result = extractor._extract_dynamic_import(mock_expr_stmt)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 584, 'text': 'import asyncio', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 609, 'text': 'import asyncio', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 637, 'text': 'import asyncio', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 7, 'text': 'import importlib', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 9, 'text': 'from .utils import log_error', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 23, 'text': '"import": "(import_declaration) @import",', 'matches': [[13, 19], [24, 30], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 41, 'text': '"import": "Extract import statements",', 'matches': [[9, 15], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 76, 'text': 'module = importlib.import_module(module_name)', 'matches': [[21, 27], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 96, 'text': 'except ImportError:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 179, 'text': 'importlib.import_module(module_name)', 'matches': [[20, 26], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 181, 'text': 'except ImportError:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\query_loader.py', 'line': 189, 'text': 'return ["functions", "classes", "variables", "imports"]', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version_minimal.py', 'line': 16, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version_minimal.py', 'line': 17, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version_minimal.py', 'line': 18, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version_minimal.py', 'line': 19, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version.py', 'line': 10, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\scripts\\sync_version.py', 'line': 159, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\conftest.py', 'line': 6, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\conftest.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\conftest.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\conftest.py', 'line': 63, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\conftest.py', 'line': 64, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 12, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 13, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 15, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 17, 'text': 'import psutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 18, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\performance\\test_mcp_performance.py', 'line': 101, 'text': 'lines.append("from typing import Any, Dict, List, Optional")', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 13, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 14, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 15, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 16, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 17, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 18, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 20, 'text': 'import psutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 21, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 27, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 28, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 29, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 30, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 68, 'text': 'import java.time.LocalDateTime;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 69, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 70, 'text': 'import java.util.UUID;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 139, 'text': 'import com.enterprise.domain.User;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 140, 'text': 'import com.enterprise.repository.UserRepository;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 141, 'text': 'import org.springframework.beans.factory.annotation.Autowired;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 142, 'text': 'import org.springframework.stereotype.Service;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 143, 'text': 'import org.springframework.transaction.annotation.Transactional;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 145, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 146, 'text': 'import java.util.Optional;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 147, 'text': 'import java.util.UUID;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 254, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 255, 'text': 'from typing import List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 256, 'text': 'from uuid import UUID, uuid4', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 257, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 258, 'text': 'from enum import Enum', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 405, 'text': "import React, { useState, useEffect, useCallback } from 'react';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 1116, 'text': 'import_search = await search_tool.execute(', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 1119, 'text': '"query": "import.*User|from.*user",', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 1125, 'text': 'assert import_search["success"]', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 1126, 'text': 'results["steps"].append(("import_search", import_search["count"]))', 'matches': [[34, 40], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\__init__.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\__init__.py', 'line': 11, 'text': '# Import main package version for consistency', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\__init__.py', 'line': 13, 'text': 'from .. import __version__ as main_version', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\__init__.py', 'line': 16, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\__init__.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\__init__.py', 'line': 11, 'text': '# Import main package version for consistency', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\__init__.py', 'line': 13, 'text': 'from .. import __version__ as main_version', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\__init__.py', 'line': 16, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 13, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 14, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 15, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 16, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 18, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 12, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 57, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 58, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 59, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 60, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 62, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 63, 'text': 'import_statement = imp.get("statement", "")', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 64, 'text': 'if not import_statement:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 65, 'text': '# Construct import statement from parts', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 68, 'text': 'is_type_import = imp.get("is_type_import", False)', 'matches': [[28, 34], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 70, 'text': 'type_prefix = "type " if is_type_import else ""', 'matches': [[57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 71, 'text': 'import_statement = f"import {type_prefix}{name} from {source};"', 'matches': [[24, 30], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 72, 'text': 'lines.append(import_statement)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 462, 'text': 'elif element_type == "import":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\typescript_formatter.py', 'line': 463, 'text': 'return "Import"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 13, 'text': 'import gc', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 14, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 15, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 16, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 17, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 19, 'text': 'import psutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 20, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 87, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 88, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 89, 'text': 'import java.util.Map;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 90, 'text': 'import java.util.HashMap;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 152, 'text': 'from typing import List, Dict, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 153, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 154, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 155, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 296, 'text': "import React, {{ useState, useEffect, useCallback, useMemo }} from 'react';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 573, 'text': '("import", ["*.java", "*.py", "*.js"]),', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 743, 'text': 'queries = ["class", "function", "import", "def", "const"]', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 12, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 15, 'text': 'from .error_handler import (', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 30, 'text': 'from .path_resolver import PathResolver, resolve_path', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 49, 'text': '# Import unified services for backward compatibility', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 51, 'text': 'from ...core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 52, 'text': 'from ...core.cache_service import CacheService as UnifiedCacheService', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 81, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 12, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 52, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 76, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 77, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 78, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 80, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 81, 'text': 'import_statement = imp.get("raw_text", "")', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 82, 'text': 'if not import_statement:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 87, 'text': 'import_statement = f"from {module_name} import {name}"', 'matches': [[24, 30], [64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 89, 'text': 'import_statement = f"import {name}"', 'matches': [[24, 30], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 90, 'text': 'lines.append(import_statement)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 446, 'text': '# Show important decorators', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 447, 'text': 'important = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\python_formatter.py', 'line': 457, 'text': 'if any(imp in dec for imp in important):', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 12, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 15, 'text': 'from .error_handler import (', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 30, 'text': 'from .path_resolver import PathResolver, resolve_path', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 49, 'text': '# Import unified services for backward compatibility', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 51, 'text': 'from ...core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 52, 'text': 'from ...core.cache_service import CacheService as UnifiedCacheService', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\utils\\__init__.py', 'line': 81, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 13, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 14, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 15, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 16, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 18, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 20, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError, ValidationError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 27, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 28, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 135, 'text': 'import java.security.SecureRandom;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 136, 'text': 'import java.util.logging.Logger;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 178, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 179, 'text': 'import hashlib', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 180, 'text': 'import secrets', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 181, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 13, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 14, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 15, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 16, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 18, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 20, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError, ValidationError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 27, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 28, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 135, 'text': 'import java.security.SecureRandom;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 136, 'text': 'import java.util.logging.Logger;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 178, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 179, 'text': 'import hashlib', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 180, 'text': 'import secrets', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_security_integration.py', 'line': 181, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\__init__.py', 'line': 11, 'text': 'from .engine import AnalysisEngine', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\__init__.py', 'line': 12, 'text': 'from .parser import Parser, ParseResult', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\__init__.py', 'line': 13, 'text': 'from .query import QueryExecutor', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 11, 'text': 'from .base_formatter import BaseFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 513, 'text': 'import re', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 608, 'text': 'import json', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\markdown_formatter.py', 'line': 620, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 13, 'text': 'import gc', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 14, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 15, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 16, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 17, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 19, 'text': 'import psutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 20, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 87, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 88, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 89, 'text': 'import java.util.Map;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 90, 'text': 'import java.util.HashMap;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 152, 'text': 'from typing import List, Dict, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 153, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 154, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 155, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 296, 'text': "import React, {{ useState, useEffect, useCallback, useMemo }} from 'react';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 573, 'text': '("import", ["*.java", "*.py", "*.js"]),', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_performance_integration.py', 'line': 743, 'text': 'queries = ["class", "function", "import", "def", "const"]', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 13, 'text': 'from ..encoding_utils import read_file_safe', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 14, 'text': 'from ..plugins.manager import PluginManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 15, 'text': 'from ..query_loader import query_loader', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 16, 'text': 'from ..utils.tree_sitter_compat import TreeSitterQueryCompat, get_node_text_safe', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 17, 'text': 'from .parser import Parser', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 18, 'text': 'from .query_filter import QueryFilter', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 311, 'text': 'elif query_key in ("import", "imports") and "import" in node_type:', 'matches': [[32, 38], [42, 48], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\tools\\__init__.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\language_formatter_factory.py', 'line': 6, 'text': 'from .base_formatter import BaseFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\language_formatter_factory.py', 'line': 7, 'text': 'from .html_formatter import HtmlFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\language_formatter_factory.py', 'line': 8, 'text': 'from .markdown_formatter import MarkdownFormatter', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\tools\\__init__.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 13, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 14, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 15, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 16, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_integration_suite.py', 'line': 18, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_filter.py', 'line': 8, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_filter.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 9, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 10, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 11, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 12, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 13, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 14, 'text': 'from pathlib import Path as PathClass', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 15, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 18, 'text': 'from mcp.server import Server', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 19, 'text': 'from mcp.server.models import InitializationOptions', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 20, 'text': 'from mcp.server.stdio import stdio_server', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 21, 'text': 'from mcp.types import Resource, TextContent, Tool', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 24, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 48, 'text': 'from ..constants import (', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 51, 'text': 'ELEMENT_TYPE_IMPORT,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 56, 'text': 'from ..core.analysis_engine import get_analysis_engine', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 57, 'text': 'from ..project_detector import detect_project_root', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 58, 'text': 'from ..security import SecurityValidator', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 59, 'text': 'from ..utils import setup_logger', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 60, 'text': 'from . import MCP_INFO', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 61, 'text': 'from .resources import CodeFileResource, ProjectStatsResource', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 62, 'text': 'from .tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 63, 'text': 'from .tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 64, 'text': 'from .tools.list_files_tool import ListFilesTool', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 65, 'text': 'from .tools.query_tool import QueryTool', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 66, 'text': 'from .tools.read_partial_tool import ReadPartialTool', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 67, 'text': 'from .tools.search_content_tool import SearchContentTool', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 68, 'text': 'from .tools.table_format_tool import TableFormatTool', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 70, 'text': '# Import UniversalAnalyzeTool at module level for test compatibility', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 72, 'text': 'from .tools.universal_analyze_tool import UniversalAnalyzeTool', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 73, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 159, 'text': 'from .utils.error_handler import MCPError', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 196, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 197, 'text': 'from ..language_detector import detect_language_from_file', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 239, 'text': 'imports_count = len(', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 240, 'text': '[e for e in elements if is_element_of_type(e, ELEMENT_TYPE_IMPORT)]', 'matches': [[71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 249, 'text': '+ imports_count', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 271, 'text': '"imports": imports_count,', 'matches': [[21, 27], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 639, 'text': 'from mcp.types import Prompt # type: ignore', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 9, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 10, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 11, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 12, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 13, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 14, 'text': 'from pathlib import Path as PathClass', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 15, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 18, 'text': 'from mcp.server import Server', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 19, 'text': 'from mcp.server.models import InitializationOptions', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 20, 'text': 'from mcp.server.stdio import stdio_server', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 21, 'text': 'from mcp.types import Resource, TextContent, Tool', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 24, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 48, 'text': 'from ..constants import (', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 51, 'text': 'ELEMENT_TYPE_IMPORT,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 56, 'text': 'from ..core.analysis_engine import get_analysis_engine', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 57, 'text': 'from ..project_detector import detect_project_root', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 58, 'text': 'from ..security import SecurityValidator', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 59, 'text': 'from ..utils import setup_logger', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 60, 'text': 'from . import MCP_INFO', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 61, 'text': 'from .resources import CodeFileResource, ProjectStatsResource', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 62, 'text': 'from .tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 63, 'text': 'from .tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 64, 'text': 'from .tools.list_files_tool import ListFilesTool', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 65, 'text': 'from .tools.query_tool import QueryTool', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 66, 'text': 'from .tools.read_partial_tool import ReadPartialTool', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 67, 'text': 'from .tools.search_content_tool import SearchContentTool', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 68, 'text': 'from .tools.table_format_tool import TableFormatTool', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 70, 'text': '# Import UniversalAnalyzeTool at module level for test compatibility', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 72, 'text': 'from .tools.universal_analyze_tool import UniversalAnalyzeTool', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 73, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 159, 'text': 'from .utils.error_handler import MCPError', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 196, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 197, 'text': 'from ..language_detector import detect_language_from_file', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 239, 'text': 'imports_count = len(', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 240, 'text': '[e for e in elements if is_element_of_type(e, ELEMENT_TYPE_IMPORT)]', 'matches': [[71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 249, 'text': '+ imports_count', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 271, 'text': '"imports": imports_count,', 'matches': [[21, 27], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\server.py', 'line': 639, 'text': 'from mcp.types import Prompt # type: ignore', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 6, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 8, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 32, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 33, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 34, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 35, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\java_formatter.py', 'line': 37, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\__init__.py', 'line': 15, 'text': 'from tree_sitter_analyzer.queries import get_query, list_queries', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\__init__.py', 'line': 24, 'text': 'from ..query_loader import get_query, is_language_supported, list_queries, query_loader', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 14, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 15, 'text': 'import gc', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 16, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 17, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 18, 'text': 'import warnings', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 19, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 22, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 23, 'text': 'import pytest_asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.utils import (', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 138, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 180, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 181, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_integration.py', 'line': 220, 'text': 'from typing import List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 10, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 13, 'text': 'from tree_sitter import Language, Node, Tree', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 15, 'text': 'from ..query_loader import get_query_loader', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 16, 'text': 'from ..utils.tree_sitter_compat import TreeSitterQueryCompat, get_node_text_safe', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 391, 'text': 'from ..language_loader import get_loader', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 476, 'text': 'from ..query_loader import get_query_loader', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 487, 'text': 'from ..query_loader import get_query_loader', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 508, 'text': 'import warnings', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 521, 'text': 'from ..language_loader import get_loader', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 13, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 14, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 15, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 16, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 17, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 18, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 20, 'text': 'import psutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 21, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 26, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 27, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 28, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 29, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 30, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 68, 'text': 'import java.time.LocalDateTime;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 69, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 70, 'text': 'import java.util.UUID;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 139, 'text': 'import com.enterprise.domain.User;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 140, 'text': 'import com.enterprise.repository.UserRepository;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 141, 'text': 'import org.springframework.beans.factory.annotation.Autowired;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 142, 'text': 'import org.springframework.stereotype.Service;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 143, 'text': 'import org.springframework.transaction.annotation.Transactional;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 145, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 146, 'text': 'import java.util.Optional;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 147, 'text': 'import java.util.UUID;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 254, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 255, 'text': 'from typing import List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 256, 'text': 'from uuid import UUID, uuid4', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 257, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 258, 'text': 'from enum import Enum', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 405, 'text': "import React, { useState, useEffect, useCallback } from 'react';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 1116, 'text': 'import_search = await search_tool.execute(', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 1119, 'text': '"query": "import.*User|from.*user",', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 1125, 'text': 'assert import_search["success"]', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\integration\\test_phase7_end_to_end.py', 'line': 1126, 'text': 'results["steps"].append(("import_search", import_search["count"]))', 'matches': [[34, 40], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 13, 'text': 'import pytest_asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp import MCP_INFO', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 25, 'text': 'from tree_sitter_analyzer.core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 26, 'text': 'from tree_sitter_analyzer.core.cache_service import CacheService', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_server.py', 'line': 143, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 12, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 79, 'text': '# Imports', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 80, 'text': 'imports = data.get("imports", [])', 'matches': [[8, 14], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 81, 'text': 'if imports:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 82, 'text': 'lines.append("## Imports")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 84, 'text': 'for imp in imports:', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 86, 'text': '# Handle malformed data where import is a string', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 87, 'text': 'import_statement = imp', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 89, 'text': 'import_statement = imp.get("statement", "")', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 90, 'text': 'if not import_statement:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 91, 'text': '# Construct import statement from parts', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 95, 'text': 'import_statement = f"import {name} from {source};"', 'matches': [[28, 34], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 97, 'text': 'import_statement = str(imp)', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 98, 'text': 'lines.append(import_statement)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\javascript_formatter.py', 'line': 567, 'text': 'import json', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 83, 'text': '# Import and export statements', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 84, 'text': 'IMPORTS = """', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 85, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 86, 'text': 'source: (string) @import.source) @import.statement', 'matches': [[22, 28], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 88, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 89, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 90, 'text': '(named_imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 91, 'text': '(import_specifier', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 92, 'text': 'name: (identifier) @import.name', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 93, 'text': 'alias: (identifier)? @import.alias)))) @import.named', 'matches': [[38, 44], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 95, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 96, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 97, 'text': '(import_default_specifier', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 98, 'text': '(identifier) @import.default))) @import.default', 'matches': [[26, 32], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 100, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 101, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 102, 'text': '(namespace_import', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 103, 'text': '(identifier) @import.namespace))) @import.namespace', 'matches': [[26, 32], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 105, 'text': '(type_import', 'matches': [[6, 12]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 106, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 107, 'text': '(named_imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 108, 'text': '(import_specifier', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 109, 'text': 'name: (identifier) @import.type.name', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 110, 'text': 'alias: (identifier)? @import.type.alias)))) @import.type', 'matches': [[38, 44], [61, 67]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 193, 'text': '"imports": {', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 194, 'text': '"query": IMPORTS,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 195, 'text': '"description": "Search all import statements including type imports",', 'matches': [[35, 41], [68, 74]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 327, 'text': '# Add import-specific queries', 'matches': [[6, 12]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 328, 'text': 'ALL_QUERIES["import_statement"] = {', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 330, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 331, 'text': 'source: (string) @import.source) @import.statement', 'matches': [[22, 28], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 333, 'text': '"description": "Search import statements with details",', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 336, 'text': 'ALL_QUERIES["type_import"] = {', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 338, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 340, 'text': '(import_clause) @import.clause', 'matches': [[5, 11], [21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 341, 'text': 'source: (string) @import.source) @type_import', 'matches': [[22, 28], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 343, 'text': '"description": "Search type import statements",', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 757, 'text': 'ALL_QUERIES["import_type"] = {', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 759, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 760, 'text': '"type" @import_type.keyword', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 761, 'text': '(import_clause) @import_type.clause', 'matches': [[5, 11], [21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 762, 'text': 'source: (string) @import_type.source) @import_type.statement', 'matches': [[22, 28], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\typescript.py', 'line': 764, 'text': '"description": "Search import type statements",', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 11, 'text': 'from typing import Any, NamedTuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 13, 'text': 'from tree_sitter import Tree', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 15, 'text': 'from ..encoding_utils import EncodingManager', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 16, 'text': 'from ..language_loader import get_loader', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 13, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_error_handling_remaining_tools.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\resources\\__init__.py', 'line': 18, 'text': 'from .code_file_resource import CodeFileResource', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\resources\\__init__.py', 'line': 19, 'text': 'from .project_stats_resource import ProjectStatsResource', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 14, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 15, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 17, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 48, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 49, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 50, 'text': 'from typing import List, Dict, Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 177, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 178, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 179, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 180, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 181, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 182, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 187, 'text': 'from main import DataProcessor', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 296, 'text': 'from src.main import DataProcessor', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 531, 'text': '{"query": "import", "roots": ["src/"], "total_only": True}', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 536, 'text': 'assert result >= 2 # 複数のimport文が存在', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 655, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_2_integration.py', 'line': 681, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 12, 'text': 'from ..models import CodeElement, MarkupElement, StyleElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 13, 'text': 'from .base_formatter import BaseFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\html_formatter.py', 'line': 14, 'text': 'from .formatter_registry import IFormatter', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\resources\\__init__.py', 'line': 18, 'text': 'from .code_file_resource import CodeFileResource', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\mcp\\resources\\__init__.py', 'line': 19, 'text': 'from .project_stats_resource import ProjectStatsResource', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 13, 'text': 'from tree_sitter import Tree', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 15, 'text': 'from ..language_detector import LanguageDetector', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 16, 'text': 'from ..models import AnalysisResult, CodeElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 17, 'text': 'from ..plugins.manager import PluginManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 18, 'text': 'from .parser import Parser, ParseResult', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 19, 'text': 'from .query import QueryExecutor', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 326, 'text': '# Extract imports', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 327, 'text': 'if hasattr(extractor, "extract_imports"):', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 328, 'text': 'imports = extractor.extract_imports(', 'matches': [[24, 30], [52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 331, 'text': 'elements.extend(imports)', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 6, 'text': 'Covers functions, classes, variables, imports, decorators, async/await,', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 32, 'text': '# Import statements', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 33, 'text': 'IMPORTS = """', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 34, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 35, 'text': 'name: (dotted_name) @import.name) @import.statement', 'matches': [[25, 31], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 37, 'text': '(import_from_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 38, 'text': 'module_name: (dotted_name)? @import.module', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 39, 'text': 'name: (dotted_name) @import.name) @import.from', 'matches': [[25, 31], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 41, 'text': '(import_from_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 42, 'text': 'module_name: (dotted_name)? @import.module', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 43, 'text': 'name: (import_list) @import.list) @import.from_list', 'matches': [[11, 17], [25, 31], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 45, 'text': '(aliased_import', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 46, 'text': 'name: (dotted_name) @import.name', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 47, 'text': 'alias: (identifier) @import.alias) @import.aliased', 'matches': [[25, 31], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 322, 'text': '# --- Imports ---', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 323, 'text': '"import": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 324, 'text': '(import_statement) @import', 'matches': [[5, 11], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 326, 'text': '"import_statement": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 327, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 328, 'text': 'name: (dotted_name) @import_name) @import_statement', 'matches': [[29, 35], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 330, 'text': '"import_from": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 331, 'text': '(import_from_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 333, 'text': 'name: (dotted_name) @import_name) @import_from', 'matches': [[29, 35], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 335, 'text': '"import_from_list": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 336, 'text': '(import_from_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 338, 'text': 'name: (import_list) @import_list) @import_from_list', 'matches': [[15, 21], [29, 35], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 340, 'text': '"aliased_import": """', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 341, 'text': '(aliased_import', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 342, 'text': 'name: (dotted_name) @import_name', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 343, 'text': 'alias: (identifier) @alias) @aliased_import', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 345, 'text': '"import_star": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 346, 'text': '(import_from_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 348, 'text': 'name: (wildcard_import) @star_import) @import_star', 'matches': [[24, 30], [38, 44], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 664, 'text': '"import": "Search import statements",', 'matches': [[5, 11], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 665, 'text': '"import_statement": "Search import statements with details",', 'matches': [[5, 11], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 666, 'text': '"import_from": "Search from-import statements",', 'matches': [[5, 11], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 667, 'text': '"import_from_list": "Search from-import with multiple names",', 'matches': [[5, 11], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 668, 'text': '"aliased_import": "Search aliased imports (as keyword)",', 'matches': [[13, 19], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 669, 'text': '"import_star": "Search star imports (from module import *)",', 'matches': [[5, 11], [32, 38], [53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 733, 'text': 'ALL_QUERIES["imports"] = {', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 734, 'text': '"query": IMPORTS,', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\python.py', 'line': 735, 'text': '"description": "Search all import statements",', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 17, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 18, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 19, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 21, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 129, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 130, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 131, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 132, 'text': 'from typing import Dict, List, Any, Optional, Union, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 133, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 134, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 135, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 136, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_1_integration.py', 'line': 386, 'text': 'import random', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 9, 'text': 'import importlib', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 10, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 13, 'text': 'from tree_sitter import Language, Parser', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 16, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 19, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 22, 'text': 'from .utils import log_warning', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 87, 'text': 'importlib.import_module(module_name)', 'matches': [[12, 18], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 90, 'text': 'except ImportError:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 113, 'text': 'self._loaded_modules[module_name] = importlib.import_module(module_name)', 'matches': [[52, 58], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 145, 'text': 'except (ImportError, AttributeError, Exception) as e:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 13, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 14, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 15, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 16, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 17, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 19, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 44, 'text': 'import java.util.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 45, 'text': 'import java.util.concurrent.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 46, 'text': 'import java.util.stream.Collectors;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 163, 'text': ').write_text("""import { EventEmitter } from \'events\';', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 297, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 298, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 299, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 300, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 301, 'text': 'from typing import Dict, List, Optional, Union, Callable, Any, TypeVar, Generic', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 302, 'text': 'from concurrent.futures import ThreadPoolExecutor', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 303, 'text': 'from contextlib import asynccontextmanager', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 504, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 505, 'text': 'from analytics_engine import create_default_engine', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 1049, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_3_integration.py', 'line': 1051, 'text': 'import psutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 9, 'text': 'import importlib', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 10, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 13, 'text': 'from tree_sitter import Language, Parser', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 16, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 19, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 22, 'text': 'from .utils import log_warning', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 87, 'text': 'importlib.import_module(module_name)', 'matches': [[12, 18], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 90, 'text': 'except ImportError:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 113, 'text': 'self._loaded_modules[module_name] = importlib.import_module(module_name)', 'matches': [[52, 58], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_loader.py', 'line': 145, 'text': 'except (ImportError, AttributeError, Exception) as e:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 10, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 12, 'text': 'from ..models import CodeElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 171, 'text': 'import json', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 213, 'text': 'import csv', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 214, 'text': 'import io', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 356, 'text': 'from .html_formatter import (', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 365, 'text': 'except ImportError:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_registry.py', 'line': 370, 'text': '# Auto-register built-in formatters when module is imported', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 15, 'text': 'import hashlib', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 16, 'text': 'import threading', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 17, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 18, 'text': 'from datetime import datetime, timedelta', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 19, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 21, 'text': 'from cachetools import LRUCache, TTLCache', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 23, 'text': 'from ..utils import log_debug, log_info', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 188, 'text': 'import pickle # nosec B403', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 229, 'text': 'import logging', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 323, 'text': 'import sys', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 332, 'text': '# Silently ignore all errors during shutdown to prevent ImportError', 'matches': [[68, 74]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 17, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 18, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 19, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 20, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 22, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 69, 'text': 'import org.junit.Test;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 70, 'text': 'import static org.junit.Assert.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 97, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 98, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 99, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 276, 'text': '{"roots": [temp_project], "query": "import", "total_only": True}', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 281, 'text': 'assert result > 0 # importステートメントが存在するはず', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\mcp\\test_user_story_4_integration.py', 'line': 564, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 12, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 13, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 18, 'text': 'from tree_sitter_analyzer.cli_main import main', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli.py', 'line': 88, 'text': '"imports",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 100, 'text': '"objc": ["#import", "@interface", "@implementation", "NSString", "alloc]"],', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 182, 'text': '(r"import\\s+[\\w\\.]+\\s*;", 0.2),', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 187, 'text': '(r"import\\s+\\w+", 0.2),', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 188, 'text': '(r"from\\s+\\w+\\s+import", 0.2),', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 239, 'text': '(r"@import\\s+", 0.3), # Import statements', 'matches': [[20, 26], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 248, 'text': 'from .utils import log_debug, log_warning', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 14, 'text': 'from tree_sitter_analyzer import __version__, api', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 50, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 373, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_api.py', 'line': 374, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 100, 'text': '"objc": ["#import", "@interface", "@implementation", "NSString", "alloc]"],', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 182, 'text': '(r"import\\s+[\\w\\.]+\\s*;", 0.2),', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 187, 'text': '(r"import\\s+\\w+", 0.2),', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 188, 'text': '(r"from\\s+\\w+\\s+import", 0.2),', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 239, 'text': '(r"@import\\s+", 0.3), # Import statements', 'matches': [[20, 26], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\language_detector.py', 'line': 248, 'text': 'from .utils import log_debug, log_warning', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 6, 'text': 'from .base_formatter import BaseTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 7, 'text': 'from .java_formatter import JavaTableFormatter', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 8, 'text': 'from .javascript_formatter import JavaScriptTableFormatter', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 9, 'text': 'from .python_formatter import PythonTableFormatter', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\formatter_factory.py', 'line': 10, 'text': 'from .typescript_formatter import TypeScriptTableFormatter', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 15, 'text': 'import hashlib', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 16, 'text': 'import threading', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 17, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 18, 'text': 'from typing import Any, Optional, Protocol', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 20, 'text': 'from ..models import AnalysisResult', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 21, 'text': 'from ..plugins.base import LanguagePlugin as BaseLanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 22, 'text': 'from ..plugins.manager import PluginManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 23, 'text': 'from ..security import SecurityValidator', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 24, 'text': 'from ..utils import log_debug, log_error, log_info, log_performance', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 25, 'text': 'from .cache_service import CacheService', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 134, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 140, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 259, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 398, 'text': 'from pathlib import Path', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 10, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 11, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 12, 'text': 'from unittest.mock import MagicMock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 16, 'text': '# Import the module under test', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool_cli_compatible import (', 'matches': [[70, 76]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 37, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 38, 'text': 'import java.util.Map;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 80, 'text': 'result.imports = [MagicMock(), MagicMock()] # 2 imports', 'matches': [[11, 17], [53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 259, 'text': 'assert result["element_counts"]["imports"] == 2', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 381, 'text': 'assert result["element_counts"]["imports"] == 0', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 407, 'text': 'assert result["element_counts"]["imports"] == 0', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 422, 'text': 'result_no_package.imports = []', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 443, 'text': 'result_no_annotations.imports = []', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 478, 'text': 'with patch("mcp.types.Tool", side_effect=ImportError):', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 534, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 550, 'text': 'import asyncio', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 597, 'text': 'import time', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 622, 'text': 'large_result.imports = [MagicMock() for _ in range(1000)]', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_cli_compatible.py', 'line': 636, 'text': 'assert result["element_counts"]["imports"] == 1000', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 6, 'text': 'Covers functions, classes, variables, imports, exports, and modern JavaScript features.', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 142, 'text': '# --- Imports and Exports ---', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 143, 'text': '"import": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 144, 'text': '(import_statement) @import', 'matches': [[5, 11], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 146, 'text': '"import_statement": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 147, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 148, 'text': 'source: (string) @source) @import_statement', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 150, 'text': '"import_default": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 151, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 152, 'text': '(import_clause', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 153, 'text': '(import_default_specifier', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 155, 'text': 'source: (string) @source) @import_default', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 157, 'text': '"import_named": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 158, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 159, 'text': '(import_clause', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 160, 'text': '(named_imports', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 161, 'text': '(import_specifier', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 162, 'text': 'name: (identifier) @import_name', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 164, 'text': 'source: (string) @source) @import_named', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 166, 'text': '"import_namespace": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 167, 'text': '(import_statement', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 168, 'text': '(import_clause', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 169, 'text': '(namespace_import', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 171, 'text': 'source: (string) @source) @import_namespace', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 173, 'text': '"dynamic_import": """', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 175, 'text': 'function: (identifier) @import_function', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 176, 'text': '(#match? @import_function "import")', 'matches': [[18, 24], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 177, 'text': 'arguments: (arguments (string) @source)) @dynamic_import', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 462, 'text': '"import": "Search import statements",', 'matches': [[5, 11], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 463, 'text': '"import_statement": "Search import statements with details",', 'matches': [[5, 11], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 464, 'text': '"import_default": "Search default imports",', 'matches': [[5, 11], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 465, 'text': '"import_named": "Search named imports",', 'matches': [[5, 11], [34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 466, 'text': '"import_namespace": "Search namespace imports",', 'matches': [[5, 11], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 467, 'text': '"dynamic_import": "Search dynamic imports",', 'matches': [[13, 19], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 566, 'text': 'IMPORTS = """', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 567, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 568, 'text': 'source: (string) @import.source) @import.statement', 'matches': [[22, 28], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 570, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 571, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 572, 'text': '(named_imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 573, 'text': '(import_specifier', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 574, 'text': 'name: (identifier) @import.name', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 575, 'text': 'alias: (identifier)? @import.alias)))) @import.named', 'matches': [[38, 44], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 577, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 578, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 579, 'text': '(import_default_specifier', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 580, 'text': '(identifier) @import.default))) @import.default', 'matches': [[26, 32], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 582, 'text': '(import_statement', 'matches': [[1, 7]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 583, 'text': '(import_clause', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 584, 'text': '(namespace_import', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 585, 'text': '(identifier) @import.namespace))) @import.namespace', 'matches': [[26, 32], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 633, 'text': 'ALL_QUERIES["imports"] = {', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 634, 'text': '"query": IMPORTS,', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\javascript.py', 'line': 635, 'text': '"description": "Search all import statements and clauses",', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cache_logic_only.py', 'line': 8, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cache_logic_only.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cache_logic_only.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import (', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 11, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 12, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 13, 'text': 'from unittest.mock import MagicMock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 33, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 34, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 35, 'text': 'import java.util.Map;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 36, 'text': 'import java.util.HashMap;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 37, 'text': 'import java.util.stream.Collectors;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 38, 'text': 'import javax.annotation.Nullable;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 170, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 171, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 172, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 173, 'text': 'from typing import List, Dict, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_analyze_scale_tool_file_output.py', 'line': 376, 'text': 'assert "imports" in summary', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\constants.py', 'line': 12, 'text': 'ELEMENT_TYPE_IMPORT = "import"', 'matches': [[13, 19], [23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\constants.py', 'line': 21, 'text': '"Import": ELEMENT_TYPE_IMPORT,', 'matches': [[5, 11], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\constants.py', 'line': 31, 'text': '"Import": ELEMENT_TYPE_IMPORT,', 'matches': [[5, 11], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 6, 'text': 'Covers classes, methods, annotations, imports, and other Java-specific elements.', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 50, 'text': '# --- Imports and Packages ---', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 51, 'text': '"import": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 52, 'text': '(import_declaration) @import', 'matches': [[5, 11], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 54, 'text': '"static_import": """', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 55, 'text': '(import_declaration', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 56, 'text': '"static") @static_import', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 230, 'text': '"import_detailed": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 231, 'text': '(import_declaration', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 233, 'text': '(scoped_identifier) @import_path) @import_detailed', 'matches': [[27, 33], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 269, 'text': '"import": "Extract Java import statements",', 'matches': [[5, 11], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 292, 'text': '"import_detailed": "Extract detailed import statement information",', 'matches': [[5, 11], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\java.py', 'line': 304, 'text': '"static_import": "Extract static import statements",', 'matches': [[12, 18], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 6, 'text': 'import csv', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 7, 'text': 'import io', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 8, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\formatters\\base_formatter.py', 'line': 52, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\__init__.py', 'line': 14, 'text': 'from .boundary_manager import ProjectBoundaryManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\__init__.py', 'line': 15, 'text': 'from .regex_checker import RegexSafetyChecker', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\__init__.py', 'line': 16, 'text': 'from .validator import SecurityValidator', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cache_format_compatibility_bug.py', 'line': 8, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cache_format_compatibility_bug.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cache_format_compatibility_bug.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import SearchCache', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 4, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 5, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 6, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 9, 'text': 'import psutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 12, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_performance.py', 'line': 355, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 17, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError, ValidationError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 21, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 22, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 23, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 24, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 25, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 26, 'text': 'from tree_sitter_analyzer.security.validator import SecurityValidator', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 265, 'text': 'import platform', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\security\\test_mcp_security.py', 'line': 266, 'text': 'from unittest.mock import patch', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\file_handler.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\file_handler.py', 'line': 10, 'text': 'from .encoding_utils import read_file_safe', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\file_handler.py', 'line': 11, 'text': 'from .utils import setup_logger', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 4, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 5, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 6, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 7, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 8, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 10, 'text': 'from .cli.argument_validator import CLIArgumentValidator', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 12, 'text': '# Import command classes', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 13, 'text': 'from .cli.commands import (', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 22, 'text': 'from .cli.info_commands import (', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 28, 'text': 'from .output_manager import output_error, output_info, output_list', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 29, 'text': 'from .query_loader import query_loader', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 61, 'text': 'from tree_sitter_analyzer.core.query_filter import QueryFilter', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 284, 'text': '# Early check for quiet mode to set environment variable before any imports', 'matches': [[72, 78]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 12, 'text': 'from ..exceptions import SecurityError', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 13, 'text': 'from ..utils import log_debug, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 14, 'text': 'from .boundary_manager import ProjectBoundaryManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 15, 'text': 'from .regex_checker import RegexSafetyChecker', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 350, 'text': 'import platform', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 356, 'text': 'import stat', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 368, 'text': 'import ctypes', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 369, 'text': 'from ctypes import wintypes', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 383, 'text': 'except (ImportError, AttributeError, OSError):', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 426, 'text': 'import platform', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 480, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\validator.py', 'line': 481, 'text': 'import tempfile', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_query_service.py', 'line': 4, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_query_service.py', 'line': 5, 'text': 'import inspect', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_query_service.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_query_service.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_query_service.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_async_query_service.py', 'line': 11, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 10, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 12, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 87, 'text': 'assert "## Imports" in stdout', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 118, 'text': ') # Total elements (methods, classes, fields, imports, package)', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 129, 'text': 'imports = [e for e in elements if e["type"] == "import"]', 'matches': [[8, 14], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 135, 'text': 'assert len(imports) == 8 # Import statements', 'matches': [[19, 25], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 207, 'text': 'assert "imports" in data', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_regression.py', 'line': 214, 'text': 'assert len(data["imports"]) == 8', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 11, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 12, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 13, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 15, 'text': 'from typing import Dict, Any, Optional, List', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\version_manager.py', 'line': 103, 'text': '"import tree_sitter_analyzer; print(tree_sitter_analyzer.__version__)"],', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 80, 'text': '"import_statement": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 81, 'text': '(import_statement) @import_statement', 'matches': [[5, 11], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 377, 'text': '# --- Important Declarations ---', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 378, 'text': '"important": """', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 381, 'text': '"!" @important_mark', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 382, 'text': '"important" @important_keyword) @important', 'matches': [[9, 15], [21, 27], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 433, 'text': '"import_statement": "Search @import statements",', 'matches': [[5, 11], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\queries\\css.py', 'line': 491, 'text': '"important": "Search !important declarations",', 'matches': [[5, 11], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 12, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 13, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 15, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 17, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 19, 'text': 'from tree_sitter_analyzer.cli_main import main', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 28, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 127, 'text': 'assert "Imports: 1" in output # Sample file has 1 import', 'matches': [[16, 22], [59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 167, 'text': 'elif line.startswith(\'"Imports: \'):', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 168, 'text': 'element_counts["imports"] = int(line.split(": ")[1].rstrip(\'"\'))', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 180, 'text': 'assert element_counts.get("imports", 0) == 1, (', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 181, 'text': 'f"Expected 1 import, got {element_counts.get(\'imports\', 0)}"', 'matches': [[25, 31], [58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 198, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 371, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 470, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 642, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 945, 'text': 'return ["methods", "class", "imports"] # Return some available queries', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 989, 'text': 'return ["methods", "class", "imports"]', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_comprehensive.py', 'line': 1314, 'text': 'import tempfile', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 10, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 213, 'text': 'from .utils import log_error', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 259, 'text': 'from .utils import log_error', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 278, 'text': 'import traceback', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 323, 'text': 'from .utils import log_error', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 569, 'text': 'import traceback', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 576, 'text': '"timestamp": __import__("datetime").datetime.utcnow().isoformat() + "Z",', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 676, 'text': 'from .utils import log_error', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 703, 'text': 'from .utils import log_error', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 723, 'text': 'from .utils import log_error', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\exceptions.py', 'line': 740, 'text': 'if __import__("asyncio").iscoroutinefunction(func):', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_filter.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_filter.py', 'line': 10, 'text': 'from tree_sitter_analyzer.core.query_filter import QueryFilter', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\regex_checker.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\regex_checker.py', 'line': 10, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\regex_checker.py', 'line': 12, 'text': 'from ..utils import log_debug, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_query_filter_integration.py', 'line': 8, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_query_filter_integration.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_query_filter_integration.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_query_filter_integration.py', 'line': 13, 'text': 'from tree_sitter_analyzer.cli.commands.query_command import QueryCommand', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 7, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 8, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 10, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 11, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 12, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 13, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 14, 'text': 'import venv', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 15, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 16, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 17, 'text': 'from typing import Dict, List, Any, Optional, Union', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\utils.py', 'line': 18, 'text': 'import copy', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\project_detector.py', 'line': 8, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\project_detector.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\project_detector.py', 'line': 320, 'text': 'import sys', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 4, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 5, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 463, 'text': 'import concurrent.futures', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_async_integration.py', 'line': 544, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 10, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 12, 'text': 'import threading', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 13, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 15, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 41, 'text': '# Set up environment when module is imported', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 44, 'text': '# Try to import chardet with fallback', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 46, 'text': 'import chardet', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 49, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 52, 'text': '# Import utilities with fallback', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 54, 'text': 'from .utils import log_debug, log_warning', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\encoding_utils.py', 'line': 55, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 9, 'text': 'from unittest.mock import Mock', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.query import QueryExecutor', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 14, 'text': 'from tree_sitter_analyzer.exceptions import QueryError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 259, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 303, 'text': 'import time', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 323, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 364, 'text': 'import importlib.util', 'matches': [[12, 18], [19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 366, 'text': 'tree_sitter_spec = importlib.util.find_spec("tree_sitter")', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_extended.py', 'line': 388, 'text': 'except ImportError:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\boundary_manager.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\boundary_manager.py', 'line': 11, 'text': 'from ..exceptions import SecurityError', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\security\\boundary_manager.py', 'line': 12, 'text': 'from ..utils import log_debug, log_info, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 16, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 17, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 18, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 19, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 20, 'text': 'from typing import Any, Dict, List, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\unified_report.py', 'line': 495, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 10, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 17, 'text': 'from tree_sitter_analyzer.cli.commands import list_files_cli', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 53, 'text': 'from tree_sitter_analyzer.cli.commands import search_content_cli', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 95, 'text': 'from tree_sitter_analyzer.cli.commands import find_and_grep_cli', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 99, 'text': 'assert arguments["query"] == "import"', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_fd_rg_commands.py', 'line': 122, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\argument_validator.py', 'line': 8, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_argument_validation.py', 'line': 8, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_argument_validation.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_cli_argument_validation.py', 'line': 12, 'text': 'from tree_sitter_analyzer.cli.argument_validator import CLIArgumentValidator', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 15, 'text': 'from tree_sitter_analyzer.core.engine import AnalysisEngine', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 16, 'text': 'from tree_sitter_analyzer.exceptions import AnalysisError, ParseError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 17, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 83, 'text': '"import", # Incomplete import', 'matches': [[13, 19], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 195, 'text': 'except (ImportError, AttributeError):', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 226, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_engine_extended.py', 'line': 263, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 8, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 9, 'text': 'from argparse import Namespace', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 11, 'text': 'from ..language_detector import detect_language_from_file, detector', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 12, 'text': 'from ..output_manager import output_data, output_error, output_info, output_list', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 13, 'text': 'from ..query_loader import query_loader', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 116, 'text': 'from itertools import islice', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 10, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 12, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 23, 'text': 'from version_manager import create_version_manager', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 24, 'text': 'from mcp_client import SimpleMCPClient', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_version_manager.py', 'line': 133, 'text': 'import os', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_cache.py', 'line': 6, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_cache.py', 'line': 7, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_cache.py', 'line': 8, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_cache.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_cache.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_cache.py', 'line': 13, 'text': 'from tree_sitter_analyzer.encoding_utils import (', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 8, 'text': 'from .advanced_command import AdvancedCommand', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 9, 'text': 'from .base_command import BaseCommand', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 10, 'text': 'from .default_command import DefaultCommand', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 11, 'text': 'from .partial_read_command import PartialReadCommand', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 12, 'text': 'from .query_command import QueryCommand', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 13, 'text': 'from .structure_command import StructureCommand', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 14, 'text': 'from .summary_command import SummaryCommand', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 15, 'text': 'from .table_command import TableCommand', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_simplified_version_manager.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_simplified_version_manager.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_simplified_version_manager.py', 'line': 13, 'text': 'from tests.compatibility_test.version_manager import VersionManager', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_data\\small_sample.py', 'line': 7, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_data\\small_sample.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_data\\small_sample.py', 'line': 9, 'text': 'from typing import List, Dict, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 8, 'text': 'from .info_commands import (', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 16, 'text': '# Modern framework imports', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 18, 'text': 'from ..cli_main import main', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 19, 'text': 'from ..core.analysis_engine import get_analysis_engine', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 20, 'text': 'from ..query_loader import QueryLoader', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 23, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 24, 'text': '# Minimal fallback for import safety', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 10, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 15, 'text': 'from tree_sitter_analyzer.cli_main import main', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 16, 'text': 'from tree_sitter_analyzer.constants import (', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 19, 'text': 'ELEMENT_TYPE_IMPORT,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 35, 'text': 'assert ELEMENT_TYPE_IMPORT == "import"', 'matches': [[28, 34], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 88, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 149, 'text': 'elif line.startswith(\'"Imports: \'):', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 150, 'text': 'element_counts["imports"] = int(line.split(": ")[1].rstrip(\'"\'))', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 162, 'text': 'assert element_counts.get("imports", 0) == 1, (', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 163, 'text': 'f"Expected 1 import, got {element_counts.get(\'imports\', 0)}"', 'matches': [[25, 31], [58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 284, 'text': 'elif line.startswith(\'"Imports: \'):', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 286, 'text': 'advanced_counts["imports"] = int(line.split(": ")[1].rstrip(\'"\'))', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 410, 'text': 'elif line.startswith(\'"Imports: \'):', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 411, 'text': 'element_counts["imports"] = int(line.split(": ")[1].rstrip(\'"\'))', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 413, 'text': '# For an empty class, we should have 1 class, 0 methods, 0 fields, 0 imports', 'matches': [[77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 419, 'text': 'assert element_counts.get("imports", 0) == 0, (', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_element_type_system.py', 'line': 420, 'text': '"Empty class should have 0 imports"', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 11, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 12, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 15, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 18, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 21, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 24, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 25, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 26, 'text': 'from ..language_loader import loader', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 27, 'text': 'from ..models import AnalysisResult, Class, CodeElement, Function, Import, Variable', 'matches': [[14, 20], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 28, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 29, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 40, 'text': 'self.imports: list[str] = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 130, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 132, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 133, 'text': '"""Extract JavaScript import statements with ES6+ support"""', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 137, 'text': 'imports: list[Import] = []', 'matches': [[8, 14], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 139, 'text': '# Extract imports efficiently', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 141, 'text': 'if child.type == "import_statement":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 142, 'text': 'import_info = self._extract_import_info_simple(child)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 143, 'text': 'if import_info:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 144, 'text': 'imports.append(import_info)', 'matches': [[20, 26], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 146, 'text': '# Check for dynamic imports', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 147, 'text': 'dynamic_import = self._extract_dynamic_import(child)', 'matches': [[24, 30], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 148, 'text': 'if dynamic_import:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 149, 'text': 'imports.append(dynamic_import)', 'matches': [[20, 26], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 152, 'text': 'commonjs_imports = self._extract_commonjs_requires(tree, source_code)', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 153, 'text': 'imports.extend(commonjs_imports)', 'matches': [[8, 14], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 155, 'text': 'log_debug(f"Extracted {len(imports)} JavaScript imports")', 'matches': [[35, 41], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 156, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 193, 'text': 'self.is_module = "import " in self.source_code or "export " in self.source_code', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 378, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 857, 'text': 'def _extract_import_info_simple(self, node: "tree_sitter.Node") -> Import | None:', 'matches': [[17, 23], [71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 858, 'text': '"""Extract import information from import_statement node"""', 'matches': [[19, 25], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 869, 'text': '# Extract import details from AST structure', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 870, 'text': 'import_names = []', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 874, 'text': 'if child.type == "import_clause":', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 875, 'text': 'import_names.extend(self._extract_import_names(child))', 'matches': [[20, 26], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 883, 'text': '# Use first import name or "unknown"', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 884, 'text': 'primary_name = import_names[0] if import_names else "unknown"', 'matches': [[27, 33], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 886, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 894, 'text': 'imported_names=import_names,', 'matches': [[16, 22], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 898, 'text': 'log_debug(f"Failed to extract import info: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 901, 'text': 'def _extract_import_names(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 902, 'text': 'self, import_clause_node: "tree_sitter.Node"', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 904, 'text': '"""Extract import names from import clause"""', 'matches': [[19, 25], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 908, 'text': 'for child in import_clause_node.children:', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 909, 'text': 'if child.type == "import_default_specifier":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 910, 'text': '# Default import', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 917, 'text': 'elif child.type == "named_imports":', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 918, 'text': '# Named imports', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 920, 'text': 'if grandchild.type == "import_specifier":', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 930, 'text': 'def _extract_import_info_enhanced(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 932, 'text': ') -> Import | None:', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 933, 'text': '"""Extract enhanced import information"""', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 935, 'text': 'import_text = self._get_node_text_optimized(node)', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 937, 'text': '# Parse different import types', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 938, 'text': 'import_info = self._parse_import_statement(import_text)', 'matches': [[12, 18], [38, 44], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 939, 'text': 'if not import_info:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 942, 'text': 'import_type, names, source, is_default, is_namespace = import_info', 'matches': [[12, 18], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 944, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 948, 'text': 'raw_text=import_text,', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 952, 'text': 'import_type=import_type,', 'matches': [[16, 22], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 953, 'text': 'imported_names=names,', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 959, 'text': 'log_debug(f"Failed to extract import info: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 962, 'text': 'def _extract_dynamic_import(self, node: "tree_sitter.Node") -> Import | None:', 'matches': [[25, 31], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 963, 'text': '"""Extract dynamic import() calls"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 967, 'text': '# Look for import() calls', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 968, 'text': 'import_match = re.search(', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 969, 'text': 'r"import\\s*\\(\\s*[\\"\']([^\\"\']+)[\\"\']\\s*\\)", node_text', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 971, 'text': 'if not import_match:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 974, 'text': 'source = import_match.group(1)', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 976, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 977, 'text': 'name="dynamic_import",', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 984, 'text': 'import_type="dynamic",', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 988, 'text': 'log_debug(f"Failed to extract dynamic import: {e}")', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 993, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 995, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1008, 'text': 'import_obj = Import(', 'matches': [[16, 22], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1016, 'text': 'imported_names=[var_name],', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1018, 'text': 'imports.append(import_obj)', 'matches': [[16, 22], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1025, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1085, 'text': 'def _parse_import_statement(', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1086, 'text': 'self, import_text: str', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1088, 'text': '"""Parse import statement to extract details"""', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1091, 'text': 'clean_text = import_text.strip().rstrip(";")', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1100, 'text': '# Determine import type and extract names', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1101, 'text': 'if "import * as" in clean_text:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1102, 'text': '# Namespace import', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1103, 'text': 'namespace_match = re.search(r"import\\s+\\*\\s+as\\s+(\\w+)", clean_text)', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1107, 'text': 'elif "import {" in clean_text:', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1108, 'text': '# Named imports', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1109, 'text': 'named_match = re.search(r"import\\s+\\{([^}]+)\\}", clean_text)', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1116, 'text': '# Default import', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1117, 'text': 'default_match = re.search(r"import\\s+(\\w+)", clean_text)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1229, 'text': 'elements.extend(self.extract_imports(tree, source_code))', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1403, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1434, 'text': '"Module imports/exports",', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1478, 'text': 'elif query_key in ["import", "imports"]:', 'matches': [[28, 34], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1479, 'text': 'elements = extractor.extract_imports(tree, source_code)', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1501, 'text': 'from ..models import Class, Function, Import, Variable', 'matches': [[22, 28], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1514, 'text': 'elif isinstance(element, Import):', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1515, 'text': 'return "import_statement"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1544, 'text': '# Import/Export-related queries', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1545, 'text': '"import": ["import_statement"],', 'matches': [[13, 19], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1546, 'text': '"imports": ["import_statement"],', 'matches': [[13, 19], [25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1566, 'text': '"import_statement",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1611, 'text': 'imports = extractor.extract_imports(tree, source_code)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1624, 'text': 'elements.extend(imports)', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1657, 'text': '"imports": [],', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1664, 'text': 'imports = self._extractor.extract_imports(tree, source_code)', 'matches': [[12, 18], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1670, 'text': '"imports": imports,', 'matches': [[17, 23], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1679, 'text': '"imports": [],', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__main__.py', 'line': 9, 'text': 'from ..cli_main import main', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 8, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 11, 'text': 'from typing import Any, Dict, List, Optional, Union', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\test_case_loader.py', 'line': 13, 'text': 'from colored_logger import get_logger', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 12, 'text': 'from tree_sitter_analyzer.languages.css_plugin import CssElementExtractor, CssPlugin', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 13, 'text': 'from tree_sitter_analyzer.models import StyleElement', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 73, 'text': 'def test_extract_imports_returns_empty(self):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 74, 'text': '"""Test that CSS extractor returns empty list for imports"""', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 75, 'text': 'result = self.extractor.extract_imports(None, "")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_css_plugin.py', 'line': 185, 'text': 'import tempfile', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 6, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 7, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 11, 'text': 'from tree_sitter_analyzer.core.engine import AnalysisEngine', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 12, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 58, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_engine.py', 'line': 78, 'text': 'assert "import" in element_types', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 11, 'text': 'from typing import TYPE_CHECKING', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 13, 'text': 'from ..models import AnalysisResult, StyleElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 14, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 15, 'text': 'from ..utils import log_debug, log_error, log_info', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 18, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 20, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 95, 'text': 'def extract_imports(self, tree: "tree_sitter.Tree", source_code: str) -> list:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 96, 'text': '"""CSS doesn\'t have imports in the traditional sense, return empty list"""', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 136, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 160, 'text': '"import_statement",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 332, 'text': 'from ..queries.css import CSS_QUERIES', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 365, 'text': 'from ..encoding_utils import read_file_safe', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 373, 'text': 'import tree_sitter', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 374, 'text': 'import tree_sitter_css as ts_css', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 404, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 11, 'text': 'from typing import TYPE_CHECKING', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 13, 'text': 'from ..models import AnalysisResult, MarkupElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 14, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 15, 'text': 'from ..utils import log_debug, log_error, log_info', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 18, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 20, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 119, 'text': 'def extract_imports(self, tree: "tree_sitter.Tree", source_code: str) -> list:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 120, 'text': '"""HTML doesn\'t have imports, return empty list"""', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 375, 'text': 'from ..queries.html import HTML_QUERIES', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 406, 'text': 'from ..encoding_utils import read_file_safe', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 414, 'text': 'import tree_sitter', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 415, 'text': 'import tree_sitter_html as ts_html', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 445, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 10, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 13, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 16, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 19, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 22, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 23, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 24, 'text': 'from ..models import AnalysisResult, CodeElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 25, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 26, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 27, 'text': 'from ..utils.tree_sitter_compat import TreeSitterQueryCompat', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 102, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 654, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 708, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 762, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 816, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 861, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 899, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1107, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1176, 'text': 'import re', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1197, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1240, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1296, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1332, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1368, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1441, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1457, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1526, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1529, 'text': '"""Extract imports from the tree (legacy compatibility)"""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1531, 'text': 'return extractor.extract_imports(tree, source_code)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1537, 'text': 'import tree_sitter', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1538, 'text': 'import tree_sitter_markdown as tsmarkdown', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1543, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1707, 'text': '# Import query definitions', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1708, 'text': 'from ..queries.markdown import get_query', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1785, 'text': '# Reference queries (mapped to imports)', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1786, 'text': '"import": lambda: self._extractor.extract_references(tree, source_code),', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1890, 'text': '# Reference categories (import-like)', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1891, 'text': '"import": ["link_reference_definition"],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 11, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 12, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 15, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 18, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 21, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 24, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 25, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 26, 'text': 'from ..language_loader import loader', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 27, 'text': 'from ..models import AnalysisResult, Class, CodeElement, Function, Import, Variable', 'matches': [[14, 20], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 28, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 29, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 40, 'text': 'self.imports: list[str] = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 136, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 138, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 139, 'text': '"""Extract TypeScript import statements with ES6+ and type import support"""', 'matches': [[30, 36], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 143, 'text': 'imports: list[Import] = []', 'matches': [[8, 14], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 145, 'text': '# Extract imports efficiently', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 147, 'text': 'if child.type == "import_statement":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 148, 'text': 'import_info = self._extract_import_info_simple(child)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 149, 'text': 'if import_info:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 150, 'text': 'imports.append(import_info)', 'matches': [[20, 26], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 152, 'text': '# Check for dynamic imports', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 153, 'text': 'dynamic_import = self._extract_dynamic_import(child)', 'matches': [[24, 30], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 154, 'text': 'if dynamic_import:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 155, 'text': 'imports.append(dynamic_import)', 'matches': [[20, 26], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 158, 'text': 'commonjs_imports = self._extract_commonjs_requires(tree, source_code)', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 159, 'text': 'imports.extend(commonjs_imports)', 'matches': [[8, 14], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 161, 'text': 'log_debug(f"Extracted {len(imports)} TypeScript imports")', 'matches': [[35, 41], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 162, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 175, 'text': 'self.is_module = "import " in self.source_code or "export " in self.source_code', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 368, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1079, 'text': 'import re', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1153, 'text': 'def _extract_import_info_simple(self, node: "tree_sitter.Node") -> Import | None:', 'matches': [[17, 23], [71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1154, 'text': '"""Extract import information from import_statement node"""', 'matches': [[19, 25], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1191, 'text': '# Extract import details from AST structure', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1192, 'text': 'import_names = []', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1194, 'text': '# Check for type import (not used but kept for future reference)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1195, 'text': '# is_type_import = "type" in raw_text', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1200, 'text': 'if child.type == "import_clause":', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1201, 'text': 'import_names.extend(self._extract_import_names(child))', 'matches': [[24, 30], [58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1222, 'text': '# If no import names found but we have a mocked _extract_import_names, try calling it', 'matches': [[20, 26], [69, 75]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1223, 'text': 'if not import_names and hasattr(self, "_extract_import_names"):', 'matches': [[19, 25], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1224, 'text': '# For test scenarios where _extract_import_names is mocked', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1226, 'text': '# Try to find import_clause in children', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1232, 'text': 'if child.type == "import_clause":', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1233, 'text': 'import_names.extend(self._extract_import_names(child))', 'matches': [[28, 34], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1239, 'text': 'if not module_path and not import_names:', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1242, 'text': '# Use first import name or "unknown"', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1243, 'text': 'primary_name = import_names[0] if import_names else "unknown"', 'matches': [[27, 33], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1245, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1253, 'text': 'imported_names=import_names,', 'matches': [[16, 22], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1257, 'text': 'log_debug(f"Failed to extract import info: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1260, 'text': 'def _extract_import_names(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1261, 'text': 'self, import_clause_node: "tree_sitter.Node", import_text: str = ""', 'matches': [[14, 20], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1263, 'text': '"""Extract import names from import clause"""', 'matches': [[19, 25], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1269, 'text': 'hasattr(import_clause_node, "children")', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1270, 'text': 'and import_clause_node.children is not None', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1272, 'text': 'children = import_clause_node.children', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1279, 'text': 'if child.type == "import_default_specifier":', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1280, 'text': '# Default import', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1300, 'text': 'elif child.type == "named_imports":', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1301, 'text': '# Named imports', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1304, 'text': 'if grandchild.type == "import_specifier":', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1335, 'text': '# Direct identifier (default import case)', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1352, 'text': 'elif child.type == "namespace_import":', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1353, 'text': '# Namespace import (import * as name)', 'matches': [[32, 38], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1374, 'text': 'log_debug(f"Failed to extract import names: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1378, 'text': 'def _extract_dynamic_import(self, node: "tree_sitter.Node") -> Import | None:', 'matches': [[25, 31], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1379, 'text': '"""Extract dynamic import() calls"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1383, 'text': '# Look for import() calls - more flexible regex', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1384, 'text': 'import_match = re.search(', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1385, 'text': 'r"import\\s*\\(\\s*[\\"\']([^\\"\']+)[\\"\']\\s*\\)", node_text', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1387, 'text': 'if not import_match:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1389, 'text': 'import_match = re.search(r"import\\s*\\(\\s*([^)]+)\\s*\\)", node_text)', 'matches': [[16, 22], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1390, 'text': 'if import_match:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1391, 'text': 'source = import_match.group(1).strip("\\"\'")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1395, 'text': 'source = import_match.group(1)', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1397, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1398, 'text': 'name="dynamic_import",', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1405, 'text': 'imported_names=["dynamic_import"],', 'matches': [[16, 22], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1408, 'text': 'log_debug(f"Failed to extract dynamic import: {e}")', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1413, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1415, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1435, 'text': 'import_obj = Import(', 'matches': [[16, 22], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1443, 'text': 'imported_names=[var_name],', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1445, 'text': 'imports.append(import_obj)', 'matches': [[16, 22], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1451, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1623, 'text': 'all_elements.extend(self.extract_imports(tree, source_code))', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1679, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1718, 'text': '"Import/export statements",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1768, 'text': 'imports = extractor.extract_imports(tree, source_code)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1773, 'text': 'elements.extend(imports)', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1809, 'text': 'all_elements.extend(extractor.extract_imports(tree, source_code))', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1874, 'text': '# Import/Export queries', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1875, 'text': '"import": lambda: self._extractor.extract_imports(tree, source_code),', 'matches': [[13, 19], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1878, 'text': 'for i in self._extractor.extract_imports(tree, source_code)', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1953, 'text': '# Import/Export categories', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1954, 'text': '"import": ["import_statement"],', 'matches': [[13, 19], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_service.py', 'line': 8, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_service.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_service.py', 'line': 12, 'text': 'from tree_sitter_analyzer.core.parser import ParseResult', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_service.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_service.py', 'line': 268, 'text': 'mock_loader.list_queries.return_value = ["methods", "class", "imports"]', 'matches': [[74, 80]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core_query_service.py', 'line': 272, 'text': 'assert result == ["methods", "class", "imports"]', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 11, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 12, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 13, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 14, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 15, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 17, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 18, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 19, 'text': 'from typing import List, Dict, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 20, 'text': 'from concurrent.futures import ThreadPoolExecutor', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 21, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 25, 'text': 'import questionary', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 26, 'text': 'from rich.console import Console', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 27, 'text': 'from rich.progress import Progress, TaskID, SpinnerColumn, TextColumn, BarColumn, TimeElapsedColumn', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 28, 'text': 'from rich.table import Table', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 29, 'text': 'from rich.panel import Panel', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 30, 'text': 'from rich.text import Text', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 31, 'text': 'from rich.live import Live', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 32, 'text': 'from packaging import version', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 33, 'text': 'import yaml', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 34, 'text': 'except ImportError as e:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 127, 'text': '"import tree_sitter_analyzer; print(tree_sitter_analyzer.__version__)"', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 273, 'text': 'import urllib.request', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 274, 'text': 'import json', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\setup_versions.py', 'line': 489, 'text': '"import tree_sitter_analyzer; print(tree_sitter_analyzer.__version__)"', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 10, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 13, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 15, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 16, 'text': 'from ..models import AnalysisResult', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 18, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 19, 'text': 'from ..models import Class, CodeElement, Function, Import, Package, Variable', 'matches': [[14, 20], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 20, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 21, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 33, 'text': 'self.imports: list[str] = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 105, 'text': '# is called independently or before extract_imports', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 150, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 152, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 153, 'text': '"""Extract Java import statements with enhanced robustness"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 157, 'text': 'imports: list[Import] = []', 'matches': [[8, 14], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 159, 'text': '# Extract package and imports efficiently (from AdvancedAnalyzer)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 163, 'text': 'elif child.type == "import_declaration":', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 164, 'text': 'import_info = self._extract_import_info(child, source_code)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 165, 'text': 'if import_info:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 166, 'text': 'imports.append(import_info)', 'matches': [[20, 26], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 172, 'text': '# After package and imports come class declarations, so stop', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 175, 'text': '# Fallback: if no imports found via tree-sitter, try regex-based extraction', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 176, 'text': 'if not imports and "import" in source_code:', 'matches': [[15, 21], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 177, 'text': 'log_debug("No imports found via tree-sitter, trying regex fallback")', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 178, 'text': 'fallback_imports = self._extract_imports_fallback(source_code)', 'matches': [[21, 27], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 179, 'text': 'imports.extend(fallback_imports)', 'matches': [[12, 18], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 181, 'text': 'log_debug(f"Extracted {len(imports)} imports")', 'matches': [[35, 41], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 182, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 184, 'text': 'def _extract_imports_fallback(self, source_code: str) -> list[Import]:', 'matches': [[17, 23], [66, 72]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 185, 'text': '"""Fallback import extraction using regex when tree-sitter fails"""', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 186, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 191, 'text': 'if line.startswith("import ") and line.endswith(";"):', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 192, 'text': '# Extract import statement', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 193, 'text': 'import_content = line[:-1] # Remove semicolon', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 195, 'text': 'if "static" in import_content:', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 196, 'text': '# Static import', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 198, 'text': 'r"import\\s+static\\s+([\\w.]+)", import_content', 'matches': [[26, 32], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 201, 'text': 'import_name = static_match.group(1)', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 202, 'text': 'if import_content.endswith(".*"):', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 203, 'text': 'import_name = import_name.replace(".*", "")', 'matches': [[28, 34], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 205, 'text': '# For static imports, extract the class name (remove method/field name)', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 206, 'text': 'parts = import_name.split(".")', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 209, 'text': 'import_name = ".".join(parts[:-1])', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 211, 'text': 'imports.append(', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 212, 'text': 'Import(', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 213, 'text': 'name=import_name,', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 218, 'text': 'module_name=import_name,', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 220, 'text': 'is_wildcard=import_content.endswith(".*"),', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 221, 'text': 'import_statement=import_content,', 'matches': [[32, 38], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 225, 'text': '# Normal import', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 226, 'text': 'normal_match = re.search(r"import\\s+([\\w.]+)", import_content)', 'matches': [[47, 53], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 228, 'text': 'import_name = normal_match.group(1)', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 229, 'text': 'if import_content.endswith(".*"):', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 230, 'text': 'if import_name.endswith(".*"):', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 231, 'text': 'import_name = import_name[:-2]', 'matches': [[32, 38], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 232, 'text': 'elif import_name.endswith("."):', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 233, 'text': 'import_name = import_name[:-1]', 'matches': [[32, 38], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 235, 'text': 'imports.append(', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 236, 'text': 'Import(', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 237, 'text': 'name=import_name,', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 242, 'text': 'module_name=import_name,', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 244, 'text': 'is_wildcard=import_content.endswith(".*"),', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 245, 'text': 'import_statement=import_content,', 'matches': [[32, 38], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 249, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1045, 'text': 'def _extract_import_info(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1047, 'text': ') -> Import | None:', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1048, 'text': '"""Extract import information (from AdvancedAnalyzer)"""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1050, 'text': 'import_text = self._get_node_text_optimized(node)', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1052, 'text': 'import_content = import_text.strip()', 'matches': [[12, 18], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1053, 'text': 'if import_content.endswith(";"):', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1054, 'text': 'import_content = import_content[:-1]', 'matches': [[16, 22], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1056, 'text': 'if "static" in import_content:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1057, 'text': '# Static import', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1058, 'text': 'static_match = re.search(r"import\\s+static\\s+([\\w.]+)", import_content)', 'matches': [[43, 49], [72, 78]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1060, 'text': 'import_name = static_match.group(1)', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1062, 'text': 'if import_content.endswith(".*"):', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1063, 'text': 'import_name = import_name.replace(".*", "")', 'matches': [[24, 30], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1065, 'text': '# For static imports, extract the class name (remove method/field name)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1066, 'text': 'parts = import_name.split(".")', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1069, 'text': 'import_name = ".".join(parts[:-1])', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1071, 'text': 'return Import(', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1072, 'text': 'name=import_name,', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1075, 'text': 'raw_text=import_text,', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1077, 'text': 'module_name=import_name,', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1079, 'text': 'is_wildcard=import_content.endswith(".*"),', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1080, 'text': 'import_statement=import_content,', 'matches': [[24, 30], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1083, 'text': '# Normal import', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1084, 'text': 'normal_match = re.search(r"import\\s+([\\w.]+)", import_content)', 'matches': [[43, 49], [63, 69]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1086, 'text': 'import_name = normal_match.group(1)', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1088, 'text': 'if import_content.endswith(".*"):', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1089, 'text': 'if import_name.endswith(".*"):', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1090, 'text': 'import_name = import_name[:-2] # Remove trailing .*', 'matches': [[28, 34], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1091, 'text': 'elif import_name.endswith("."):', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1092, 'text': 'import_name = import_name[:-1] # Remove trailing .', 'matches': [[28, 34], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1094, 'text': 'return Import(', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1095, 'text': 'name=import_name,', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1098, 'text': 'raw_text=import_text,', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1100, 'text': 'module_name=import_name,', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1102, 'text': 'is_wildcard=import_content.endswith(".*"),', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1103, 'text': 'import_statement=import_content,', 'matches': [[24, 30], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1106, 'text': 'log_debug(f"Failed to extract import info: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1108, 'text': 'log_error(f"Unexpected error in import extraction: {e}")', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1119, 'text': 'elements.extend(self.extract_imports(tree, source_code))', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1162, 'text': 'import tree_sitter_java as tsjava', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1165, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1175, 'text': 'return ["class", "method", "field", "import"]', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1218, 'text': 'elif query_key in ["import", "imports"]:', 'matches': [[28, 34], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1219, 'text': 'elements = extractor.extract_imports(tree, source_code)', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1245, 'text': 'from ..models import Class, Function, Import, Package, Variable', 'matches': [[22, 28], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1262, 'text': 'elif isinstance(element, Import):', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1263, 'text': 'return "import_declaration"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1292, 'text': '# Import-related queries', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1293, 'text': '"import": ["import_declaration"],', 'matches': [[13, 19], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1294, 'text': '"imports": ["import_declaration"],', 'matches': [[13, 19], [25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1309, 'text': '"import_declaration",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1330, 'text': 'from ..core.parser import Parser', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1331, 'text': 'from ..models import AnalysisResult', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1381, 'text': 'log_debug("Java Plugin: Extracting imports...")', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1382, 'text': 'imports = extractor.extract_imports(parse_result.tree, source_code)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1383, 'text': 'log_debug(f"Java Plugin: Found {len(imports)} imports")', 'matches': [[52, 58], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1389, 'text': 'imports = []', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1397, 'text': 'all_elements.extend(imports)', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1416, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1441, 'text': '"imports": [],', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1453, 'text': '"imports": extractor.extract_imports(tree, source_code),', 'matches': [[13, 19], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_utils.py', 'line': 8, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_utils.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_utils.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_utils.py', 'line': 13, 'text': '# Import the module under test', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_utils.py', 'line': 14, 'text': 'from tree_sitter_analyzer.encoding_utils import (', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_encoding_utils.py', 'line': 253, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 11, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 14, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 17, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 20, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 23, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 24, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 25, 'text': 'from ..models import AnalysisResult, Class, CodeElement, Function, Import, Variable', 'matches': [[14, 20], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 26, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 27, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 28, 'text': 'from ..utils.tree_sitter_compat import TreeSitterQueryCompat', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 40, 'text': 'self.imports: list[str] = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 166, 'text': 'self.is_module = "import " in self.source_code or "from " in self.source_code', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 395, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 523, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 714, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 716, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 717, 'text': '"""Extract Python import statements"""', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 718, 'text': 'imports: list[Import] = []', 'matches': [[8, 14], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 720, 'text': '# Import statement queries', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 721, 'text': 'import_queries = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 722, 'text': '# Regular import statements', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 724, 'text': '(import_statement', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 725, 'text': 'name: (dotted_name) @import.name) @import.statement', 'matches': [[37, 43], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 727, 'text': '# From import statements', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 729, 'text': '(import_from_statement', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 730, 'text': 'module_name: (dotted_name) @from_import.module', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 731, 'text': 'name: (dotted_name) @from_import.name) @from_import.statement', 'matches': [[42, 48], [61, 67]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 733, 'text': '# Aliased imports', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 735, 'text': '(aliased_import', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 736, 'text': 'name: (dotted_name) @aliased_import.name', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 737, 'text': 'alias: (identifier) @aliased_import.alias) @aliased_import.statement', 'matches': [[45, 51], [68, 74]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 744, 'text': 'for query_string in import_queries:', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 757, 'text': '# Process different types of imports', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 760, 'text': 'import_type = key.split(".")[0]', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 762, 'text': 'imp = self._extract_import_info(', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 763, 'text': 'node, source_code, import_type', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 766, 'text': 'imports.append(imp)', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 772, 'text': 'imports.extend(', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 773, 'text': 'self._extract_imports_manual(tree.root_node, source_code)', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 778, 'text': 'log_warning(f"Could not extract Python imports: {e}")', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 780, 'text': 'imports.extend(self._extract_imports_manual(tree.root_node, source_code))', 'matches': [[12, 18], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 782, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 784, 'text': 'def _extract_imports_manual(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 786, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 787, 'text': '"""Manual import extraction for tree-sitter 0.25.x compatibility"""', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 788, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 791, 'text': 'if node.type in ["import_statement", "import_from_statement"]:', 'matches': [[30, 36], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 801, 'text': '# Extract module name from the import statement', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 803, 'text': 'imported_names = []', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 805, 'text': 'if node.type == "import_statement":', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 806, 'text': '# Simple import: import os, sys', 'matches': [[33, 39], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 814, 'text': 'imported_names.append(module_name)', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 815, 'text': 'elif node.type == "import_from_statement":', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 816, 'text': '# From import: from os import path', 'matches': [[31, 37], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 825, 'text': 'if module_name or imported_names:', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 826, 'text': 'import_obj = Import(', 'matches': [[24, 30], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 827, 'text': 'name=module_name or imported_names[0]', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 828, 'text': 'if imported_names', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 834, 'text': 'imported_names=imported_names,', 'matches': [[28, 34], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 835, 'text': 'element_type="import",', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 837, 'text': 'imports.append(import_obj)', 'matches': [[24, 30], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 839, 'text': 'log_warning(f"Failed to extract import manually: {e}")', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 846, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 991, 'text': 'def _extract_import_info(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 992, 'text': 'self, node: "tree_sitter.Node", source_code: str, import_type: str', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 993, 'text': ') -> Import | None:', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 994, 'text': '"""Extract detailed import information from AST node"""', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 999, 'text': '# Safely extract import text, avoiding index out of bounds', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1002, 'text': 'import_text = (', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1008, 'text': '# Extract import name and module name (simplified)', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1009, 'text': 'if import_type == "from_import":', 'matches': [[15, 21], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1010, 'text': 'if "from" in import_text and "import" in import_text:', 'matches': [[29, 35], [46, 52], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1011, 'text': 'parts = import_text.split("import")', 'matches': [[28, 34], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1013, 'text': 'import_name = parts[1].strip()', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1016, 'text': 'import_name = import_text', 'matches': [[20, 26], [34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1017, 'text': 'elif import_type == "aliased_import":', 'matches': [[17, 23], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1019, 'text': 'import_name = import_text', 'matches': [[16, 22], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1022, 'text': 'import_name = import_text.replace("import", "").strip()', 'matches': [[16, 22], [30, 36], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1024, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1025, 'text': 'name=import_name,', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1028, 'text': 'raw_text=import_text,', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1034, 'text': 'log_warning(f"Could not extract import info: {e}")', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1217, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1219, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1220, 'text': '"""Extract imports from the tree (legacy compatibility)"""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1222, 'text': 'return extractor.extract_imports(tree, source_code)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1228, 'text': 'import tree_sitter', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1229, 'text': 'import tree_sitter_python as tspython', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1234, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1248, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1320, 'text': 'elif query_key in ["import", "imports", "from_import", "from_imports"]:', 'matches': [[28, 34], [38, 44], [54, 60], [69, 75]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1321, 'text': 'elements = extractor.extract_imports(tree, source_code)', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1343, 'text': 'from ..models import Class, Function, Import, Variable', 'matches': [[22, 28], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1351, 'text': 'elif isinstance(element, Import):', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1352, 'text': 'return "import_statement"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1376, 'text': '# Import-related queries', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1377, 'text': '"import": ["import_statement", "import_from_statement"],', 'matches': [[13, 19], [24, 30], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1378, 'text': '"imports": ["import_statement", "import_from_statement"],', 'matches': [[13, 19], [25, 31], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1379, 'text': '"from_import": ["import_from_statement"],', 'matches': [[18, 24], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1380, 'text': '"from_imports": ["import_from_statement"],', 'matches': [[18, 24], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1423, 'text': '"import_statement",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1424, 'text': '"import_from_statement",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1478, 'text': 'imports = extractor.extract_imports(tree, source_code)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1483, 'text': 'elements.extend(imports)', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1541, 'text': 'elements.extend(extractor.extract_imports(tree, source_code))', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 15, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 17, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 18, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 19, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 20, 'text': 'from typing import Any, Dict, List, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_mcp.py', 'line': 466, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 11, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 12, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 15, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 18, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 21, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 24, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 25, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 26, 'text': 'from ..language_loader import loader', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 27, 'text': 'from ..models import AnalysisResult, Class, CodeElement, Function, Import, Variable', 'matches': [[14, 20], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 28, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 29, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 40, 'text': 'self.imports: list[str] = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 136, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 138, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 139, 'text': '"""Extract TypeScript import statements with ES6+ and type import support"""', 'matches': [[30, 36], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 143, 'text': 'imports: list[Import] = []', 'matches': [[8, 14], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 145, 'text': '# Extract imports efficiently', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 147, 'text': 'if child.type == "import_statement":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 148, 'text': 'import_info = self._extract_import_info_simple(child)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 149, 'text': 'if import_info:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 150, 'text': 'imports.append(import_info)', 'matches': [[20, 26], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 152, 'text': '# Check for dynamic imports', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 153, 'text': 'dynamic_import = self._extract_dynamic_import(child)', 'matches': [[24, 30], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 154, 'text': 'if dynamic_import:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 155, 'text': 'imports.append(dynamic_import)', 'matches': [[20, 26], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 158, 'text': 'commonjs_imports = self._extract_commonjs_requires(tree, source_code)', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 159, 'text': 'imports.extend(commonjs_imports)', 'matches': [[8, 14], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 161, 'text': 'log_debug(f"Extracted {len(imports)} TypeScript imports")', 'matches': [[35, 41], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 162, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 175, 'text': 'self.is_module = "import " in self.source_code or "export " in self.source_code', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 368, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1079, 'text': 'import re', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1153, 'text': 'def _extract_import_info_simple(self, node: "tree_sitter.Node") -> Import | None:', 'matches': [[17, 23], [71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1154, 'text': '"""Extract import information from import_statement node"""', 'matches': [[19, 25], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1191, 'text': '# Extract import details from AST structure', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1192, 'text': 'import_names = []', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1194, 'text': '# Check for type import (not used but kept for future reference)', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1195, 'text': '# is_type_import = "type" in raw_text', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1200, 'text': 'if child.type == "import_clause":', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1201, 'text': 'import_names.extend(self._extract_import_names(child))', 'matches': [[24, 30], [58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1222, 'text': '# If no import names found but we have a mocked _extract_import_names, try calling it', 'matches': [[20, 26], [69, 75]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1223, 'text': 'if not import_names and hasattr(self, "_extract_import_names"):', 'matches': [[19, 25], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1224, 'text': '# For test scenarios where _extract_import_names is mocked', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1226, 'text': '# Try to find import_clause in children', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1232, 'text': 'if child.type == "import_clause":', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1233, 'text': 'import_names.extend(self._extract_import_names(child))', 'matches': [[28, 34], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1239, 'text': 'if not module_path and not import_names:', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1242, 'text': '# Use first import name or "unknown"', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1243, 'text': 'primary_name = import_names[0] if import_names else "unknown"', 'matches': [[27, 33], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1245, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1253, 'text': 'imported_names=import_names,', 'matches': [[16, 22], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1257, 'text': 'log_debug(f"Failed to extract import info: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1260, 'text': 'def _extract_import_names(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1261, 'text': 'self, import_clause_node: "tree_sitter.Node", import_text: str = ""', 'matches': [[14, 20], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1263, 'text': '"""Extract import names from import clause"""', 'matches': [[19, 25], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1269, 'text': 'hasattr(import_clause_node, "children")', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1270, 'text': 'and import_clause_node.children is not None', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1272, 'text': 'children = import_clause_node.children', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1279, 'text': 'if child.type == "import_default_specifier":', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1280, 'text': '# Default import', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1300, 'text': 'elif child.type == "named_imports":', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1301, 'text': '# Named imports', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1304, 'text': 'if grandchild.type == "import_specifier":', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1335, 'text': '# Direct identifier (default import case)', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1352, 'text': 'elif child.type == "namespace_import":', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1353, 'text': '# Namespace import (import * as name)', 'matches': [[32, 38], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1374, 'text': 'log_debug(f"Failed to extract import names: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1378, 'text': 'def _extract_dynamic_import(self, node: "tree_sitter.Node") -> Import | None:', 'matches': [[25, 31], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1379, 'text': '"""Extract dynamic import() calls"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1383, 'text': '# Look for import() calls - more flexible regex', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1384, 'text': 'import_match = re.search(', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1385, 'text': 'r"import\\s*\\(\\s*[\\"\']([^\\"\']+)[\\"\']\\s*\\)", node_text', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1387, 'text': 'if not import_match:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1389, 'text': 'import_match = re.search(r"import\\s*\\(\\s*([^)]+)\\s*\\)", node_text)', 'matches': [[16, 22], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1390, 'text': 'if import_match:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1391, 'text': 'source = import_match.group(1).strip("\\"\'")', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1395, 'text': 'source = import_match.group(1)', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1397, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1398, 'text': 'name="dynamic_import",', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1405, 'text': 'imported_names=["dynamic_import"],', 'matches': [[16, 22], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1408, 'text': 'log_debug(f"Failed to extract dynamic import: {e}")', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1413, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1415, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1435, 'text': 'import_obj = Import(', 'matches': [[16, 22], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1443, 'text': 'imported_names=[var_name],', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1445, 'text': 'imports.append(import_obj)', 'matches': [[16, 22], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1451, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1623, 'text': 'all_elements.extend(self.extract_imports(tree, source_code))', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1679, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1718, 'text': '"Import/export statements",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1768, 'text': 'imports = extractor.extract_imports(tree, source_code)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1773, 'text': 'elements.extend(imports)', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1809, 'text': 'all_elements.extend(extractor.extract_imports(tree, source_code))', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1874, 'text': '# Import/Export queries', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1875, 'text': '"import": lambda: self._extractor.extract_imports(tree, source_code),', 'matches': [[13, 19], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1878, 'text': 'for i in self._extractor.extract_imports(tree, source_code)', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1953, 'text': '# Import/Export categories', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\typescript_plugin.py', 'line': 1954, 'text': '"import": ["import_statement"],', 'matches': [[13, 19], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 13, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 14, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 17, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 19, 'text': '# Import test targets', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 20, 'text': 'from tree_sitter_analyzer.core.cache_service import CacheEntry, CacheService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 237, 'text': 'from datetime import datetime, timedelta', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_cache_service.py', 'line': 256, 'text': 'from datetime import datetime, timedelta', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\config_manager.py', 'line': 8, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\config_manager.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\config_manager.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\config_manager.py', 'line': 11, 'text': 'from typing import Any, Dict, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 20, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 21, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 22, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 23, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 24, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 25, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 26, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 27, 'text': 'import importlib', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 28, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 29, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 30, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 31, 'text': 'from typing import Any, Dict, List, Optional, Set', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 38, 'text': 'from config_manager import ConfigManager', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 39, 'text': 'from colored_logger import ColoredLogger', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 40, 'text': 'from test_case_loader import TestCaseLoader', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 43, 'text': 'from version_manager import VersionManager, create_version_manager', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 69, 'text': 'import tempfile', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 142, 'text': "script = f'''import sys", 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 143, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 144, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 145, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 152, 'text': 'from {module_path}.mcp.tools.{module_name} import {class_name}', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 241, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 242, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[66, 72]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 243, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[66, 72]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 244, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 245, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 246, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[68, 74]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 247, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_test_direct.py', 'line': 259, 'text': 'except ImportError as e:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 15, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 17, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 18, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 19, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 20, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 21, 'text': 'from typing import Any, Dict, List, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 200, 'text': 'important_fields = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 205, 'text': 'for field in important_fields:', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\compare_cli.py', 'line': 559, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_exceptions.py', 'line': 9, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_exceptions.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_exceptions.py', 'line': 13, 'text': 'from tree_sitter_analyzer.exceptions import (', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_exceptions.py', 'line': 93, 'text': 'from pathlib import Path', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 11, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 14, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 17, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 20, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 23, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 24, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 25, 'text': 'from ..models import AnalysisResult, Class, CodeElement, Function, Import, Variable', 'matches': [[14, 20], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 26, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 27, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 28, 'text': 'from ..utils.tree_sitter_compat import TreeSitterQueryCompat', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 40, 'text': 'self.imports: list[str] = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 166, 'text': 'self.is_module = "import " in self.source_code or "from " in self.source_code', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 395, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 523, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 714, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 716, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 717, 'text': '"""Extract Python import statements"""', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 718, 'text': 'imports: list[Import] = []', 'matches': [[8, 14], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 720, 'text': '# Import statement queries', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 721, 'text': 'import_queries = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 722, 'text': '# Regular import statements', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 724, 'text': '(import_statement', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 725, 'text': 'name: (dotted_name) @import.name) @import.statement', 'matches': [[37, 43], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 727, 'text': '# From import statements', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 729, 'text': '(import_from_statement', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 730, 'text': 'module_name: (dotted_name) @from_import.module', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 731, 'text': 'name: (dotted_name) @from_import.name) @from_import.statement', 'matches': [[42, 48], [61, 67]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 733, 'text': '# Aliased imports', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 735, 'text': '(aliased_import', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 736, 'text': 'name: (dotted_name) @aliased_import.name', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 737, 'text': 'alias: (identifier) @aliased_import.alias) @aliased_import.statement', 'matches': [[45, 51], [68, 74]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 744, 'text': 'for query_string in import_queries:', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 757, 'text': '# Process different types of imports', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 760, 'text': 'import_type = key.split(".")[0]', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 762, 'text': 'imp = self._extract_import_info(', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 763, 'text': 'node, source_code, import_type', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 766, 'text': 'imports.append(imp)', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 772, 'text': 'imports.extend(', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 773, 'text': 'self._extract_imports_manual(tree.root_node, source_code)', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 778, 'text': 'log_warning(f"Could not extract Python imports: {e}")', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 780, 'text': 'imports.extend(self._extract_imports_manual(tree.root_node, source_code))', 'matches': [[12, 18], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 782, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 784, 'text': 'def _extract_imports_manual(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 786, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 787, 'text': '"""Manual import extraction for tree-sitter 0.25.x compatibility"""', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 788, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 791, 'text': 'if node.type in ["import_statement", "import_from_statement"]:', 'matches': [[30, 36], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 801, 'text': '# Extract module name from the import statement', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 803, 'text': 'imported_names = []', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 805, 'text': 'if node.type == "import_statement":', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 806, 'text': '# Simple import: import os, sys', 'matches': [[33, 39], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 814, 'text': 'imported_names.append(module_name)', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 815, 'text': 'elif node.type == "import_from_statement":', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 816, 'text': '# From import: from os import path', 'matches': [[31, 37], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 825, 'text': 'if module_name or imported_names:', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 826, 'text': 'import_obj = Import(', 'matches': [[24, 30], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 827, 'text': 'name=module_name or imported_names[0]', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 828, 'text': 'if imported_names', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 834, 'text': 'imported_names=imported_names,', 'matches': [[28, 34], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 835, 'text': 'element_type="import",', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 837, 'text': 'imports.append(import_obj)', 'matches': [[24, 30], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 839, 'text': 'log_warning(f"Failed to extract import manually: {e}")', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 846, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 991, 'text': 'def _extract_import_info(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 992, 'text': 'self, node: "tree_sitter.Node", source_code: str, import_type: str', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 993, 'text': ') -> Import | None:', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 994, 'text': '"""Extract detailed import information from AST node"""', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 999, 'text': '# Safely extract import text, avoiding index out of bounds', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1002, 'text': 'import_text = (', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1008, 'text': '# Extract import name and module name (simplified)', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1009, 'text': 'if import_type == "from_import":', 'matches': [[15, 21], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1010, 'text': 'if "from" in import_text and "import" in import_text:', 'matches': [[29, 35], [46, 52], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1011, 'text': 'parts = import_text.split("import")', 'matches': [[28, 34], [47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1013, 'text': 'import_name = parts[1].strip()', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1016, 'text': 'import_name = import_text', 'matches': [[20, 26], [34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1017, 'text': 'elif import_type == "aliased_import":', 'matches': [[17, 23], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1019, 'text': 'import_name = import_text', 'matches': [[16, 22], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1022, 'text': 'import_name = import_text.replace("import", "").strip()', 'matches': [[16, 22], [30, 36], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1024, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1025, 'text': 'name=import_name,', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1028, 'text': 'raw_text=import_text,', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1034, 'text': 'log_warning(f"Could not extract import info: {e}")', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1217, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1219, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1220, 'text': '"""Extract imports from the tree (legacy compatibility)"""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1222, 'text': 'return extractor.extract_imports(tree, source_code)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1228, 'text': 'import tree_sitter', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1229, 'text': 'import tree_sitter_python as tspython', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1234, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1248, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1320, 'text': 'elif query_key in ["import", "imports", "from_import", "from_imports"]:', 'matches': [[28, 34], [38, 44], [54, 60], [69, 75]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1321, 'text': 'elements = extractor.extract_imports(tree, source_code)', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1343, 'text': 'from ..models import Class, Function, Import, Variable', 'matches': [[22, 28], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1351, 'text': 'elif isinstance(element, Import):', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1352, 'text': 'return "import_statement"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1376, 'text': '# Import-related queries', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1377, 'text': '"import": ["import_statement", "import_from_statement"],', 'matches': [[13, 19], [24, 30], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1378, 'text': '"imports": ["import_statement", "import_from_statement"],', 'matches': [[13, 19], [25, 31], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1379, 'text': '"from_import": ["import_from_statement"],', 'matches': [[18, 24], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1380, 'text': '"from_imports": ["import_from_statement"],', 'matches': [[18, 24], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1423, 'text': '"import_statement",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1424, 'text': '"import_from_statement",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1478, 'text': 'imports = extractor.extract_imports(tree, source_code)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1483, 'text': 'elements.extend(imports)', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\python_plugin.py', 'line': 1541, 'text': 'elements.extend(extractor.extract_imports(tree, source_code))', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 13, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 14, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 15, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 18, 'text': 'from colorama import Fore, Back, Style, init', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 22, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\colored_logger.py', 'line': 242, 'text': 'import time', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 10, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 12, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 13, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 15, 'text': 'from typing import Any, Dict, List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 18, 'text': 'from version_manager import VersionManager, create_version_manager', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 21, 'text': 'from mcp import ClientSession, StdioServerParameters', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 22, 'text': 'from mcp.client.stdio import stdio_client', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\mcp_client.py', 'line': 24, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_analysis_engine.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_analysis_engine.py', 'line': 18, 'text': '# Import test targets', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_analysis_engine.py', 'line': 19, 'text': 'from tree_sitter_analyzer.core.analysis_engine import (', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_analysis_engine.py', 'line': 74, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 12, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 16, 'text': 'from tree_sitter_analyzer.core.engine import AnalysisEngine', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 17, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 279, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 320, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_engine.py', 'line': 321, 'text': 'from typing import List', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 12, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 16, 'text': 'from tree_sitter_analyzer.core.parser import Parser, ParseResult', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 372, 'text': 'import java.util.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 373, 'text': 'import java.io.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 423, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 424, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 425, 'text': 'from typing import List, Dict, Optional, Union', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 426, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_parser.py', 'line': 427, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_query.py', 'line': 9, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_query.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_core\\test_query.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.query import QueryExecutor', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 10, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 13, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 16, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 19, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 22, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 23, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 24, 'text': 'from ..models import AnalysisResult, CodeElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 25, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 26, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 27, 'text': 'from ..utils.tree_sitter_compat import TreeSitterQueryCompat', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 102, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 654, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 708, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 762, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 816, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 861, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 899, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1107, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1176, 'text': 'import re', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1197, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1240, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1296, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1332, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1368, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1441, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1457, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1526, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1529, 'text': '"""Extract imports from the tree (legacy compatibility)"""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1531, 'text': 'return extractor.extract_imports(tree, source_code)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1537, 'text': 'import tree_sitter', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1538, 'text': 'import tree_sitter_markdown as tsmarkdown', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1543, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1707, 'text': '# Import query definitions', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1708, 'text': 'from ..queries.markdown import get_query', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1785, 'text': '# Reference queries (mapped to imports)', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1786, 'text': '"import": lambda: self._extractor.extract_references(tree, source_code),', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1890, 'text': '# Reference categories (import-like)', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\markdown_plugin.py', 'line': 1891, 'text': '"import": ["link_reference_definition"],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_error_handling_improvements.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_error_handling_improvements.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_error_handling_improvements.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_error_handling_improvements.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_manager_factory.py', 'line': 12, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_manager_factory.py', 'line': 13, 'text': 'import threading', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_manager_factory.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_manager_factory.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.utils.file_output_factory import (', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_manager_factory.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.utils.file_output_manager import FileOutputManager', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_manager_factory.py', 'line': 327, 'text': '# (Fallback testing is complex due to import mechanics)', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 12, 'text': 'from unittest.mock import AsyncMock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_enhancement.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 16, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 17, 'text': 'import subprocess', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 18, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 19, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 20, 'text': 'from datetime import datetime', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 21, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 22, 'text': 'from typing import Any, Dict, List, Optional, Tuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 24, 'text': 'from colored_logger import get_logger', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 25, 'text': 'from test_case_loader import TestCaseLoader', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 321, 'text': 'import argparse', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 358, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\compatibility_test\\cli_test.py', 'line': 408, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 15, 'text': 'import hashlib', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 16, 'text': 'import threading', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 17, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 18, 'text': 'from datetime import datetime, timedelta', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 19, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 21, 'text': 'from cachetools import LRUCache, TTLCache', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 23, 'text': 'from ..utils import log_debug, log_info', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 188, 'text': 'import pickle # nosec B403', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 229, 'text': 'import logging', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 323, 'text': 'import sys', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\cache_service.py', 'line': 332, 'text': '# Silently ignore all errors during shutdown to prevent ImportError', 'matches': [[68, 74]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 4, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 5, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 6, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 7, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 8, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 10, 'text': 'from .cli.argument_validator import CLIArgumentValidator', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 12, 'text': '# Import command classes', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 13, 'text': 'from .cli.commands import (', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 22, 'text': 'from .cli.info_commands import (', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 28, 'text': 'from .output_manager import output_error, output_info, output_list', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 29, 'text': 'from .query_loader import query_loader', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 61, 'text': 'from tree_sitter_analyzer.core.query_filter import QueryFilter', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli_main.py', 'line': 284, 'text': '# Early check for quiet mode to set environment variable before any imports', 'matches': [[72, 78]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\constants.py', 'line': 12, 'text': 'ELEMENT_TYPE_IMPORT = "import"', 'matches': [[13, 19], [23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\constants.py', 'line': 21, 'text': '"Import": ELEMENT_TYPE_IMPORT,', 'matches': [[5, 11], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\constants.py', 'line': 31, 'text': '"Import": ELEMENT_TYPE_IMPORT,', 'matches': [[5, 11], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 9, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 10, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 13, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 15, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 16, 'text': 'from ..models import AnalysisResult', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 18, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 19, 'text': 'from ..models import Class, CodeElement, Function, Import, Package, Variable', 'matches': [[14, 20], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 20, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 21, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 33, 'text': 'self.imports: list[str] = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 105, 'text': '# is called independently or before extract_imports', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 150, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 152, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 153, 'text': '"""Extract Java import statements with enhanced robustness"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 157, 'text': 'imports: list[Import] = []', 'matches': [[8, 14], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 159, 'text': '# Extract package and imports efficiently (from AdvancedAnalyzer)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 163, 'text': 'elif child.type == "import_declaration":', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 164, 'text': 'import_info = self._extract_import_info(child, source_code)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 165, 'text': 'if import_info:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 166, 'text': 'imports.append(import_info)', 'matches': [[20, 26], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 172, 'text': '# After package and imports come class declarations, so stop', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 175, 'text': '# Fallback: if no imports found via tree-sitter, try regex-based extraction', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 176, 'text': 'if not imports and "import" in source_code:', 'matches': [[15, 21], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 177, 'text': 'log_debug("No imports found via tree-sitter, trying regex fallback")', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 178, 'text': 'fallback_imports = self._extract_imports_fallback(source_code)', 'matches': [[21, 27], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 179, 'text': 'imports.extend(fallback_imports)', 'matches': [[12, 18], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 181, 'text': 'log_debug(f"Extracted {len(imports)} imports")', 'matches': [[35, 41], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 182, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 184, 'text': 'def _extract_imports_fallback(self, source_code: str) -> list[Import]:', 'matches': [[17, 23], [66, 72]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 185, 'text': '"""Fallback import extraction using regex when tree-sitter fails"""', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 186, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 191, 'text': 'if line.startswith("import ") and line.endswith(";"):', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 192, 'text': '# Extract import statement', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 193, 'text': 'import_content = line[:-1] # Remove semicolon', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 195, 'text': 'if "static" in import_content:', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 196, 'text': '# Static import', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 198, 'text': 'r"import\\s+static\\s+([\\w.]+)", import_content', 'matches': [[26, 32], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 201, 'text': 'import_name = static_match.group(1)', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 202, 'text': 'if import_content.endswith(".*"):', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 203, 'text': 'import_name = import_name.replace(".*", "")', 'matches': [[28, 34], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 205, 'text': '# For static imports, extract the class name (remove method/field name)', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 206, 'text': 'parts = import_name.split(".")', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 209, 'text': 'import_name = ".".join(parts[:-1])', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 211, 'text': 'imports.append(', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 212, 'text': 'Import(', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 213, 'text': 'name=import_name,', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 218, 'text': 'module_name=import_name,', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 220, 'text': 'is_wildcard=import_content.endswith(".*"),', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 221, 'text': 'import_statement=import_content,', 'matches': [[32, 38], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 225, 'text': '# Normal import', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 226, 'text': 'normal_match = re.search(r"import\\s+([\\w.]+)", import_content)', 'matches': [[47, 53], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 228, 'text': 'import_name = normal_match.group(1)', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 229, 'text': 'if import_content.endswith(".*"):', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 230, 'text': 'if import_name.endswith(".*"):', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 231, 'text': 'import_name = import_name[:-2]', 'matches': [[32, 38], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 232, 'text': 'elif import_name.endswith("."):', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 233, 'text': 'import_name = import_name[:-1]', 'matches': [[32, 38], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 235, 'text': 'imports.append(', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 236, 'text': 'Import(', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 237, 'text': 'name=import_name,', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 242, 'text': 'module_name=import_name,', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 244, 'text': 'is_wildcard=import_content.endswith(".*"),', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 245, 'text': 'import_statement=import_content,', 'matches': [[32, 38], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 249, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1045, 'text': 'def _extract_import_info(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1047, 'text': ') -> Import | None:', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1048, 'text': '"""Extract import information (from AdvancedAnalyzer)"""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1050, 'text': 'import_text = self._get_node_text_optimized(node)', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1052, 'text': 'import_content = import_text.strip()', 'matches': [[12, 18], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1053, 'text': 'if import_content.endswith(";"):', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1054, 'text': 'import_content = import_content[:-1]', 'matches': [[16, 22], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1056, 'text': 'if "static" in import_content:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1057, 'text': '# Static import', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1058, 'text': 'static_match = re.search(r"import\\s+static\\s+([\\w.]+)", import_content)', 'matches': [[43, 49], [72, 78]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1060, 'text': 'import_name = static_match.group(1)', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1062, 'text': 'if import_content.endswith(".*"):', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1063, 'text': 'import_name = import_name.replace(".*", "")', 'matches': [[24, 30], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1065, 'text': '# For static imports, extract the class name (remove method/field name)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1066, 'text': 'parts = import_name.split(".")', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1069, 'text': 'import_name = ".".join(parts[:-1])', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1071, 'text': 'return Import(', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1072, 'text': 'name=import_name,', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1075, 'text': 'raw_text=import_text,', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1077, 'text': 'module_name=import_name,', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1079, 'text': 'is_wildcard=import_content.endswith(".*"),', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1080, 'text': 'import_statement=import_content,', 'matches': [[24, 30], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1083, 'text': '# Normal import', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1084, 'text': 'normal_match = re.search(r"import\\s+([\\w.]+)", import_content)', 'matches': [[43, 49], [63, 69]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1086, 'text': 'import_name = normal_match.group(1)', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1088, 'text': 'if import_content.endswith(".*"):', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1089, 'text': 'if import_name.endswith(".*"):', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1090, 'text': 'import_name = import_name[:-2] # Remove trailing .*', 'matches': [[28, 34], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1091, 'text': 'elif import_name.endswith("."):', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1092, 'text': 'import_name = import_name[:-1] # Remove trailing .', 'matches': [[28, 34], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1094, 'text': 'return Import(', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1095, 'text': 'name=import_name,', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1098, 'text': 'raw_text=import_text,', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1100, 'text': 'module_name=import_name,', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1102, 'text': 'is_wildcard=import_content.endswith(".*"),', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1103, 'text': 'import_statement=import_content,', 'matches': [[24, 30], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1106, 'text': 'log_debug(f"Failed to extract import info: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1108, 'text': 'log_error(f"Unexpected error in import extraction: {e}")', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1119, 'text': 'elements.extend(self.extract_imports(tree, source_code))', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1162, 'text': 'import tree_sitter_java as tsjava', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1165, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1175, 'text': 'return ["class", "method", "field", "import"]', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1218, 'text': 'elif query_key in ["import", "imports"]:', 'matches': [[28, 34], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1219, 'text': 'elements = extractor.extract_imports(tree, source_code)', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1245, 'text': 'from ..models import Class, Function, Import, Package, Variable', 'matches': [[22, 28], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1262, 'text': 'elif isinstance(element, Import):', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1263, 'text': 'return "import_declaration"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1292, 'text': '# Import-related queries', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1293, 'text': '"import": ["import_declaration"],', 'matches': [[13, 19], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1294, 'text': '"imports": ["import_declaration"],', 'matches': [[13, 19], [25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1309, 'text': '"import_declaration",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1330, 'text': 'from ..core.parser import Parser', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1331, 'text': 'from ..models import AnalysisResult', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1381, 'text': 'log_debug("Java Plugin: Extracting imports...")', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1382, 'text': 'imports = extractor.extract_imports(parse_result.tree, source_code)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1383, 'text': 'log_debug(f"Java Plugin: Found {len(imports)} imports")', 'matches': [[52, 58], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1389, 'text': 'imports = []', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1397, 'text': 'all_elements.extend(imports)', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1416, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1441, 'text': '"imports": [],', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\java_plugin.py', 'line': 1453, 'text': '"imports": extractor.extract_imports(tree, source_code),', 'matches': [[13, 19], [41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\__init__.py', 'line': 11, 'text': 'from .engine import AnalysisEngine', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\__init__.py', 'line': 12, 'text': 'from .parser import Parser, ParseResult', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\__init__.py', 'line': 13, 'text': 'from .query import QueryExecutor', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 8, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 245, 'text': 'test_file.write_text("important data here\\n")', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_file_output_optimization.py', 'line': 255, 'text': '"lines": {"text": "important data here"},', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 10, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 13, 'text': 'from tree_sitter import Language, Node, Tree', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 15, 'text': 'from ..query_loader import get_query_loader', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 16, 'text': 'from ..utils.tree_sitter_compat import TreeSitterQueryCompat, get_node_text_safe', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 391, 'text': 'from ..language_loader import get_loader', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 476, 'text': 'from ..query_loader import get_query_loader', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 487, 'text': 'from ..query_loader import get_query_loader', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 508, 'text': 'import warnings', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query.py', 'line': 521, 'text': 'from ..language_loader import get_loader', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 15, 'text': 'import hashlib', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 16, 'text': 'import threading', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 17, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 18, 'text': 'from typing import Any, Optional, Protocol', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 20, 'text': 'from ..models import AnalysisResult', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 21, 'text': 'from ..plugins.base import LanguagePlugin as BaseLanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 22, 'text': 'from ..plugins.manager import PluginManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 23, 'text': 'from ..security import SecurityValidator', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 24, 'text': 'from ..utils import log_debug, log_error, log_info, log_performance', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 25, 'text': 'from .cache_service import CacheService', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 134, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 140, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 259, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\analysis_engine.py', 'line': 398, 'text': 'from pathlib import Path', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 13, 'text': 'from tree_sitter import Tree', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 15, 'text': 'from ..language_detector import LanguageDetector', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 16, 'text': 'from ..models import AnalysisResult, CodeElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 17, 'text': 'from ..plugins.manager import PluginManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 18, 'text': 'from .parser import Parser, ParseResult', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 19, 'text': 'from .query import QueryExecutor', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 326, 'text': '# Extract imports', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 327, 'text': 'if hasattr(extractor, "extract_imports"):', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 328, 'text': 'imports = extractor.extract_imports(', 'matches': [[24, 30], [52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\engine.py', 'line': 331, 'text': 'elements.extend(imports)', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 11, 'text': 'from typing import Any, NamedTuple', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 13, 'text': 'from tree_sitter import Tree', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 15, 'text': 'from ..encoding_utils import EncodingManager', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\parser.py', 'line': 16, 'text': 'from ..language_loader import get_loader', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_filter.py', 'line': 8, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_filter.py', 'line': 9, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 13, 'text': 'from ..encoding_utils import read_file_safe', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 14, 'text': 'from ..plugins.manager import PluginManager', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 15, 'text': 'from ..query_loader import query_loader', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 16, 'text': 'from ..utils.tree_sitter_compat import TreeSitterQueryCompat, get_node_text_safe', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 17, 'text': 'from .parser import Parser', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 18, 'text': 'from .query_filter import QueryFilter', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\core\\query_service.py', 'line': 311, 'text': 'elif query_key in ("import", "imports") and "import" in node_type:', 'matches': [[32, 38], [42, 48], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 11, 'text': 'import re', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 12, 'text': 'from typing import TYPE_CHECKING, Any, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 15, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 18, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 21, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 24, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 25, 'text': 'from ..encoding_utils import extract_text_slice, safe_encode', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 26, 'text': 'from ..language_loader import loader', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 27, 'text': 'from ..models import AnalysisResult, Class, CodeElement, Function, Import, Variable', 'matches': [[14, 20], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 28, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 29, 'text': 'from ..utils import log_debug, log_error, log_warning', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 40, 'text': 'self.imports: list[str] = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 130, 'text': 'def extract_imports(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 132, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 133, 'text': '"""Extract JavaScript import statements with ES6+ support"""', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 137, 'text': 'imports: list[Import] = []', 'matches': [[8, 14], [22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 139, 'text': '# Extract imports efficiently', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 141, 'text': 'if child.type == "import_statement":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 142, 'text': 'import_info = self._extract_import_info_simple(child)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 143, 'text': 'if import_info:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 144, 'text': 'imports.append(import_info)', 'matches': [[20, 26], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 146, 'text': '# Check for dynamic imports', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 147, 'text': 'dynamic_import = self._extract_dynamic_import(child)', 'matches': [[24, 30], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 148, 'text': 'if dynamic_import:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 149, 'text': 'imports.append(dynamic_import)', 'matches': [[20, 26], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 152, 'text': 'commonjs_imports = self._extract_commonjs_requires(tree, source_code)', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 153, 'text': 'imports.extend(commonjs_imports)', 'matches': [[8, 14], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 155, 'text': 'log_debug(f"Extracted {len(imports)} JavaScript imports")', 'matches': [[35, 41], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 156, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 193, 'text': 'self.is_module = "import " in self.source_code or "export " in self.source_code', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 378, 'text': 'import traceback', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 857, 'text': 'def _extract_import_info_simple(self, node: "tree_sitter.Node") -> Import | None:', 'matches': [[17, 23], [71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 858, 'text': '"""Extract import information from import_statement node"""', 'matches': [[19, 25], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 869, 'text': '# Extract import details from AST structure', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 870, 'text': 'import_names = []', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 874, 'text': 'if child.type == "import_clause":', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 875, 'text': 'import_names.extend(self._extract_import_names(child))', 'matches': [[20, 26], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 883, 'text': '# Use first import name or "unknown"', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 884, 'text': 'primary_name = import_names[0] if import_names else "unknown"', 'matches': [[27, 33], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 886, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 894, 'text': 'imported_names=import_names,', 'matches': [[16, 22], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 898, 'text': 'log_debug(f"Failed to extract import info: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 901, 'text': 'def _extract_import_names(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 902, 'text': 'self, import_clause_node: "tree_sitter.Node"', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 904, 'text': '"""Extract import names from import clause"""', 'matches': [[19, 25], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 908, 'text': 'for child in import_clause_node.children:', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 909, 'text': 'if child.type == "import_default_specifier":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 910, 'text': '# Default import', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 917, 'text': 'elif child.type == "named_imports":', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 918, 'text': '# Named imports', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 920, 'text': 'if grandchild.type == "import_specifier":', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 930, 'text': 'def _extract_import_info_enhanced(', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 932, 'text': ') -> Import | None:', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 933, 'text': '"""Extract enhanced import information"""', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 935, 'text': 'import_text = self._get_node_text_optimized(node)', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 937, 'text': '# Parse different import types', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 938, 'text': 'import_info = self._parse_import_statement(import_text)', 'matches': [[12, 18], [38, 44], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 939, 'text': 'if not import_info:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 942, 'text': 'import_type, names, source, is_default, is_namespace = import_info', 'matches': [[12, 18], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 944, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 948, 'text': 'raw_text=import_text,', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 952, 'text': 'import_type=import_type,', 'matches': [[16, 22], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 953, 'text': 'imported_names=names,', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 959, 'text': 'log_debug(f"Failed to extract import info: {e}")', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 962, 'text': 'def _extract_dynamic_import(self, node: "tree_sitter.Node") -> Import | None:', 'matches': [[25, 31], [67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 963, 'text': '"""Extract dynamic import() calls"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 967, 'text': '# Look for import() calls', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 968, 'text': 'import_match = re.search(', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 969, 'text': 'r"import\\s*\\(\\s*[\\"\']([^\\"\']+)[\\"\']\\s*\\)", node_text', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 971, 'text': 'if not import_match:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 974, 'text': 'source = import_match.group(1)', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 976, 'text': 'return Import(', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 977, 'text': 'name="dynamic_import",', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 984, 'text': 'import_type="dynamic",', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 988, 'text': 'log_debug(f"Failed to extract dynamic import: {e}")', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 993, 'text': ') -> list[Import]:', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 995, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1008, 'text': 'import_obj = Import(', 'matches': [[16, 22], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1016, 'text': 'imported_names=[var_name],', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1018, 'text': 'imports.append(import_obj)', 'matches': [[16, 22], [31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1025, 'text': 'return imports', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1085, 'text': 'def _parse_import_statement(', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1086, 'text': 'self, import_text: str', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1088, 'text': '"""Parse import statement to extract details"""', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1091, 'text': 'clean_text = import_text.strip().rstrip(";")', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1100, 'text': '# Determine import type and extract names', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1101, 'text': 'if "import * as" in clean_text:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1102, 'text': '# Namespace import', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1103, 'text': 'namespace_match = re.search(r"import\\s+\\*\\s+as\\s+(\\w+)", clean_text)', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1107, 'text': 'elif "import {" in clean_text:', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1108, 'text': '# Named imports', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1109, 'text': 'named_match = re.search(r"import\\s+\\{([^}]+)\\}", clean_text)', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1116, 'text': '# Default import', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1117, 'text': 'default_match = re.search(r"import\\s+(\\w+)", clean_text)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1229, 'text': 'elements.extend(self.extract_imports(tree, source_code))', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1403, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1434, 'text': '"Module imports/exports",', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1478, 'text': 'elif query_key in ["import", "imports"]:', 'matches': [[28, 34], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1479, 'text': 'elements = extractor.extract_imports(tree, source_code)', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1501, 'text': 'from ..models import Class, Function, Import, Variable', 'matches': [[22, 28], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1514, 'text': 'elif isinstance(element, Import):', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1515, 'text': 'return "import_statement"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1544, 'text': '# Import/Export-related queries', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1545, 'text': '"import": ["import_statement"],', 'matches': [[13, 19], [24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1546, 'text': '"imports": ["import_statement"],', 'matches': [[13, 19], [25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1566, 'text': '"import_statement",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1611, 'text': 'imports = extractor.extract_imports(tree, source_code)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1624, 'text': 'elements.extend(imports)', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1657, 'text': '"imports": [],', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1664, 'text': 'imports = self._extractor.extract_imports(tree, source_code)', 'matches': [[12, 18], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1670, 'text': '"imports": imports,', 'matches': [[17, 23], [27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\javascript_plugin.py', 'line': 1679, 'text': '"imports": [],', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase3_advanced_edges.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase3_advanced_edges.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase3_advanced_edges.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase3_advanced_edges.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase3_advanced_edges.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_models_extended.py', 'line': 9, 'text': 'from tree_sitter_analyzer.models import (', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_models_extended.py', 'line': 300, 'text': 'from tree_sitter_analyzer.models import Function, Variable', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_find_and_grep_tool_file_output.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_find_and_grep_tool_file_output.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_find_and_grep_tool_file_output.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_find_and_grep_tool_file_output.py', 'line': 12, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_find_and_grep_tool_file_output.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_find_and_grep_tool_file_output.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 2, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 4, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 7, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 8, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 196, 'text': 'f1.write_text("import os\\n", encoding="utf-8")', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 198, 'text': 'f2.write_text("import sys\\n", encoding="utf-8")', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 204, 'text': '"lines": {"text": "import os\\n"},', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 206, 'text': '"submatches": [{"match": {"text": "import"}, "start": 0, "end": 6}],', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 221, 'text': '"query": "import",', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 285, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import parse_rg_count_output', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 325, 'text': '{"roots": [str(tmp_path)], "query": "import", "count_only_matches": True}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 373, 'text': '{"roots": [str(tmp_path)], "query": "import", "count_only_matches": True}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 390, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import build_rg_command', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 452, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import summarize_search_results', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 456, 'text': '{"file": "file1.py", "line": 10, "text": "import os"},', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 457, 'text': '{"file": "file1.py", "line": 20, "text": "import sys"},', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 458, 'text': '{"file": "file1.py", "line": 30, "text": "import json"},', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 459, 'text': '{"file": "file2.py", "line": 5, "text": "import re"},', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 460, 'text': '{"file": "file2.py", "line": 15, "text": "import time"},', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 461, 'text': '{"file": "file3.py", "line": 1, "text": "import logging"},', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 525, 'text': '"lines": {"text": "import os\\n"},', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 527, 'text': '"submatches": [{"match": {"text": "import"}, "start": 0, "end": 6}],', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 534, 'text': '"lines": {"text": "import sys\\n"},', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 536, 'text': '"submatches": [{"match": {"text": "import"}, "start": 0, "end": 6}],', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 552, 'text': '{"roots": [str(tmp_path)], "query": "import", "summary_only": True}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 729, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import build_fd_command', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 798, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import parse_rg_count_output', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 830, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import summarize_search_results', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 840, 'text': 'matches = [{"file": "test.py", "line": 1, "text": "import os"}]', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 879, 'text': 'import os', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 980, 'text': 'import json', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1054, 'text': 'test_file.write_text("import os\\n", encoding="utf-8")', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1060, 'text': '"lines": {"text": "import os\\n"},', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1062, 'text': '"submatches": [{"match": {"text": "import"}, "start": 0, "end": 6}],', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1074, 'text': 'result = await tool.execute({"files": [str(test_file)], "query": "import"})', 'matches': [[70, 76]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1442, 'text': 'b\'{"type":"match","data":{"path":{"text":"test.py"},"lines":{"text":"import"},"line_number":1,"submatches":[]}}\\n\',', 'matches': [[85, 91]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1453, 'text': '"query": "import",', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1582, 'text': '\'{"type":"match","data":{"path":{"text":"file1.py"},"lines":{"text":"import os"},"line_number":1,"submatches":[]}}\',', 'matches': [[85, 91]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1583, 'text': '\'{"type":"match","data":{"path":{"text":"file1.py"},"lines":{"text":"import sys"},"line_number":2,"submatches":[]}}\',', 'matches': [[85, 91]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1584, 'text': '\'{"type":"match","data":{"path":{"text":"file2.py"},"lines":{"text":"import json"},"line_number":1,"submatches":[]}}\',', 'matches': [[85, 91]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1593, 'text': '{"roots": [str(tmp_path)], "query": "import", "summary_only": True}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1794, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import (', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 2405, 'text': '(tmp_path / "src" / "main.py").write_text("import os")', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 2407, 'text': '(tmp_path / "tests" / "test_main.py").write_text("import os")', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 2438, 'text': '"query": "import",', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3099, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3165, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3723, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3830, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3877, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3923, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3969, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 4010, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\argument_validator.py', 'line': 8, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 11, 'text': 'from typing import TYPE_CHECKING', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 13, 'text': 'from ..models import AnalysisResult, MarkupElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 14, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 15, 'text': 'from ..utils import log_debug, log_error, log_info', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 18, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 20, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 119, 'text': 'def extract_imports(self, tree: "tree_sitter.Tree", source_code: str) -> list:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 120, 'text': '"""HTML doesn\'t have imports, return empty list"""', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 375, 'text': 'from ..queries.html import HTML_QUERIES', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 406, 'text': 'from ..encoding_utils import read_file_safe', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 414, 'text': 'import tree_sitter', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 415, 'text': 'import tree_sitter_html as ts_html', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\html_plugin.py', 'line': 445, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_query_tool_definition.py', 'line': 8, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_query_tool_definition.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_query_tool_definition.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_query_tool_definition.py', 'line': 88, 'text': 'mock_get.return_value = ["methods", "class", "imports"]', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_query_tool_definition.py', 'line': 92, 'text': 'assert result == ["methods", "class", "imports"]', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_query_tool_definition.py', 'line': 104, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 12, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase1_basic.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase1_basic.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase1_basic.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase1_basic.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase1_basic.py', 'line': 188, 'text': 'query="import",', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase1_basic.py', 'line': 308, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import clear_cache', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 24, 'text': 'query="import",', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 54, 'text': 'query="import",', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 300, 'text': '[jline(str(f1), "import os\\n", 1), jline(str(f2), "import sys\\n", 1)]', 'matches': [[25, 31], [59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 311, 'text': '{"roots": [str(tmp_path)], "query": "import", "summary_only": True}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 7, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 9, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 11, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.tools.universal_analyze_tool import UniversalAnalyzeTool', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 41, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 179, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 4, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 5, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 6, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 11, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 450, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 499, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 11, 'text': 'from typing import TYPE_CHECKING', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 13, 'text': 'from ..models import AnalysisResult, StyleElement', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 14, 'text': 'from ..plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 15, 'text': 'from ..utils import log_debug, log_error, log_info', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 18, 'text': 'import tree_sitter', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 20, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 95, 'text': 'def extract_imports(self, tree: "tree_sitter.Tree", source_code: str) -> list:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 96, 'text': '"""CSS doesn\'t have imports in the traditional sense, return empty list"""', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 136, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 160, 'text': '"import_statement",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 332, 'text': 'from ..queries.css import CSS_QUERIES', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 365, 'text': 'from ..encoding_utils import read_file_safe', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 373, 'text': 'import tree_sitter', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 374, 'text': 'import tree_sitter_css as ts_css', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\languages\\css_plugin.py', 'line': 404, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatter_registry.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatter_registry.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatter_registry.py', 'line': 13, 'text': 'from tree_sitter_analyzer.formatters.formatter_registry import (', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatter_registry.py', 'line': 21, 'text': 'from tree_sitter_analyzer.models import (', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatter_registry.py', 'line': 75, 'text': 'from tree_sitter_analyzer.formatters.formatter_registry import (', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatter_registry.py', 'line': 227, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase7_integration_edges.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase7_integration_edges.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase7_integration_edges.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase7_integration_edges.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase7_integration_edges.py', 'line': 193, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 11, 'text': 'from unittest.mock import AsyncMock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 46, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 47, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 48, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 95, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 96, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 542, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 781, 'text': 'import time', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 802, 'text': 'import asyncio', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 11, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 12, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 13, 'text': 'from unittest.mock import AsyncMock, Mock', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 167, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import handle_mcp_errors', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 187, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import handle_mcp_errors', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 11, 'text': 'from tree_sitter_analyzer.formatters.base_formatter import BaseTableFormatter', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 12, 'text': 'from tree_sitter_analyzer.formatters.formatter_factory import TableFormatterFactory', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 13, 'text': 'from tree_sitter_analyzer.formatters.java_formatter import JavaTableFormatter', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 14, 'text': 'from tree_sitter_analyzer.formatters.javascript_formatter import (', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 17, 'text': 'from tree_sitter_analyzer.formatters.python_formatter import PythonTableFormatter', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 18, 'text': 'from tree_sitter_analyzer.formatters.typescript_formatter import (', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 432, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters_comprehensive.py', 'line': 491, 'text': '"imports": [{"statement": "java.util.List"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 8, 'text': 'from .advanced_command import AdvancedCommand', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 9, 'text': 'from .base_command import BaseCommand', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 10, 'text': 'from .default_command import DefaultCommand', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 11, 'text': 'from .partial_read_command import PartialReadCommand', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 12, 'text': 'from .query_command import QueryCommand', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 13, 'text': 'from .structure_command import StructureCommand', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 14, 'text': 'from .summary_command import SummaryCommand', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\commands\\__init__.py', 'line': 15, 'text': 'from .table_command import TableCommand', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__main__.py', 'line': 9, 'text': 'from ..cli_main import main', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 24, 'text': 'f1.write_text("import os\\n", encoding="utf-8")', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 25, 'text': 'f2.write_text("import sys\\n", encoding="utf-8")', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 31, 'text': '"lines": {"text": "import os\\n"},', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 55, 'text': '"query": "import",', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 68, 'text': 'f.write_text("import os\\n", encoding="utf-8")', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 74, 'text': '"lines": {"text": "import os\\n"},', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 91, 'text': '{"roots": [str(tmp_path)], "query": "import", "follow_symlinks": True}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 8, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 9, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 10, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 11, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 12, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 15, 'text': 'from tree_sitter_analyzer.project_detector import (', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 35, 'text': 'import ctypes', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 36, 'text': 'from ctypes import wintypes', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 57, 'text': 'except (ImportError, OSError, AttributeError):', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase6_fs_encoding.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase6_fs_encoding.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase6_fs_encoding.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase6_fs_encoding.py', 'line': 376, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import get_default_cache', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 8, 'text': 'from unittest.mock import AsyncMock, Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.server import (', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 34, 'text': 'from tree_sitter_analyzer.mcp import MCP_INFO', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 75, 'text': 'import asyncio', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 141, 'text': 'import asyncio', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 203, 'text': 'import asyncio', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 231, 'text': 'import asyncio', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 253, 'text': 'import asyncio', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 311, 'text': '# Just test that the module can be imported and MCP_AVAILABLE is a boolean', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 312, 'text': 'from tree_sitter_analyzer.mcp.server import MCP_AVAILABLE', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 8, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 9, 'text': 'from argparse import Namespace', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 11, 'text': 'from ..language_detector import detect_language_from_file, detector', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 12, 'text': 'from ..output_manager import output_data, output_error, output_info, output_list', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 13, 'text': 'from ..query_loader import query_loader', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\info_commands.py', 'line': 116, 'text': 'from itertools import islice', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 9, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 13, 'text': 'from tree_sitter_analyzer.formatters.javascript_formatter import (', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 32, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 34, 'text': '"statement": "import React from \'react\';",', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 39, 'text': '"statement": "import { useState, useEffect } from \'react\';",', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 273, 'text': 'assert "## Imports" in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 283, 'text': 'assert "import React from \'react\';" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 293, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 305, 'text': 'def test_format_full_table_with_import_construction(self, formatter):', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 306, 'text': '"""Test import statement construction when statement is missing"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 309, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 325, 'text': 'assert "import React from \'react\';" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 331, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 732, 'text': 'def test_format_full_table_no_imports(self, formatter):', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 733, 'text': '"""Test full table formatting without imports"""', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 736, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 746, 'text': 'assert "## Imports" not in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 752, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 768, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 784, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 802, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 818, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 850, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 907, 'text': '"imports": None,', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 925, 'text': '"imports": "not_a_list", # Should be list', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1070, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1075, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1076, 'text': '{"name": f"import{i}", "source": f"module{i}"} for i in range(100)', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1109, 'text': '"imports": [{"name": "モジュール", "source": "ライブラリ"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1130, 'text': '"imports": [{"name": "module<>", "source": "lib|pipe"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1145, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1149, 'text': '"imports": [{"name": "test", "source": "module"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1172, 'text': 'import queue', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1173, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1177, 'text': '"imports": [{"name": "test", "source": "module"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1228, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1284, 'text': '"import_count": 5,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1315, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_comprehensive.py', 'line': 1393, 'text': '"import_count": 4,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 8, 'text': 'from .info_commands import (', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 16, 'text': '# Modern framework imports', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 18, 'text': 'from ..cli_main import main', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 19, 'text': 'from ..core.analysis_engine import get_analysis_engine', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 20, 'text': 'from ..query_loader import QueryLoader', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 23, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\cli\\__init__.py', 'line': 24, 'text': '# Minimal fallback for import safety', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_fixed.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_fixed.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_fixed.py', 'line': 17, 'text': 'from tree_sitter_analyzer.languages.java_plugin import JavaElementExtractor', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_fixed.py', 'line': 18, 'text': 'from tree_sitter_analyzer.models import Class, Function', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase4_regex_perf.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase4_regex_perf.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase4_regex_perf.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase4_regex_perf.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase4_regex_perf.py', 'line': 294, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 6, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 10, 'text': 'from tree_sitter_analyzer.formatters.javascript_formatter import (', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 40, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 67, 'text': '"imports": [{"name": long_name, "source": long_name}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 84, 'text': '"imports": [{"name": special_chars, "source": special_chars}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 101, 'text': '"imports": [{"name": f"module{control_chars}", "source": "lib"}],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_javascript_formatter_edge_cases.py', 'line': 329, 'text': 'import unicodedata', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 12, 'text': 'from tree_sitter_analyzer.languages.html_plugin import HtmlElementExtractor, HtmlPlugin', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 13, 'text': 'from tree_sitter_analyzer.models import MarkupElement', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 55, 'text': 'def test_extract_imports_returns_empty(self):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 56, 'text': '"""Test that HTML extractor returns empty list for imports"""', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 57, 'text': 'result = self.extractor.extract_imports(None, "")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_plugin.py', 'line': 143, 'text': 'import tempfile', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 6, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 7, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 9, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.utils.gitignore_detector import (', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 494, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 531, 'text': 'import threading', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 8, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.utils.gitignore_detector import (', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_formatter.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_formatter.py', 'line': 11, 'text': 'from tree_sitter_analyzer.formatters.formatter_registry import IFormatter', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_formatter.py', 'line': 12, 'text': 'from tree_sitter_analyzer.formatters.html_formatter import (', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_formatter.py', 'line': 17, 'text': 'from tree_sitter_analyzer.models import (', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_formatter.py', 'line': 672, 'text': 'from tree_sitter_analyzer.formatters.formatter_registry import FormatterRegistry', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_html_formatter.py', 'line': 682, 'text': 'from tree_sitter_analyzer.formatters.formatter_registry import FormatterRegistry', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 15, 'text': 'from tree_sitter_analyzer.plugins import DefaultExtractor, DefaultLanguagePlugin', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 16, 'text': 'from tree_sitter_analyzer.plugins.manager import PluginManager', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 121, 'text': 'def test_extract_imports_with_valid_tree(self, mocker, default_extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 122, 'text': '"""Test import extraction with valid tree"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 125, 'text': 'mock_root.type = "import_statement"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 131, 'text': 'source_code = "import { test } from \'module\';"', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 133, 'text': 'imports = default_extractor.extract_imports(mock_tree, source_code)', 'matches': [[8, 14], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 135, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 137, 'text': 'def test_extract_imports_with_exception(self, mocker, default_extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 138, 'text': '"""Test import extraction with exception"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 142, 'text': 'source_code = "import { test } from \'module\';"', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 144, 'text': 'imports = default_extractor.extract_imports(mock_tree, source_code)', 'matches': [[8, 14], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 146, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 209, 'text': 'def test_traverse_for_imports_with_nested_nodes(self, mocker, default_extractor):', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 210, 'text': '"""Test import traversal with nested nodes"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 212, 'text': 'mock_node.type = "import_statement"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 222, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 223, 'text': 'lines = ["import { test } from \'module\';"]', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 225, 'text': 'default_extractor._traverse_for_imports(mock_node, imports, lines)', 'matches': [[40, 46], [59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 227, 'text': 'assert len(imports) == 1', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 8, 'text': 'from tree_sitter_analyzer.formatters.python_formatter import PythonTableFormatter', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 93, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 94, 'text': '{"name": "math", "module_name": "", "raw_text": "import math"},', 'matches': [[65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 98, 'text': '"raw_text": "from math import sqrt",', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 102, 'text': '"source_code": \'"""Calculator module for basic arithmetic operations."""\\n\\nimport math\\nfrom math import sqrt\\n\\nclass Calculator:\\n """A simple calculator class."""\\n precision = 2\\n \\n def add(self, a: int, b: int) -> int:\\n """Add two numbers."""\\n return a + b\',', 'matches': [[88, 94], [111, 117]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 145, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 158, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 173, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 187, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 195, 'text': 'def test_full_format_imports_section(self, formatter):', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 196, 'text': '"""Test full format imports section."""', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 201, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 202, 'text': '{"raw_text": "import os"},', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 203, 'text': '{"raw_text": "from typing import List"},', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 210, 'text': 'assert "## Imports" in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 212, 'text': 'assert "import os" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 213, 'text': 'assert "from typing import List" in result', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 214, 'text': 'assert "import json" in result # Fallback construction', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 240, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 264, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 281, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 315, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 735, 'text': 'data = {"source_code": "import os\\n\\nclass Test:\\n pass"}', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 763, 'text': 'def test_format_decorators_important(self, formatter):', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 764, 'text': '"""Test formatting important decorators."""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 778, 'text': 'def test_format_decorators_multiple_non_important(self, formatter):', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 779, 'text': '"""Test formatting multiple non-important decorators."""', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 798, 'text': '# Missing classes, functions, imports, etc.', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 812, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 841, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 874, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 905, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 924, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_comprehensive.py', 'line': 969, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 8, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 11, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 12, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_cli.py', 'line': 16, 'text': 'from tree_sitter_analyzer.interfaces.cli import (', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_new_elements.py', 'line': 13, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_new_elements.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_new_elements.py', 'line': 17, 'text': 'from tree_sitter_analyzer.languages.markdown_plugin import (', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_new_elements.py', 'line': 511, 'text': 'from tree_sitter_analyzer.core.analysis_engine import (', 'matches': [[71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 8, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 9, 'text': 'from unittest.mock import AsyncMock, Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 13, 'text': 'from tree_sitter_analyzer import __version__', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 14, 'text': 'from tree_sitter_analyzer.interfaces.mcp_server import (', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 49, 'text': 'with pytest.raises(ImportError, match="MCP library not available"):', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 261, 'text': 'class TestModuleImports:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 262, 'text': '"""Test module imports and dependencies."""', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 264, 'text': 'def test_module_imports(self):', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 265, 'text': '"""Test that required modules can be imported."""', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 266, 'text': '# Test that the module can be imported', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 267, 'text': 'from tree_sitter_analyzer.interfaces import mcp_server', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 383, 'text': 'import inspect', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces_mcp_server.py', 'line': 390, 'text': 'import inspect', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 6, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 7, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 8, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 10, 'text': 'from unittest.mock import AsyncMock, Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.server import (', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 78, 'text': 'side_effect=ImportError,', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 936, 'text': 'import inspect', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 8, 'text': 'from tree_sitter_analyzer.formatters.python_formatter import PythonTableFormatter', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 52, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 65, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 103, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 140, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 161, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 183, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 211, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 244, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 281, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 312, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 342, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 362, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 383, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 502, 'text': 'def test_extract_module_docstring_with_imports_before(self, formatter):', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 503, 'text': '"""Test extracting module docstring with imports before it."""', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 505, 'text': '"source_code": """import os', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 506, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 507, 'text': "'''Module docstring after imports.'''", 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 514, 'text': 'assert result == "Module docstring after imports."', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 592, 'text': 'def test_format_decorators_mixed_important_and_custom(self, formatter):', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 593, 'text': '"""Test formatting mix of important and custom decorators."""', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 625, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 649, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_formatters\\test_python_formatter_edge_cases.py', 'line': 683, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 8, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 12, 'text': 'from tree_sitter_analyzer.plugins.base import (', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 76, 'text': 'assert "import" in types', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 202, 'text': 'def test_extract_imports(', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 205, 'text': '"""Test extract_imports method"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 206, 'text': '# Create mock import node', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 207, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 208, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 209, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 210, 'text': 'mock_import_node.end_point = (0, 15)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 211, 'text': 'mock_import_node.start_byte = 0', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 212, 'text': 'mock_import_node.end_byte = 15', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 213, 'text': 'mock_import_node.children = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 215, 'text': 'mock_tree.root_node.children = [mock_import_node]', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 217, 'text': 'source_code = "import os"', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 218, 'text': 'imports = extractor.extract_imports(mock_tree, source_code)', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 220, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 269, 'text': 'def test_is_import_node(self, extractor: DefaultExtractor) -> None:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 270, 'text': '"""Test _is_import_node method"""', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 271, 'text': 'assert extractor._is_import_node("import_statement") is True', 'matches': [[29, 35], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 272, 'text': 'assert extractor._is_import_node("import_declaration") is True', 'matches': [[29, 35], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 273, 'text': 'assert extractor._is_import_node("include_statement") is True', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 274, 'text': 'assert extractor._is_import_node("function_definition") is False', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 275, 'text': 'assert extractor._is_import_node("class") is False', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 453, 'text': 'imports = extractor.extract_imports(mock_tree, source_code)', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 460, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 6, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 7, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 9, 'text': 'from unittest.mock import AsyncMock, Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.server import (', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 617, 'text': 'from tree_sitter_analyzer.mcp.server import main_sync', 'matches': [[57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 6, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 7, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 10, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.utils.path_resolver import PathResolver, resolve_path', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 30, 'text': 'import ctypes', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 31, 'text': 'from ctypes import wintypes', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 52, 'text': 'except (ImportError, OSError, AttributeError):', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver.py', 'line': 11, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver.py', 'line': 12, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.utils.path_resolver import PathResolver, resolve_path', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_reading.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_reading.py', 'line': 7, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_reading.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_reading.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_reading.py', 'line': 15, 'text': 'from tree_sitter_analyzer.file_handler import read_file_lines_range, read_file_partial', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 12, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 19, 'text': 'from tree_sitter_analyzer.cli.commands.partial_read_command import PartialReadCommand', 'matches': [[60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 47, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 53, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 63, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 73, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 83, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 93, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 110, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 127, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 144, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 155, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 165, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 175, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 195, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 213, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 230, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 247, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 260, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 275, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 290, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 305, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 319, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 336, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 9, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 11, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 12, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 16, 'text': 'from tree_sitter_analyzer.utils import log_error, log_info, log_warning', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 69, 'text': 'import fnmatch', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 551, 'text': 'from tree_sitter_analyzer.utils import log_info', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_intermediate_files_management.py', 'line': 633, 'text': 'import platform', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 15, 'text': 'from tree_sitter_analyzer.languages.java_plugin import JavaElementExtractor, JavaPlugin', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 16, 'text': 'from tree_sitter_analyzer.languages.javascript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 20, 'text': 'from tree_sitter_analyzer.plugins.manager import PluginManager', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 113, 'text': 'assert extractor.imports == []', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 164, 'text': 'def test_extract_imports_with_mock_tree(mocker):', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 165, 'text': '"""Test import extraction with mock tree"""', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 170, 'text': 'source_code = "import java.util.List;"', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 172, 'text': 'imports = extractor.extract_imports(mock_tree, source_code)', 'matches': [[4, 10], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 174, 'text': 'assert isinstance(imports, list)', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 184, 'text': 'assert hasattr(extractor, "extract_imports")', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 198, 'text': 'imports = extractor.extract_imports(mock_tree, source_code)', 'matches': [[4, 10], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 203, 'text': 'assert isinstance(imports, list)', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 11, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 15, 'text': 'from tree_sitter_analyzer.interfaces.cli_adapter import CLIAdapter', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 16, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 57, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 429, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_cli_adapter.py', 'line': 430, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_output_manager.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_output_manager.py', 'line': 10, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_output_manager.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_output_manager.py', 'line': 14, 'text': '# Import the module under test', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_output_manager.py', 'line': 15, 'text': 'from tree_sitter_analyzer.output_manager import (', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 8, 'text': 'from tree_sitter_analyzer.queries.python import (', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 13, 'text': 'IMPORTS,', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 62, 'text': 'essential_queries = ["functions", "classes", "variables", "imports", "comments"]', 'matches': [[67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 72, 'text': 'constants = [FUNCTIONS, CLASSES, VARIABLES, IMPORTS, COMMENTS]', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 92, 'text': 'def test_imports_query(self) -> None:', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 93, 'text': '"""Test imports query content"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 94, 'text': 'assert "import_statement" in IMPORTS', 'matches': [[16, 22], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 95, 'text': 'assert "@import" in IMPORTS', 'matches': [[17, 23], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 118, 'text': 'assert ALL_QUERIES["imports"]["query"] == IMPORTS', 'matches': [[28, 34], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 131, 'text': '# Imports should handle from imports', 'matches': [[10, 16], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 132, 'text': 'if "import_from_statement" in IMPORTS:', 'matches': [[12, 18], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 133, 'text': 'assert "import_from_statement" in IMPORTS', 'matches': [[20, 26], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 8, 'text': 'from tree_sitter_analyzer.queries.javascript import (', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 14, 'text': 'IMPORTS,', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 64, 'text': 'essential_queries = ["functions", "classes", "variables", "imports", "exports"]', 'matches': [[67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 74, 'text': 'constants = [FUNCTIONS, CLASSES, VARIABLES, IMPORTS, EXPORTS, OBJECTS, COMMENTS]', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 98, 'text': 'def test_imports_query(self) -> None:', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 99, 'text': '"""Test imports query content"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 100, 'text': 'assert "import_statement" in IMPORTS', 'matches': [[16, 22], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 101, 'text': 'assert "import_clause" in IMPORTS', 'matches': [[16, 22], [34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 102, 'text': 'assert "@import" in IMPORTS', 'matches': [[17, 23], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 137, 'text': 'assert ALL_QUERIES["imports"]["query"] == IMPORTS', 'matches': [[28, 34], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 9, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 13, 'text': 'from tree_sitter_analyzer.plugins.base import LanguagePlugin', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 14, 'text': 'from tree_sitter_analyzer.plugins.manager import PluginManager', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 38, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 114, 'text': 'with patch("importlib.metadata.entry_points") as mock_iter:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 130, 'text': 'with patch("importlib.metadata.entry_points") as mock_iter:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 145, 'text': 'patch("importlib.util.spec_from_file_location") as mock_spec,', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 146, 'text': 'patch("importlib.util.module_from_spec") as mock_module,', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 395, 'text': 'def test_load_plugins_with_import_error(', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 398, 'text': '"""Test plugin loading with import errors"""', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 399, 'text': 'with patch("importlib.metadata.entry_points") as mock_iter:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 400, 'text': 'mock_iter.side_effect = ImportError("pkg_resources not available")', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 404, 'text': '# Should handle import errors gracefully', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 415, 'text': 'with patch("importlib.metadata.entry_points") as mock_iter:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_python_plugin_coverage.py', 'line': 8, 'text': 'from unittest.mock import MagicMock', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_python_plugin_coverage.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_python_plugin_coverage.py', 'line': 12, 'text': 'from tree_sitter_analyzer.languages.python_plugin import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_python_plugin_coverage.py', 'line': 62, 'text': 'assert hasattr(extractor, "extract_imports")', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_python_plugin_coverage.py', 'line': 73, 'text': 'imports = extractor.extract_imports(mock_tree, mock_language)', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_python_plugin_coverage.py', 'line': 78, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 16, 'text': 'from tree_sitter_analyzer.languages.javascript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 39, 'text': 'extractor.source_code = "import React from \'react\'; export default MyComponent;"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 55, 'text': 'extractor.source_code = "import Vue from \'vue\';"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 92, 'text': 'def test_parse_import_statement_default(self, extractor):', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 93, 'text': '"""Test parsing default import statements"""', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 94, 'text': 'result = extractor._parse_import_statement("import React from \'react\';")', 'matches': [[34, 40], [52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 96, 'text': 'import_type, names, source, is_default, is_namespace = result', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 97, 'text': 'assert import_type == "default"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 103, 'text': 'def test_parse_import_statement_named(self, extractor):', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 104, 'text': '"""Test parsing named import statements"""', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 105, 'text': 'result = extractor._parse_import_statement(', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 106, 'text': '"import { useState, useEffect } from \'react\';"', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 109, 'text': 'import_type, names, source, is_default, is_namespace = result', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 110, 'text': 'assert import_type == "named"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 117, 'text': 'def test_parse_import_statement_namespace(self, extractor):', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 118, 'text': '"""Test parsing namespace import statements"""', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 119, 'text': 'result = extractor._parse_import_statement("import * as React from \'react\';")', 'matches': [[34, 40], [52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 121, 'text': 'import_type, names, source, is_default, is_namespace = result', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 122, 'text': 'assert import_type == "namespace"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 234, 'text': 'imports = extractor._extract_commonjs_requires(mock_tree, source_code)', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 236, 'text': 'assert len(imports) == 2', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 237, 'text': 'assert imports[0].name == "fs"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 238, 'text': 'assert imports[0].module_path == "fs"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 239, 'text': 'assert imports[1].name == "path"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 240, 'text': 'assert imports[1].module_path == "path"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 276, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 434, 'text': 'def test_parse_import_statement_error(self, extractor):', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 435, 'text': '"""Test import statement parsing with malformed input"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_comprehensive.py', 'line': 436, 'text': 'result = extractor._parse_import_statement("invalid import statement")', 'matches': [[34, 40], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 12, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 16, 'text': 'from tree_sitter_analyzer.interfaces.mcp_adapter import MCPAdapter, MCPServerAdapter', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 17, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 58, 'text': 'from typing import Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 621, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_interfaces\\test_mcp_adapter.py', 'line': 622, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 12, 'text': 'from tree_sitter_analyzer.queries import javascript as js_queries', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 77, 'text': 'def test_import_export_queries(self):', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 78, 'text': '"""Test import/export query coverage"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 79, 'text': 'import_export_queries = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 80, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 81, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 82, 'text': '"import_default",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 83, 'text': '"import_named",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 84, 'text': '"import_namespace",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 90, 'text': 'for query_name in import_export_queries:', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 245, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 364, 'text': 'common_features = ["functions", "classes", "variables", "imports", "exports"]', 'matches': [[65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_library_coverage.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_library_coverage.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_library_coverage.py', 'line': 15, 'text': 'from tree_sitter_analyzer.query_loader import get_query, get_query_loader, list_queries', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_library_coverage.py', 'line': 88, 'text': '"import",', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_java.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_java.py', 'line': 8, 'text': 'from tree_sitter_analyzer.queries.java import (', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_java.py', 'line': 94, 'text': 'essential_queries = ["class", "method", "field", "import", "package"]', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_java.py', 'line': 106, 'text': 'essential_queries = ["class", "method", "field", "import", "package"]', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_java.py', 'line': 162, 'text': '"import_detailed",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_markdown.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_markdown.py', 'line': 10, 'text': 'from tree_sitter_analyzer.queries.markdown import (', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 12, 'text': 'from tree_sitter_analyzer.queries import typescript as ts_queries', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 55, 'text': 'def test_new_import_queries(self):', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 56, 'text': '"""Test new import-specific queries"""', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 57, 'text': 'import_queries = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 58, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 59, 'text': '"type_import",', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 60, 'text': '"import_type",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 64, 'text': 'for query_name in import_queries:', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 261, 'text': '# Skip parentheses check for imports query (known issue)', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 262, 'text': 'if query_name != "imports":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 434, 'text': '"imports": ["import_statement", "type_import"],', 'matches': [[13, 19], [25, 31], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 11, 'text': 'from tree_sitter_analyzer.queries import typescript as ts_queries', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 53, 'text': 'def test_imports_query_exists(self):', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 54, 'text': '"""Test that IMPORTS query is defined"""', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 55, 'text': 'assert hasattr(ts_queries, "IMPORTS")', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 56, 'text': 'assert isinstance(ts_queries.IMPORTS, str)', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 57, 'text': 'assert len(ts_queries.IMPORTS.strip()) > 0', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 119, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 205, 'text': 'def test_imports_query_patterns(self):', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 206, 'text': '"""Test that IMPORTS query contains expected patterns"""', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 207, 'text': 'imports_query = ts_queries.IMPORTS', 'matches': [[8, 14], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 209, 'text': '# Should contain import patterns', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 210, 'text': 'assert "import_statement" in imports_query', 'matches': [[16, 22], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 213, 'text': 'assert "@import.source" in imports_query', 'matches': [[17, 23], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 214, 'text': 'assert "@import.name" in imports_query', 'matches': [[17, 23], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 372, 'text': '"imports": ["@import."],', 'matches': [[13, 19], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 15, 'text': 'from tree_sitter_analyzer.languages.javascript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 21, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import, Variable', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 140, 'text': '# Parameters may be empty due to mocking limitations - the important part is that the function is extracted', 'matches': [[67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 289, 'text': 'def test_extract_import_info_with_valid_node(self, extractor, mocker):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 290, 'text': '"""Test import info extraction with valid node"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 297, 'text': '# Mock string node for import source - "\'./module\'" is at position 16-26', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 305, 'text': 'source_code = "import foo from \'./module\';"', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 311, 'text': 'imp = extractor._extract_import_info_simple(mock_node)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 314, 'text': 'assert isinstance(imp, Import)', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 315, 'text': '# The import name extraction may return different values based on parsing', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 316, 'text': 'assert imp.name in ["import", "unknown", ""]', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 320, 'text': 'def test_extract_import_info_with_double_quotes(self, extractor, mocker):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 321, 'text': '"""Test import info extraction with double quotes"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 328, 'text': '# Mock string node for import source - \'"./module"\' is at position 16-26', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 336, 'text': 'source_code = \'import foo from "./module";\'', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 342, 'text': 'imp = extractor._extract_import_info_simple(mock_node)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 347, 'text': 'def test_extract_import_info_with_no_source(self, extractor, mocker):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 348, 'text': '"""Test import info extraction with no source node"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 353, 'text': 'extractor.source_code = "import;"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 354, 'text': 'extractor.content_lines = ["import;"]', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 356, 'text': 'imp = extractor._extract_import_info_simple(mock_node)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 358, 'text': '# The method may return an Import object with default values instead of None', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 359, 'text': 'assert imp is None or (isinstance(imp, Import) and imp.name == "unknown")', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 361, 'text': 'def test_extract_import_info_with_exception(self, extractor, mocker):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 362, 'text': '"""Test import info extraction with exception"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 370, 'text': 'imp = extractor._extract_import_info_simple(mock_node)', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 432, 'text': 'def test_extract_imports_with_exception(self, extractor, mocker):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 433, 'text': '"""Test import extraction with exception during query"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 440, 'text': 'imports = extractor.extract_imports(mock_tree, "test code")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 442, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 528, 'text': 'def test_extract_imports_without_language(self, mocker):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 529, 'text': '"""Test import extraction without language"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 534, 'text': 'imports = extractor.extract_imports(mock_tree, "import \'./module\';")', 'matches': [[8, 14], [36, 42], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_javascript_plugin_extended.py', 'line': 536, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 10, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 12, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 13, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 15, 'text': 'from .. import __version__', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 18, 'text': 'from mcp.server import Server', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 19, 'text': 'from mcp.server.models import InitializationOptions', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 20, 'text': 'from mcp.server.stdio import stdio_server', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 21, 'text': 'from mcp.types import Resource, TextContent, Tool', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 24, 'text': 'except ImportError:', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 48, 'text': 'from .. import api', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 49, 'text': 'from ..utils import log_error, log_info', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_server.py', 'line': 69, 'text': 'raise ImportError("MCP library not available. Please install mcp package.")', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 14, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 92, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 93, 'text': 'from typing import List', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 280, 'text': '# Test import queries', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 281, 'text': 'import_results = await query_service.execute_query(', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 282, 'text': 'temp_file, "python", query_key="import"', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 284, 'text': 'imports_results = await query_service.execute_query(', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 285, 'text': 'temp_file, "python", query_key="imports"', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 288, 'text': 'assert import_results is not None, "import query should return results"', 'matches': [[19, 25], [48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 289, 'text': 'assert imports_results is not None, "imports query should return results"', 'matches': [[19, 25], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 290, 'text': 'assert len(import_results) > 0, "Should find Python imports"', 'matches': [[23, 29], [64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 291, 'text': 'assert len(imports_results) > 0, "Should find Python imports"', 'matches': [[23, 29], [65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_service.py', 'line': 9, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_service.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_service.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 11, 'text': 'from tree_sitter_analyzer.queries.javascript import (', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 52, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 152, 'text': 'legacy_queries = ["functions", "classes", "variables", "imports", "exports"]', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 234, 'text': 'def test_import_export_queries_comprehensive(self) -> None:', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 235, 'text': '"""Test comprehensive import/export query coverage"""', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 236, 'text': 'import_export_queries = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 237, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 238, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 239, 'text': '"import_default",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 240, 'text': '"import_named",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 241, 'text': '"import_namespace",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 242, 'text': '"dynamic_import",', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 249, 'text': 'for query_name in import_export_queries:', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 254, 'text': 'if "import" in query_name:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 255, 'text': 'assert "import" in query', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 261, 'text': 'assert "named_imports" in query or "export_clause" in query', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 461, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 11, 'text': 'from tree_sitter_analyzer.query_loader import (', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 56, 'text': 'expected_queries = ["functions", "classes", "variables", "imports"]', 'matches': [[62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 68, 'text': 'expected_queries = ["functions", "classes", "imports", "decorators"]', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 212, 'text': 'def test_load_language_queries_import_error(mocker):', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 213, 'text': '"""Test handling of import errors when loading queries"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 214, 'text': 'mock_import = mocker.patch("importlib.import_module")', 'matches': [[9, 15], [32, 38], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 215, 'text': 'mock_import.side_effect = ImportError("Module not found")', 'matches': [[9, 15], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 231, 'text': 'mock_import = mocker.patch("importlib.import_module")', 'matches': [[9, 15], [32, 38], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 232, 'text': 'mock_import.return_value = mock_module', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 12, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 35, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 36, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 37, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 77, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 78, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 188, 'text': 'elif query_type == "imports":', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 191, 'text': '"capture_name": "import",', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 192, 'text': '"content": "import os",', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 195, 'text': '"node_type": "import_statement",', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 198, 'text': '"capture_name": "import",', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 199, 'text': '"content": "import sys",', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 202, 'text': '"node_type": "import_statement",', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 10, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 12, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 14, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 21, 'text': 'from tree_sitter_analyzer.cli.commands.base_command import BaseCommand', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 54, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 60, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 77, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 124, 'text': '# Import and call main to trigger environment variable setting', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 125, 'text': 'from tree_sitter_analyzer.cli_main import main', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 146, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 169, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 186, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 226, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 243, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 260, 'text': 'from tree_sitter_analyzer.cli_main import create_argument_parser', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 15, 'text': 'from tree_sitter_analyzer.exceptions import FileHandlingError, SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 357, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 408, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 409, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 410, 'text': 'from typing import List, Dict', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 8, 'text': 'from typing import TYPE_CHECKING, Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 10, 'text': 'from ..models import AnalysisResult', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 13, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 18, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 46, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 54, 'text': 'from ..core.analysis_engine import AnalysisRequest', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 71, 'text': 'from ..constants import (', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 75, 'text': 'ELEMENT_TYPE_IMPORT,', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 83, 'text': 'imports = [e for e in elements if is_element_of_type(e, ELEMENT_TYPE_IMPORT)]', 'matches': [[8, 14], [77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 107, 'text': '"imports": [', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 109, 'text': 'for imp in imports', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 127, 'text': '"import_count": len(imports),', 'matches': [[17, 23], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\mcp_adapter.py', 'line': 143, 'text': 'from ..models import AnalysisResult', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 9, 'text': 'import argparse', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 10, 'text': 'import importlib.metadata', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 11, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 12, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 13, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 14, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 15, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 17, 'text': 'from .. import api', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 59, 'text': 'version = importlib.metadata.version("tree-sitter-analyzer")', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli.py', 'line': 60, 'text': 'except importlib.metadata.PackageNotFoundError:', 'matches': [[11, 17]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 15, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 16, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 17, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 18, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 19, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 21, 'text': 'from ..core.analysis_engine import AnalysisRequest, UnifiedAnalysisEngine', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 22, 'text': 'from ..models import AnalysisResult', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 139, 'text': '- imports', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 154, 'text': 'from ..constants import (', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 158, 'text': 'ELEMENT_TYPE_IMPORT,', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 166, 'text': 'imports = [e for e in elements if is_element_of_type(e, ELEMENT_TYPE_IMPORT)]', 'matches': [[8, 14], [77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 178, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 179, 'text': '{"name": imp.name, "type": str(type(imp).__name__)} for imp in imports', 'matches': [[79, 85]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tree_sitter_analyzer\\interfaces\\cli_adapter.py', 'line': 357, 'text': 'from ..core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 10, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 11, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 12, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 20, 'text': 'from tree_sitter_analyzer.cli_main import main', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 21, 'text': 'from tree_sitter_analyzer.core.analysis_engine import get_analysis_engine', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 27, 'text': 'import asyncio', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 29, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 39, 'text': 'import time', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 73, 'text': 'imports = [', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 76, 'text': 'if hasattr(e, "element_type") and e.element_type == "import"', 'matches': [[73, 79]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 236, 'text': '"imports": [', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 241, 'text': '"statement": getattr(i, "import_statement", ""),', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 247, 'text': 'for i in imports', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 267, 'text': '"import_count": len(imports),', 'matches': [[25, 31], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 281, 'text': 'import concurrent.futures', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 315, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 442, 'text': 'assert "imports" in json_output', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 470, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 485, 'text': 'assert isinstance(result["imports"], list)', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 497, 'text': '"import_count",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 553, 'text': 'import java.util.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 554, 'text': 'import java.io.Serializable;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 555, 'text': 'import static java.lang.Math.PI;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 660, 'text': '# Verify import information（フォールバック対応）', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 661, 'text': 'imports = result["imports"]', 'matches': [[8, 14], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 662, 'text': 'if len(imports) == 0:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 665, 'text': 'assert "import java.util.*;" in source_code, (', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 668, 'text': 'assert "import static java.lang.Math.PI;" in source_code, (', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 674, 'text': 'static_imports = [imp for imp in imports if imp["is_static"]]', 'matches': [[19, 25], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 676, 'text': 'if len(static_imports) == 0:', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 678, 'text': 'assert "import static java.lang.Math.PI;" in source_code, (', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 829, 'text': 'for imp in result["imports"]:', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 830, 'text': 'required_import_keys = [', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_java_structure_analyzer.py', 'line': 837, 'text': 'for key in required_import_keys:', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 35, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 36, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 37, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 78, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 79, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 406, 'text': 'from unittest.mock import patch', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector.py', 'line': 11, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector.py', 'line': 12, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector.py', 'line': 14, 'text': 'from tree_sitter_analyzer.language_detector import (', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 3, 'text': 'Tests all major functionality including functions, classes, variables, imports,', 'matches': [[71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 7, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 11, 'text': 'from tree_sitter_analyzer.languages.javascript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 14, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 37, 'text': "import React, { useState, useEffect } from 'react';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 38, 'text': "import axios from 'axios';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 39, 'text': "import { debounce } from 'lodash';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 204, 'text': 'assert extractor.imports == []', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 241, 'text': '# Should detect as module due to imports/exports', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 251, 'text': 'vue_code = "import Vue from \'vue\'; export default { name: \'Component\' }"', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 257, 'text': 'angular_code = "import { Component } from \'@angular/core\';"', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 333, 'text': 'def test_extract_imports_basic(self, extractor, mock_tree, sample_javascript_code):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 334, 'text': '"""Test basic import extraction"""', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 335, 'text': '# Mock import statement', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 336, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 337, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 339, 'text': 'mock_tree.root_node.children = [mock_import_node]', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 341, 'text': 'with patch.object(extractor, "_extract_import_info_simple") as mock_extract:', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 342, 'text': 'mock_import = Import(', 'matches': [[17, 23], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 346, 'text': 'raw_text="import React from \'react\'",', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 349, 'text': 'mock_extract.return_value = mock_import', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 351, 'text': 'imports = extractor.extract_imports(mock_tree, sample_javascript_code)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 353, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 802, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_comprehensive.py', 'line': 849, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_cache.py', 'line': 8, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_cache.py', 'line': 9, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_cache.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_cache.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_cache.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import (', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 15, 'text': 'from tree_sitter_analyzer.language_detector import (', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 54, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 55, 'text': 'from sys import argv', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 167, 'text': '#import <Foundation/Foundation.h>', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 193, 'text': '#import "MyClass.h"', 'matches': [[5, 11]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_extended.py', 'line': 404, 'text': 'content = "#import <Foundation/Foundation.h>\\n@interface Test"', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 6, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 10, 'text': 'from tree_sitter_analyzer.languages.javascript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 14, 'text': 'from tree_sitter_analyzer.models import Function', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 39, 'text': 'imports = extractor.extract_imports(mock_tree, "")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 45, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 58, 'text': "import from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 363, 'text': 'def test_import_extraction_with_malformed_imports(self, extractor):', 'matches': [[13, 19], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 364, 'text': '"""Test import extraction with malformed import statements"""', 'matches': [[16, 22], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 365, 'text': 'malformed_imports = """', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 366, 'text': "import from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 367, 'text': "import 'module'", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 368, 'text': "import { } from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 369, 'text': "import { a, } from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 370, 'text': "import * as from 'module';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 377, 'text': '# Should handle malformed imports gracefully', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 378, 'text': 'imports = extractor.extract_imports(mock_tree, malformed_imports)', 'matches': [[8, 14], [36, 42], [65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 379, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 433, 'text': '"""Test framework detection with mixed framework imports"""', 'matches': [[57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 435, 'text': "import React from 'react';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 436, 'text': "import Vue from 'vue';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 437, 'text': "import { Component } from '@angular/core';", 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 486, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 487, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 550, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 563, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 584, 'text': 'mock_extractor.extract_imports.side_effect = Exception(', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 585, 'text': '"Import extraction error"', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_javascript_plugin_edge_cases.py', 'line': 599, 'text': '"imports": [],', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_content_parallel.py', 'line': 6, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_content_parallel.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_content_parallel.py', 'line': 10, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_content_parallel.py', 'line': 11, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 10, 'text': 'from tree_sitter_analyzer.language_detector import (', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 91, 'text': 'import re', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 143, 'text': 'import re', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 258, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 269, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 283, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 294, 'text': 'content = "@media screen { .class { display: block; } } @import \'styles.css\'; @keyframes fade { from { opacity: 0; } }"', 'matches': [[65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_html_css.py', 'line': 297, 'text': 'import re', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 15, 'text': 'from tree_sitter_analyzer.languages.java_plugin import JavaElementExtractor, JavaPlugin', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 16, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 17, 'text': 'from tree_sitter_analyzer.plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 44, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 45, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 88, 'text': 'assert hasattr(extractor, "extract_imports")', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 145, 'text': 'def test_extract_imports_success(', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 148, 'text': '"""Test successful import extraction"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 152, 'text': 'mock_query.captures.return_value = {"import.declaration": []}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 154, 'text': 'imports = extractor.extract_imports(mock_tree, "test code")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 156, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 203, 'text': 'def test_extract_import_info(self, extractor: JavaElementExtractor) -> None:', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 204, 'text': '"""Test import information extraction"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 206, 'text': 'mock_node.type = "import_declaration"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 213, 'text': 'result = extractor._extract_import_info(mock_node, "import java.util.List;")', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 216, 'text': 'assert result is None or isinstance(result, Import)', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin.py', 'line': 473, 'text': 'mock_language.side_effect = ImportError("Module not found")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 14, 'text': 'from tree_sitter_analyzer.cli.commands.base_command import BaseCommand', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 15, 'text': 'from tree_sitter_analyzer.cli.commands.query_command import QueryCommand', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 16, 'text': 'from tree_sitter_analyzer.core.analysis_engine import get_analysis_engine', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.universal_analyze_tool import UniversalAnalyzeTool', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 21, 'text': 'from tree_sitter_analyzer.security import SecurityValidator', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 30, 'text': 'from tree_sitter_analyzer.core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 53, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 80, 'text': 'from tree_sitter_analyzer.core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 147, 'text': 'from tree_sitter_analyzer.core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 182, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 205, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 276, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 294, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 295, 'text': 'from io import StringIO', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 11, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 12, 'text': 'from tree_sitter_analyzer.security import ProjectBoundaryManager', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 33, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 113, 'text': 'import shutil', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_markdown.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_detector_markdown.py', 'line': 10, 'text': 'from tree_sitter_analyzer.language_detector import LanguageDetector', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 3, 'text': 'Tests all major functionality including methods, classes, fields, imports, packages,', 'matches': [[66, 72]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 7, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 11, 'text': 'from tree_sitter_analyzer.languages.java_plugin import JavaElementExtractor, JavaPlugin', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 12, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import, Package, Variable', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 37, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 38, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 39, 'text': 'import java.util.Map;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 40, 'text': 'import java.util.HashMap;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 41, 'text': 'import java.util.concurrent.CompletableFuture;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 42, 'text': 'import javax.annotation.Nullable;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 43, 'text': 'import org.springframework.stereotype.Service;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 44, 'text': 'import org.springframework.beans.factory.annotation.Autowired;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 45, 'text': 'import static java.util.Collections.emptyList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 46, 'text': 'import static org.junit.Assert.*;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 354, 'text': 'assert extractor.imports == []', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 477, 'text': 'def test_extract_imports_basic(self, extractor, mock_tree, sample_java_code):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 478, 'text': '"""Test basic import extraction"""', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 479, 'text': '# Mock package and import nodes', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 483, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 484, 'text': 'mock_import_node.type = "import_declaration"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 491, 'text': 'mock_import_node,', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 496, 'text': 'with patch.object(extractor, "_extract_import_info") as mock_extract_import:', 'matches': [[51, 57], [81, 87]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 497, 'text': 'mock_import = Import(', 'matches': [[21, 27], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 501, 'text': 'raw_text="import java.util.List;",', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 504, 'text': 'mock_extract_import.return_value = mock_import', 'matches': [[29, 35], [56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 506, 'text': 'imports = extractor.extract_imports(mock_tree, sample_java_code)', 'matches': [[16, 22], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 508, 'text': 'assert isinstance(imports, list)', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 510, 'text': 'mock_extract_import.assert_called_once()', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 512, 'text': 'def test_extract_imports_with_fallback(self, extractor, mock_tree):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 513, 'text': '"""Test import extraction with regex fallback"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 514, 'text': '# Mock tree with no import nodes', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 517, 'text': '# Source code with imports', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 518, 'text': 'source_with_imports = """', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 519, 'text': 'import java.util.List;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 520, 'text': 'import static java.util.Collections.emptyList;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 521, 'text': 'import javax.annotation.*;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 524, 'text': 'with patch.object(extractor, "_extract_imports_fallback") as mock_fallback:', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 526, 'text': 'Import(', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 530, 'text': 'raw_text="import java.util.List;",', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 535, 'text': 'imports = extractor.extract_imports(mock_tree, source_with_imports)', 'matches': [[12, 18], [40, 46], [71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 537, 'text': '# Should call fallback when no imports found via tree-sitter', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 539, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1150, 'text': 'def test_extract_imports_fallback_static_imports(self, extractor):', 'matches': [[21, 27], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1151, 'text': '"""Test fallback import extraction for static imports"""', 'matches': [[25, 31], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1153, 'text': 'import static java.util.Collections.emptyList;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1154, 'text': 'import static org.junit.Assert.*;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1155, 'text': 'import static com.example.Utils.helper;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1158, 'text': 'imports = extractor._extract_imports_fallback(source_code)', 'matches': [[8, 14], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1160, 'text': 'assert len(imports) == 3', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1162, 'text': '# Check static imports', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1163, 'text': 'assert imports[0].name == "java.util.Collections"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1164, 'text': 'assert imports[0].is_static is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1165, 'text': 'assert imports[0].is_wildcard is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1167, 'text': 'assert imports[1].name == "org.junit.Assert"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1168, 'text': 'assert imports[1].is_static is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1169, 'text': 'assert imports[1].is_wildcard is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1171, 'text': 'assert imports[2].name == "com.example.Utils"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1172, 'text': 'assert imports[2].is_static is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1173, 'text': 'assert imports[2].is_wildcard is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1175, 'text': 'def test_extract_imports_fallback_normal_imports(self, extractor):', 'matches': [[21, 27], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1176, 'text': '"""Test fallback import extraction for normal imports"""', 'matches': [[25, 31], [54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1178, 'text': 'import java.util.List;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1179, 'text': 'import java.util.*;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1180, 'text': 'import javax.annotation.Nullable;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1183, 'text': 'imports = extractor._extract_imports_fallback(source_code)', 'matches': [[8, 14], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1185, 'text': 'assert len(imports) == 3', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1187, 'text': '# Check normal imports', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1188, 'text': 'assert imports[0].name == "java.util.List"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1189, 'text': 'assert imports[0].is_static is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1190, 'text': 'assert imports[0].is_wildcard is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1192, 'text': 'assert imports[1].name == "java.util"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1193, 'text': 'assert imports[1].is_static is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1194, 'text': 'assert imports[1].is_wildcard is True', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1196, 'text': 'assert imports[2].name == "javax.annotation.Nullable"', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1197, 'text': 'assert imports[2].is_static is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1198, 'text': 'assert imports[2].is_wildcard is False', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1202, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1249, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1414, 'text': 'plugin.extractor, "extract_imports"', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1415, 'text': ') as mock_imports:', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1425, 'text': 'mock_imports.return_value = []', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1434, 'text': 'assert "imports" in result', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1446, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1469, 'text': 'plugin.extractor, "extract_imports"', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1470, 'text': ') as mock_imports:', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1486, 'text': 'mock_imports.side_effect = Exception(', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1487, 'text': '"Import extraction error"', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1506, 'text': '"imports",', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1516, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_comprehensive.py', 'line': 1517, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_smart_cache_optimization.py', 'line': 9, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_smart_cache_optimization.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_smart_cache_optimization.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_smart_cache_optimization.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_smart_cache_optimization.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import SearchCache, clear_cache', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 11, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 12, 'text': 'from tree_sitter_analyzer.security import (', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 38, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_loader.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_loader.py', 'line': 13, 'text': 'from tree_sitter_analyzer.language_loader import (', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_loader.py', 'line': 90, 'text': 'def test_load_language_with_import_error():', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_language_loader.py', 'line': 91, 'text': '"""Test language loading when import fails for unknown language"""', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 6, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 10, 'text': 'from tree_sitter_analyzer.languages.java_plugin import JavaElementExtractor, JavaPlugin', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 35, 'text': 'imports = extractor.extract_imports(mock_tree, "")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 42, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 55, 'text': 'import java.util.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 93, 'text': 'import java.util.日本語;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 432, 'text': 'def test_import_extraction_with_malformed_imports(self, extractor):', 'matches': [[13, 19], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 433, 'text': '"""Test import extraction with malformed import statements"""', 'matches': [[16, 22], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 434, 'text': 'malformed_imports = """', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 435, 'text': 'import ;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 436, 'text': 'import java.util.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 437, 'text': 'import static ;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 438, 'text': 'import static java.util.Collections.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 439, 'text': 'import java..util.List;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 445, 'text': '# Should handle malformed imports gracefully', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 446, 'text': 'imports = extractor.extract_imports(mock_tree, malformed_imports)', 'matches': [[8, 14], [36, 42], [65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 447, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 449, 'text': 'def test_import_fallback_with_invalid_patterns(self, extractor):', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 450, 'text': '"""Test import fallback with invalid patterns"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 451, 'text': 'invalid_imports = """', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 452, 'text': 'import ;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 453, 'text': 'import java.util.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 454, 'text': 'import static ;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 455, 'text': 'import static java.util.Collections.;', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 458, 'text': 'imports = extractor._extract_imports_fallback(invalid_imports)', 'matches': [[8, 14], [37, 43], [62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 461, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 462, 'text': '# May contain some imports if patterns partially match', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 522, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 523, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 583, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 619, 'text': 'mock_extractor.extract_imports.side_effect = Exception(', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 620, 'text': '"Import extraction error"', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 637, 'text': '"imports",', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 692, 'text': 'imports = extractor.extract_imports(mock_tree, None)', 'matches': [[12, 18], [40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_java_plugin_edge_cases.py', 'line': 700, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 11, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 12, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 14, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 18, 'text': '# Import the startup script functions', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 19, 'text': '# Note: We need to be careful about imports since start_mcp_server.py is a script', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 34, 'text': '# Import and test the main execution logic', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 41, 'text': 'import importlib.util', 'matches': [[8, 14], [15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 43, 'text': 'mcp_spec = importlib.util.find_spec("mcp")', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 44, 'text': '# Check if MCP is available (not used in assertions but validates import logic)', 'matches': [[74, 80]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 48, 'text': 'tree_sitter_spec = importlib.util.find_spec("tree_sitter")', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 158, 'text': 'from tree_sitter_analyzer.project_detector import detect_project_root', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 185, 'text': 'ImportError("Missing dependency"),', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 198, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 200, 'text': 'from tree_sitter_analyzer.utils import setup_logger', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 303, 'text': '__import__(dep)', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 305, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 9, 'text': '# Import SafeStreamHandler directly from the main utils module', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 10, 'text': 'import importlib.util', 'matches': [[0, 6], [7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 11, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 12, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 13, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 14, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 15, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 16, 'text': 'from unittest.mock import MagicMock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 18, 'text': '# Import setup_logger from utils package', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 19, 'text': 'from tree_sitter_analyzer.utils import setup_logger', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 24, 'text': 'spec = importlib.util.spec_from_file_location("utils_module", utils_path)', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 25, 'text': 'utils_module = importlib.util.module_from_spec(spec)', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 52, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 82, 'text': '# Check handler type by class name instead of isinstance due to import differences', 'matches': [[72, 78]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 338, 'text': 'import sys', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 345, 'text': 'from io import StringIO', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_logging_configuration.py', 'line': 353, 'text': 'from io import StringIO', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 11, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 13, 'text': 'from tree_sitter_analyzer.security import SecurityValidator', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 39, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 99, 'text': '(r"import\\s+[\\w.]+", True), # Safe import pattern', 'matches': [[15, 21], [48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 267, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 15, 'text': 'from tree_sitter_analyzer.languages.python_plugin import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 19, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import, Variable', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 20, 'text': 'from tree_sitter_analyzer.plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 45, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 46, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 47, 'text': 'from typing import List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 48, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 108, 'text': 'assert hasattr(extractor, "extract_imports")', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 163, 'text': 'def test_extract_imports_success(', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 166, 'text': '"""Test successful import extraction"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 170, 'text': 'mock_query.captures.return_value = {"import.statement": []}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 172, 'text': 'imports = extractor.extract_imports(mock_tree, "test code")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 174, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 279, 'text': 'def test_extract_import_info(self, extractor: PythonElementExtractor) -> None:', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 280, 'text': '"""Test import information extraction"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 282, 'text': 'mock_node.type = "import_statement"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 292, 'text': 'result = extractor._extract_import_info(mock_node, "import os", "import")', 'matches': [[40, 46], [64, 70], [77, 83]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 295, 'text': 'assert isinstance(result, Import)', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 639, 'text': 'mock_language.side_effect = ImportError("Module not found")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 781, 'text': 'def test_python_import_variations(self, plugin: PythonPlugin) -> None:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 782, 'text': '"""Test Python import statement variations"""', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 785, 'text': '# Test different import patterns', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin.py', 'line': 786, 'text': '# Test different import patterns (simplified for testing)', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 8, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 16, 'text': 'def test_main_module_import_only(self):', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 17, 'text': '"""Test for module import only"""', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 18, 'text': '# Verify that no import errors occur', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 20, 'text': 'import tree_sitter_analyzer.__main__ # noqa: F401', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 22, 'text': 'assert True # Import successful', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 23, 'text': 'except ImportError as e:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 24, 'text': 'pytest.fail(f"Failed to import __main__ module: {e}")', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 38, 'text': 'from tree_sitter_analyzer import cli', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_main_entry.py', 'line': 41, 'text': 'except ImportError:', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_regex_checker.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_regex_checker.py', 'line': 8, 'text': 'from tree_sitter_analyzer.security import RegexSafetyChecker', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 11, 'text': 'from unittest.mock import AsyncMock, Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 308, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 331, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 3, 'text': 'Tests all major functionality including functions, classes, variables, imports,', 'matches': [[71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 7, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 11, 'text': 'from tree_sitter_analyzer.languages.python_plugin import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 15, 'text': 'from tree_sitter_analyzer.models import Class, Function, Import, Variable', 'matches': [[33, 39], [57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 38, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 39, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 40, 'text': 'from typing import List, Dict, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 41, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 103, 'text': 'assert extractor.imports == []', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 139, 'text': '# Should detect as module due to imports', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 143, 'text': 'django_code = "from django.db import models\\nclass MyModel(models.Model): pass"', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 149, 'text': 'flask_code = "from flask import Flask\\napp = Flask(__name__)"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 155, 'text': 'fastapi_code = "from fastapi import FastAPI\\napp = FastAPI()"', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 750, 'text': 'extractor.source_code = "from flask import Flask"', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 756, 'text': 'extractor.source_code = "from fastapi import APIRouter"', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 830, 'text': 'def test_extract_imports_basic(self, extractor, mock_tree):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 831, 'text': '"""Test basic import extraction"""', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 838, 'text': '# Make extract_imports use manual extraction', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 839, 'text': 'with patch.object(extractor, "_extract_imports_manual") as mock_manual:', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 840, 'text': 'mock_import = Import(', 'matches': [[17, 23], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 844, 'text': 'raw_text="import test_module",', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 847, 'text': 'mock_manual.return_value = [mock_import]', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 849, 'text': 'imports = extractor.extract_imports(mock_tree, "import test_module")', 'matches': [[12, 18], [40, 46], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 851, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 853, 'text': 'assert len(imports) >= 0', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 975, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1020, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1104, 'text': 'import queue', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1105, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1203, 'text': 'def test_plugin_extract_imports(self, plugin):', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1204, 'text': '"""Test plugin import extraction"""', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1209, 'text': 'with patch.object(plugin.extractor, "extract_imports") as mock_extract:', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1212, 'text': 'result = plugin.extract_imports(mock_tree, "test code")', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1220, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1221, 'text': 'from typing import List, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1222, 'text': 'from dataclasses import dataclass', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1275, 'text': 'imports = plugin.extract_imports(mock_tree, python_code)', 'matches': [[12, 18], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1281, 'text': 'assert isinstance(imports, list)', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1298, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1299, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1300, 'text': 'from typing import Dict, List, Optional, Union', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1301, 'text': 'from abc import ABC, abstractmethod', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1302, 'text': 'from dataclasses import dataclass, field', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1303, 'text': 'from enum import Enum', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1379, 'text': 'import asyncio', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1423, 'text': 'import asyncio', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1442, 'text': 'imports = plugin.extract_imports(mock_tree, complex_code)', 'matches': [[8, 14], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1448, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1456, 'text': 'from django.db import models', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1457, 'text': 'from django.contrib.auth.models import User', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1487, 'text': 'import', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_comprehensive.py', 'line': 1488, 'text': '# Incomplete import statement', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 10, 'text': 'import csv', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 11, 'text': 'import io', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 12, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 13, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 14, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 18, 'text': '# Import the module under test', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 19, 'text': 'from tree_sitter_analyzer.table_formatter import TableFormatter, create_table_formatter', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 35, 'text': '"imports": [', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 36, 'text': '{"statement": "import java.util.List;"},', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 37, 'text': '{"statement": "import java.util.Map;"},', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 94, 'text': '"imports": [],', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 161, 'text': '# Verify imports section', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 162, 'text': 'assert "## Imports" in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 163, 'text': 'assert "import java.util.List;" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 164, 'text': 'assert "import java.util.Map;" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 206, 'text': 'def test_format_structure_full_no_imports(', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 209, 'text': '"""Test full format without imports"""', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 211, 'text': 'data["imports"] = []', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 216, 'text': '# Should not include imports section', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 217, 'text': 'assert "## Imports" not in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 501, 'text': '"imports": None,', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 543, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 641, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 642, 'text': '{"statement": f"import com.example.Import{i};"} for i in range(50)', 'matches': [[32, 38], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_formatter_new_elements.py', 'line': 13, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_formatter_new_elements.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_formatter_new_elements.py', 'line': 17, 'text': 'from tree_sitter_analyzer.formatters.markdown_formatter import MarkdownFormatter', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 10, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 11, 'text': 'from tree_sitter_analyzer.security import SecurityValidator', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 24, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 6, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 10, 'text': 'from tree_sitter_analyzer.languages.python_plugin import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 14, 'text': 'from tree_sitter_analyzer.models import Class', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 351, 'text': 'def test_extract_imports_with_malformed_captures(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 352, 'text': '"""Test import extraction with malformed captures"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 364, 'text': 'result = extractor.extract_imports(mock_tree, "import os")', 'matches': [[35, 41], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 369, 'text': 'def test_extract_imports_with_query_exception(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 370, 'text': '"""Test import extraction when query raises exception"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 379, 'text': 'result = extractor.extract_imports(mock_tree, "import os")', 'matches': [[35, 41], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 446, 'text': 'def test_detect_file_characteristics_with_partial_imports(self, extractor):', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 447, 'text': '"""Test file characteristics detection with partial import statements"""', 'matches': [[60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 448, 'text': 'extractor.source_code = "imp" # Partial import', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 460, 'text': '("from DJANGO import", ""), # Wrong case', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 461, 'text': '("from django import", "django"), # Correct case', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 615, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_python_plugin_edge_cases.py', 'line': 616, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 9, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 14, 'text': 'from tree_sitter_analyzer.languages.markdown_plugin import (', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 19, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 113, 'text': 'def test_extract_imports_with_none_tree(self):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 114, 'text': '"""Test extract_imports with None tree"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 115, 'text': 'result = self.extractor.extract_imports(None, "[ref]: url")', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 374, 'text': 'def test_get_tree_sitter_language_import_error(self):', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 375, 'text': '"""Test get_tree_sitter_language with import error"""', 'matches': [[46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 378, 'text': '# Import happens inside the method, so we need to patch builtins.__import__', 'matches': [[10, 16], [75, 81]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 380, 'text': '"builtins.__import__",', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 381, 'text': 'side_effect=ImportError("tree_sitter_markdown not found"),', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 392, 'text': 'with patch("builtins.__import__") as mock_import:', 'matches': [[31, 37], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 393, 'text': '# Let tree_sitter import succeed, but make tsmarkdown.language() fail', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 394, 'text': 'def import_side_effect(name, *args, **kwargs):', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 399, 'text': 'return __import__(name, *args, **kwargs)', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 401, 'text': 'mock_import.side_effect = import_side_effect', 'matches': [[17, 23], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 411, 'text': 'with patch("builtins.__import__") as mock_import:', 'matches': [[31, 37], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 419, 'text': 'def import_side_effect(name, *args, **kwargs):', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 424, 'text': 'return __import__(name, *args, **kwargs)', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 426, 'text': 'mock_import.side_effect = import_side_effect', 'matches': [[17, 23], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 465, 'text': "# Patch get_query from where it's actually imported", 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 532, 'text': 'mock_extractor.extract_imports.return_value = []', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 539, 'text': 'self.plugin.extract_imports(mock_tree, "content")', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_comprehensive.py', 'line': 545, 'text': 'mock_extractor.extract_imports.assert_called_once()', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 10, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 11, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 15, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 16, 'text': 'from tree_sitter_analyzer.language_detector import detect_language_from_file', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 132, 'text': 'from typing import Optional, List', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 133, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 227, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 429, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 531, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 533, 'text': 'import psutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 10, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 14, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 18, 'text': 'from tree_sitter_analyzer.plugins.base import ElementExtractor, LanguagePlugin', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 43, 'text': "import { Component } from 'react';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 44, 'text': "import type { User } from './types';", 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 164, 'text': 'assert extractor.imports == []', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 172, 'text': 'extractor.source_code = "import React from \'react\'; export default MyComponent;"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 188, 'text': 'extractor.source_code = "import { Component } from \'@angular/core\';"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 195, 'text': 'extractor.source_code = "import Vue from \'vue\';"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 269, 'text': 'def test_extract_imports_empty_tree(self, extractor, mock_tree):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 270, 'text': '"""Test import extraction with empty tree"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 271, 'text': 'imports = extractor.extract_imports(mock_tree, "")', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 272, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 376, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 429, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 441, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 453, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 490, 'text': 'from tree_sitter_analyzer.plugins.manager import PluginManager', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 513, 'text': 'from tree_sitter_analyzer.formatters.formatter_factory import (', 'matches': [[63, 69]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 531, 'text': 'from tree_sitter_analyzer.language_detector import detector', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin.py', 'line': 543, 'text': 'from tree_sitter_analyzer.language_loader import get_loader', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_new_elements.py', 'line': 13, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_new_elements.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_new_elements.py', 'line': 17, 'text': 'from tree_sitter_analyzer.languages.markdown_plugin import (', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_markdown_plugin_new_elements.py', 'line': 511, 'text': 'from tree_sitter_analyzer.core.analysis_engine import (', 'matches': [[71, 77]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 11, 'text': 'from tree_sitter_analyzer.formatters.base_formatter import BaseTableFormatter', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 12, 'text': 'from tree_sitter_analyzer.formatters.typescript_formatter import (', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 135, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 139, 'text': '"is_type_import": False,', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 145, 'text': '"is_type_import": True,', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 204, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 219, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 424, 'text': 'assert formatter._get_element_type_name({"element_type": "import"}) == "Import"', 'matches': [[66, 72], [80, 86]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 466, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 476, 'text': 'def test_format_with_imports(self, formatter, sample_data):', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 477, 'text': '"""Test formatting with imports section"""', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 480, 'text': 'assert "## Imports" in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 482, 'text': 'assert "import Component from react;" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 483, 'text': 'assert "import type User from ./types;" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 513, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 15, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 16, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 301, 'text': 'def test_extract_import_info_simple(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 302, 'text': '"""Test simple import extraction"""', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 303, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 304, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 305, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 306, 'text': 'mock_import_node.end_point = (0, 30)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 307, 'text': 'mock_import_node.children = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 309, 'text': '# Mock import clause', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 310, 'text': 'import_clause = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 311, 'text': 'import_clause.type = "import_clause"', 'matches': [[8, 14], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 318, 'text': 'mock_import_node.children = [import_clause, string_literal]', 'matches': [[13, 19], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 322, 'text': 'mock_import_node: "import { Component } from \'./module\'",', 'matches': [[21, 27], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 323, 'text': 'import_clause: "{ Component }",', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 327, 'text': 'extractor._extract_import_names = Mock(return_value=["Component"])', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 329, 'text': 'result = extractor._extract_import_info_simple(mock_import_node)', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 333, 'text': 'assert result.imported_names == ["Component"]', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 336, 'text': 'def test_extract_import_info_simple_type_import(self, extractor):', 'matches': [[21, 27], [45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 337, 'text': '"""Test type-only import extraction"""', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 338, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 339, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 340, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 341, 'text': 'mock_import_node.end_point = (0, 35)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 342, 'text': 'mock_import_node.children = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 343, 'text': 'mock_import_node.text = "import type { User } from \'./types\'"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 346, 'text': 'return_value="import type { User } from \'./types\'"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 348, 'text': 'extractor._extract_import_names = Mock(return_value=["User"])', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 350, 'text': '# Mock import clause', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 351, 'text': 'import_clause = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 352, 'text': 'import_clause.type = "import_clause"', 'matches': [[8, 14], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 359, 'text': 'mock_import_node.children = [import_clause, string_literal]', 'matches': [[13, 19], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 361, 'text': 'result = extractor._extract_import_info_simple(mock_import_node)', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 365, 'text': 'assert result.imported_names == ["User"]', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 366, 'text': '# Note: is_type_import is not available in the Import model', 'matches': [[24, 30], [55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 367, 'text': 'assert "type" in result.raw_text # Check if type import is detected in raw text', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 369, 'text': 'def test_extract_import_names(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 370, 'text': '"""Test import names extraction"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 371, 'text': '# Test named imports', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 373, 'text': 'mock_clause.type = "import_clause"', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 375, 'text': 'named_imports = Mock()', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 376, 'text': 'named_imports.type = "named_imports"', 'matches': [[14, 20], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 378, 'text': 'import_spec1 = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 379, 'text': 'import_spec1.type = "import_specifier"', 'matches': [[8, 14], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 381, 'text': 'import_spec2 = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 382, 'text': 'import_spec2.type = "import_specifier"', 'matches': [[8, 14], [29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 384, 'text': 'named_imports.children = [import_spec1, import_spec2]', 'matches': [[14, 20], [34, 40], [48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 385, 'text': 'mock_clause.children = [named_imports]', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 389, 'text': 'import_spec1: "Component",', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 390, 'text': 'import_spec2: "useState as state",', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 394, 'text': 'result = extractor._extract_import_names(', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 395, 'text': 'mock_clause, "import { Component, useState as state } from \'react\'"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 402, 'text': 'def test_extract_import_names_default(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 403, 'text': '"""Test default import names extraction"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 405, 'text': 'mock_clause.type = "import_clause"', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 413, 'text': 'result = extractor._extract_import_names(', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 414, 'text': 'mock_clause, "import React from \'react\'"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 420, 'text': 'def test_extract_import_names_namespace(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 421, 'text': '"""Test namespace import names extraction"""', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 423, 'text': 'mock_clause.type = "import_clause"', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 425, 'text': 'namespace_import = Mock()', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 426, 'text': 'namespace_import.type = "namespace_import"', 'matches': [[18, 24], [43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 432, 'text': "namespace_import.children = [Mock(), identifier] # First child is 'as' keyword", 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 433, 'text': 'mock_clause.children = [namespace_import]', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 435, 'text': 'result = extractor._extract_import_names(', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 436, 'text': 'mock_clause, "import * as Utils from \'./utils\'"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 442, 'text': 'def test_extract_dynamic_import(self, extractor):', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 443, 'text': '"""Test dynamic import extraction"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 453, 'text': '# Mock import identifier', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 454, 'text': 'import_id = Mock()', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 455, 'text': 'import_id.type = "import"', 'matches': [[8, 14], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 466, 'text': 'call_expr.children = [import_id, arguments]', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 470, 'text': 'return_value="import(\'./dynamic-module\')"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 473, 'text': 'result = extractor._extract_dynamic_import(mock_expr_stmt)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 478, 'text': 'assert "dynamic_import" in result.imported_names', 'matches': [[24, 30], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 530, 'text': 'assert result[0].imported_names == ["fs"]', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_comprehensive.py', 'line': 905, 'text': '"Import/export statements",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 4, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 5, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 6, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 11, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 450, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_async_integration.py', 'line': 499, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 8, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_comprehensive.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.utils.gitignore_detector import (', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 15, 'text': 'from tree_sitter_analyzer.formatters.formatter_factory import TableFormatterFactory', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 16, 'text': 'from tree_sitter_analyzer.language_detector import detector', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 17, 'text': 'from tree_sitter_analyzer.language_loader import get_loader', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 18, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import TypeScriptPlugin', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 19, 'text': 'from tree_sitter_analyzer.plugins.manager import PluginManager', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 155, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 159, 'text': '"is_type_import": False,', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 244, 'text': 'common_queries = ["function", "class", "variable", "import", "export"]', 'matches': [[60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 288, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[63, 69]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 304, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import (', 'matches': [[62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 311, 'text': 'extractor.source_code = "import React from \'react\'; export default Component;"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 323, 'text': 'extractor.source_code = "import { Component } from \'@angular/core\';"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 329, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import (', 'matches': [[62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 370, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 448, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 15, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 16, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 406, 'text': 'def test_extract_import_info_simple_no_source(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 407, 'text': '"""Test import extraction with no source string"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 408, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 409, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 410, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 411, 'text': 'mock_import_node.end_point = (0, 20)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 412, 'text': 'mock_import_node.children = [] # No string literal child', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 414, 'text': 'extractor._get_node_text_optimized = Mock(return_value="import { Component }")', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 416, 'text': 'result = extractor._extract_import_info_simple(mock_import_node)', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 419, 'text': 'def test_extract_import_info_simple_error_handling(self, extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 420, 'text': '"""Test import extraction with error handling"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 421, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 422, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 423, 'text': 'mock_import_node.end_point = (0, 20)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 428, 'text': 'result = extractor._extract_import_info_simple(mock_import_node)', 'matches': [[36, 42], [60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 431, 'text': 'def test_extract_dynamic_import_no_call_expression(self, extractor):', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 432, 'text': '"""Test dynamic import extraction with no call expression"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 437, 'text': 'result = extractor._extract_dynamic_import(mock_expr_stmt)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 440, 'text': 'def test_extract_dynamic_import_no_import_identifier(self, extractor):', 'matches': [[29, 35], [39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 441, 'text': '"""Test dynamic import extraction with no import identifier"""', 'matches': [[24, 30], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 445, 'text': '# Mock call expression without import identifier', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 448, 'text': 'call_expr.children = [] # No import identifier', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 452, 'text': 'result = extractor._extract_dynamic_import(mock_expr_stmt)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 455, 'text': 'def test_extract_dynamic_import_error_handling(self, extractor):', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 456, 'text': '"""Test dynamic import extraction with error handling"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 462, 'text': 'result = extractor._extract_dynamic_import(mock_expr_stmt)', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 584, 'text': 'import asyncio', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 609, 'text': 'import asyncio', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_languages\\test_typescript_plugin_edge_cases.py', 'line': 637, 'text': 'import asyncio', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 2, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 4, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 7, 'text': 'from tree_sitter_analyzer.mcp.tools.list_files_tool import ListFilesTool', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 8, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 196, 'text': 'f1.write_text("import os\\n", encoding="utf-8")', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 198, 'text': 'f2.write_text("import sys\\n", encoding="utf-8")', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 204, 'text': '"lines": {"text": "import os\\n"},', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 206, 'text': '"submatches": [{"match": {"text": "import"}, "start": 0, "end": 6}],', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 221, 'text': '"query": "import",', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 285, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import parse_rg_count_output', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 325, 'text': '{"roots": [str(tmp_path)], "query": "import", "count_only_matches": True}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 373, 'text': '{"roots": [str(tmp_path)], "query": "import", "count_only_matches": True}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 390, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import build_rg_command', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 452, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import summarize_search_results', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 456, 'text': '{"file": "file1.py", "line": 10, "text": "import os"},', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 457, 'text': '{"file": "file1.py", "line": 20, "text": "import sys"},', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 458, 'text': '{"file": "file1.py", "line": 30, "text": "import json"},', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 459, 'text': '{"file": "file2.py", "line": 5, "text": "import re"},', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 460, 'text': '{"file": "file2.py", "line": 15, "text": "import time"},', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 461, 'text': '{"file": "file3.py", "line": 1, "text": "import logging"},', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 525, 'text': '"lines": {"text": "import os\\n"},', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 527, 'text': '"submatches": [{"match": {"text": "import"}, "start": 0, "end": 6}],', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 534, 'text': '"lines": {"text": "import sys\\n"},', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 536, 'text': '"submatches": [{"match": {"text": "import"}, "start": 0, "end": 6}],', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 552, 'text': '{"roots": [str(tmp_path)], "query": "import", "summary_only": True}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 729, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import build_fd_command', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 798, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import parse_rg_count_output', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 830, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import summarize_search_results', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 840, 'text': 'matches = [{"file": "test.py", "line": 1, "text": "import os"}]', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 879, 'text': 'import os', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 980, 'text': 'import json', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1054, 'text': 'test_file.write_text("import os\\n", encoding="utf-8")', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1060, 'text': '"lines": {"text": "import os\\n"},', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1062, 'text': '"submatches": [{"match": {"text": "import"}, "start": 0, "end": 6}],', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1074, 'text': 'result = await tool.execute({"files": [str(test_file)], "query": "import"})', 'matches': [[70, 76]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1442, 'text': 'b\'{"type":"match","data":{"path":{"text":"test.py"},"lines":{"text":"import"},"line_number":1,"submatches":[]}}\\n\',', 'matches': [[85, 91]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1453, 'text': '"query": "import",', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1582, 'text': '\'{"type":"match","data":{"path":{"text":"file1.py"},"lines":{"text":"import os"},"line_number":1,"submatches":[]}}\',', 'matches': [[85, 91]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1583, 'text': '\'{"type":"match","data":{"path":{"text":"file1.py"},"lines":{"text":"import sys"},"line_number":2,"submatches":[]}}\',', 'matches': [[85, 91]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1584, 'text': '\'{"type":"match","data":{"path":{"text":"file2.py"},"lines":{"text":"import json"},"line_number":1,"submatches":[]}}\',', 'matches': [[85, 91]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1593, 'text': '{"roots": [str(tmp_path)], "query": "import", "summary_only": True}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 1794, 'text': 'from tree_sitter_analyzer.mcp.tools.fd_rg_utils import (', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 2405, 'text': '(tmp_path / "src" / "main.py").write_text("import os")', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 2407, 'text': '(tmp_path / "tests" / "test_main.py").write_text("import os")', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 2438, 'text': '"query": "import",', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3099, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3165, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3723, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3830, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3877, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3923, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 3969, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_fd_rg_tools.py', 'line': 4010, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 6, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 7, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 9, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.utils.gitignore_detector import (', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 494, 'text': 'import threading', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_gitignore_detector_edge_cases.py', 'line': 531, 'text': 'import threading', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 15, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.universal_analyze_tool import UniversalAnalyzeTool', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 99, 'text': '("incomplete_import.py", "import"),', 'matches': [[25, 31], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 294, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 372, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 373, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 374, 'text': 'from typing import List, Dict, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 421, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 422, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 12, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_file_output_feature.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 6, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 7, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 8, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 9, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 10, 'text': 'from unittest.mock import AsyncMock, Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.server import (', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 78, 'text': 'side_effect=ImportError,', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_comprehensive.py', 'line': 936, 'text': 'import inspect', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 8, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 10, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 12, 'text': '# Mock imports removed - not used in this file', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 18, 'text': '# Import the module under test', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 19, 'text': '# Import LoggingContext - it should be available', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 20, 'text': 'from tree_sitter_analyzer.utils import (', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_query_tool_definition.py', 'line': 8, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_query_tool_definition.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_query_tool_definition.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_query_tool_definition.py', 'line': 88, 'text': 'mock_get.return_value = ["methods", "class", "imports"]', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_query_tool_definition.py', 'line': 92, 'text': 'assert result == ["methods", "class", "imports"]', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_query_tool_definition.py', 'line': 104, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 6, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 7, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 9, 'text': 'from unittest.mock import AsyncMock, Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.server import (', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp\\test_server_edge_cases.py', 'line': 617, 'text': 'from tree_sitter_analyzer.mcp.server import main_sync', 'matches': [[57, 63]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 6, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 7, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 8, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 9, 'text': 'import unittest.mock', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 11, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 13, 'text': 'from tree_sitter_analyzer.utils import (', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 36, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase1_basic.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase1_basic.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase1_basic.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase1_basic.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase1_basic.py', 'line': 188, 'text': 'query="import",', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase1_basic.py', 'line': 308, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import clear_cache', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 24, 'text': 'query="import",', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 54, 'text': 'query="import",', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 300, 'text': '[jline(str(f1), "import os\\n", 1), jline(str(f2), "import sys\\n", 1)]', 'matches': [[25, 31], [59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase2_filters_perf.py', 'line': 311, 'text': '{"roots": [str(tmp_path)], "query": "import", "summary_only": True}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase3_advanced_edges.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase3_advanced_edges.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase3_advanced_edges.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase3_advanced_edges.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase3_advanced_edges.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase4_regex_perf.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase4_regex_perf.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase4_regex_perf.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase4_regex_perf.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase4_regex_perf.py', 'line': 294, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 24, 'text': 'f1.write_text("import os\\n", encoding="utf-8")', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 25, 'text': 'f2.write_text("import sys\\n", encoding="utf-8")', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 31, 'text': '"lines": {"text": "import os\\n"},', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 55, 'text': '"query": "import",', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 68, 'text': 'f.write_text("import os\\n", encoding="utf-8")', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 74, 'text': '"lines": {"text": "import os\\n"},', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase5_integration.py', 'line': 91, 'text': '{"roots": [str(tmp_path)], "query": "import", "follow_symlinks": True}', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase6_fs_encoding.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase6_fs_encoding.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase6_fs_encoding.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase6_fs_encoding.py', 'line': 376, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import get_default_cache', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase7_integration_edges.py', 'line': 1, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase7_integration_edges.py', 'line': 3, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase7_integration_edges.py', 'line': 5, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase7_integration_edges.py', 'line': 6, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_rg_phase7_integration_edges.py', 'line': 193, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 8, 'text': 'from unittest.mock import AsyncMock, Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.server import (', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 34, 'text': 'from tree_sitter_analyzer.mcp import MCP_INFO', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 75, 'text': 'import asyncio', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 141, 'text': 'import asyncio', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 203, 'text': 'import asyncio', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 231, 'text': 'import asyncio', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 253, 'text': 'import asyncio', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 311, 'text': '# Just test that the module can be imported and MCP_AVAILABLE is a boolean', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server.py', 'line': 312, 'text': 'from tree_sitter_analyzer.mcp.server import MCP_AVAILABLE', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 11, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 12, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 13, 'text': 'from unittest.mock import AsyncMock, Mock', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 167, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import handle_mcp_errors', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_server_initialization.py', 'line': 187, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import handle_mcp_errors', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 11, 'text': 'from unittest.mock import AsyncMock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.find_and_grep_tool import FindAndGrepTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 46, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 47, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 48, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 95, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 96, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 542, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 781, 'text': 'import time', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_integration.py', 'line': 802, 'text': 'import asyncio', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 7, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 9, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 11, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.tools.universal_analyze_tool import UniversalAnalyzeTool', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 41, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_mcp_tools_path_resolution.py', 'line': 179, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_models_extended.py', 'line': 9, 'text': 'from tree_sitter_analyzer.models import (', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_models_extended.py', 'line': 300, 'text': 'from tree_sitter_analyzer.models import Function, Variable', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_output_manager.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_output_manager.py', 'line': 10, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_output_manager.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_output_manager.py', 'line': 14, 'text': '# Import the module under test', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_output_manager.py', 'line': 15, 'text': 'from tree_sitter_analyzer.output_manager import (', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_reading.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_reading.py', 'line': 7, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_reading.py', 'line': 8, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_reading.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_reading.py', 'line': 15, 'text': 'from tree_sitter_analyzer.file_handler import read_file_lines_range, read_file_partial', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 12, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 19, 'text': 'from tree_sitter_analyzer.cli.commands.partial_read_command import PartialReadCommand', 'matches': [[60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 47, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 53, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 63, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 73, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 83, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 93, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 110, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 127, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 144, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 155, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 165, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 175, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 195, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 213, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 230, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 247, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 260, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 275, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 290, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 305, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 319, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_partial_read_command_validation.py', 'line': 336, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver.py', 'line': 11, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver.py', 'line': 12, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.utils.path_resolver import PathResolver, resolve_path', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 6, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 7, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 10, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.utils.path_resolver import PathResolver, resolve_path', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 30, 'text': 'import ctypes', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 31, 'text': 'from ctypes import wintypes', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_path_resolver_extended.py', 'line': 52, 'text': 'except (ImportError, OSError, AttributeError):', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 15, 'text': 'from tree_sitter_analyzer.languages.java_plugin import JavaElementExtractor, JavaPlugin', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 16, 'text': 'from tree_sitter_analyzer.languages.javascript_plugin import (', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 20, 'text': 'from tree_sitter_analyzer.plugins.manager import PluginManager', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 113, 'text': 'assert extractor.imports == []', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 164, 'text': 'def test_extract_imports_with_mock_tree(mocker):', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 165, 'text': '"""Test import extraction with mock tree"""', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 170, 'text': 'source_code = "import java.util.List;"', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 172, 'text': 'imports = extractor.extract_imports(mock_tree, source_code)', 'matches': [[4, 10], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 174, 'text': 'assert isinstance(imports, list)', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 184, 'text': 'assert hasattr(extractor, "extract_imports")', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 198, 'text': 'imports = extractor.extract_imports(mock_tree, source_code)', 'matches': [[4, 10], [32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins.py', 'line': 203, 'text': 'assert isinstance(imports, list)', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 9, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 13, 'text': 'from tree_sitter_analyzer.plugins.base import LanguagePlugin', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 14, 'text': 'from tree_sitter_analyzer.plugins.manager import PluginManager', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 38, 'text': 'from tree_sitter_analyzer.models import AnalysisResult', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 114, 'text': 'with patch("importlib.metadata.entry_points") as mock_iter:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 130, 'text': 'with patch("importlib.metadata.entry_points") as mock_iter:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 145, 'text': 'patch("importlib.util.spec_from_file_location") as mock_spec,', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 146, 'text': 'patch("importlib.util.module_from_spec") as mock_module,', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 395, 'text': 'def test_load_plugins_with_import_error(', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 398, 'text': '"""Test plugin loading with import errors"""', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 399, 'text': 'with patch("importlib.metadata.entry_points") as mock_iter:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 400, 'text': 'mock_iter.side_effect = ImportError("pkg_resources not available")', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 404, 'text': '# Should handle import errors gracefully', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins\\test_manager.py', 'line': 415, 'text': 'with patch("importlib.metadata.entry_points") as mock_iter:', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 8, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 12, 'text': 'from tree_sitter_analyzer.plugins.base import (', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 76, 'text': 'assert "import" in types', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 202, 'text': 'def test_extract_imports(', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 205, 'text': '"""Test extract_imports method"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 206, 'text': '# Create mock import node', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 207, 'text': 'mock_import_node = Mock()', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 208, 'text': 'mock_import_node.type = "import_statement"', 'matches': [[13, 19], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 209, 'text': 'mock_import_node.start_point = (0, 0)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 210, 'text': 'mock_import_node.end_point = (0, 15)', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 211, 'text': 'mock_import_node.start_byte = 0', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 212, 'text': 'mock_import_node.end_byte = 15', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 213, 'text': 'mock_import_node.children = []', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 215, 'text': 'mock_tree.root_node.children = [mock_import_node]', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 217, 'text': 'source_code = "import os"', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 218, 'text': 'imports = extractor.extract_imports(mock_tree, source_code)', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 220, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 269, 'text': 'def test_is_import_node(self, extractor: DefaultExtractor) -> None:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 270, 'text': '"""Test _is_import_node method"""', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 271, 'text': 'assert extractor._is_import_node("import_statement") is True', 'matches': [[29, 35], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 272, 'text': 'assert extractor._is_import_node("import_declaration") is True', 'matches': [[29, 35], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 273, 'text': 'assert extractor._is_import_node("include_statement") is True', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 274, 'text': 'assert extractor._is_import_node("function_definition") is False', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 275, 'text': 'assert extractor._is_import_node("class") is False', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 453, 'text': 'imports = extractor.extract_imports(mock_tree, source_code)', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_base.py', 'line': 460, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 15, 'text': 'from tree_sitter_analyzer.plugins import DefaultExtractor, DefaultLanguagePlugin', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 16, 'text': 'from tree_sitter_analyzer.plugins.manager import PluginManager', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 121, 'text': 'def test_extract_imports_with_valid_tree(self, mocker, default_extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 122, 'text': '"""Test import extraction with valid tree"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 125, 'text': 'mock_root.type = "import_statement"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 131, 'text': 'source_code = "import { test } from \'module\';"', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 133, 'text': 'imports = default_extractor.extract_imports(mock_tree, source_code)', 'matches': [[8, 14], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 135, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 137, 'text': 'def test_extract_imports_with_exception(self, mocker, default_extractor):', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 138, 'text': '"""Test import extraction with exception"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 142, 'text': 'source_code = "import { test } from \'module\';"', 'matches': [[23, 29]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 144, 'text': 'imports = default_extractor.extract_imports(mock_tree, source_code)', 'matches': [[8, 14], [44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 146, 'text': 'assert imports == []', 'matches': [[15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 209, 'text': 'def test_traverse_for_imports_with_nested_nodes(self, mocker, default_extractor):', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 210, 'text': '"""Test import traversal with nested nodes"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 212, 'text': 'mock_node.type = "import_statement"', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 222, 'text': 'imports = []', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 223, 'text': 'lines = ["import { test } from \'module\';"]', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 225, 'text': 'default_extractor._traverse_for_imports(mock_node, imports, lines)', 'matches': [[40, 46], [59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_coverage.py', 'line': 227, 'text': 'assert len(imports) == 1', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_fixed.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_fixed.py', 'line': 15, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_fixed.py', 'line': 17, 'text': 'from tree_sitter_analyzer.languages.java_plugin import JavaElementExtractor', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_plugins_fixed.py', 'line': 18, 'text': 'from tree_sitter_analyzer.models import Class, Function', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 8, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 9, 'text': 'import shutil', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 10, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 11, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 12, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 15, 'text': 'from tree_sitter_analyzer.project_detector import (', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 35, 'text': 'import ctypes', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 36, 'text': 'from ctypes import wintypes', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_project_detector.py', 'line': 57, 'text': 'except (ImportError, OSError, AttributeError):', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_python_plugin_coverage.py', 'line': 8, 'text': 'from unittest.mock import MagicMock', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_python_plugin_coverage.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_python_plugin_coverage.py', 'line': 12, 'text': 'from tree_sitter_analyzer.languages.python_plugin import (', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_python_plugin_coverage.py', 'line': 62, 'text': 'assert hasattr(extractor, "extract_imports")', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_python_plugin_coverage.py', 'line': 73, 'text': 'imports = extractor.extract_imports(mock_tree, mock_language)', 'matches': [[8, 14], [36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_python_plugin_coverage.py', 'line': 78, 'text': 'assert isinstance(imports, list)', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_java.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_java.py', 'line': 8, 'text': 'from tree_sitter_analyzer.queries.java import (', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_java.py', 'line': 94, 'text': 'essential_queries = ["class", "method", "field", "import", "package"]', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_java.py', 'line': 106, 'text': 'essential_queries = ["class", "method", "field", "import", "package"]', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_java.py', 'line': 162, 'text': '"import_detailed",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 8, 'text': 'from tree_sitter_analyzer.queries.javascript import (', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 14, 'text': 'IMPORTS,', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 64, 'text': 'essential_queries = ["functions", "classes", "variables", "imports", "exports"]', 'matches': [[67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 74, 'text': 'constants = [FUNCTIONS, CLASSES, VARIABLES, IMPORTS, EXPORTS, OBJECTS, COMMENTS]', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 98, 'text': 'def test_imports_query(self) -> None:', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 99, 'text': '"""Test imports query content"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 100, 'text': 'assert "import_statement" in IMPORTS', 'matches': [[16, 22], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 101, 'text': 'assert "import_clause" in IMPORTS', 'matches': [[16, 22], [34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 102, 'text': 'assert "@import" in IMPORTS', 'matches': [[17, 23], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript.py', 'line': 137, 'text': 'assert ALL_QUERIES["imports"]["query"] == IMPORTS', 'matches': [[28, 34], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 11, 'text': 'from tree_sitter_analyzer.queries.javascript import (', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 52, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 152, 'text': 'legacy_queries = ["functions", "classes", "variables", "imports", "exports"]', 'matches': [[64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 234, 'text': 'def test_import_export_queries_comprehensive(self) -> None:', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 235, 'text': '"""Test comprehensive import/export query coverage"""', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 236, 'text': 'import_export_queries = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 237, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 238, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 239, 'text': '"import_default",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 240, 'text': '"import_named",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 241, 'text': '"import_namespace",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 242, 'text': '"dynamic_import",', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 249, 'text': 'for query_name in import_export_queries:', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 254, 'text': 'if "import" in query_name:', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 255, 'text': 'assert "import" in query', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 261, 'text': 'assert "named_imports" in query or "export_clause" in query', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_enhanced.py', 'line': 461, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 12, 'text': 'from tree_sitter_analyzer.queries import javascript as js_queries', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 77, 'text': 'def test_import_export_queries(self):', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 78, 'text': '"""Test import/export query coverage"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 79, 'text': 'import_export_queries = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 80, 'text': '"import",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 81, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 82, 'text': '"import_default",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 83, 'text': '"import_named",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 84, 'text': '"import_namespace",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 90, 'text': 'for query_name in import_export_queries:', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 245, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_javascript_extended.py', 'line': 364, 'text': 'common_features = ["functions", "classes", "variables", "imports", "exports"]', 'matches': [[65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_markdown.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_markdown.py', 'line': 10, 'text': 'from tree_sitter_analyzer.queries.markdown import (', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 8, 'text': 'from tree_sitter_analyzer.queries.python import (', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 13, 'text': 'IMPORTS,', 'matches': [[4, 10]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 62, 'text': 'essential_queries = ["functions", "classes", "variables", "imports", "comments"]', 'matches': [[67, 73]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 72, 'text': 'constants = [FUNCTIONS, CLASSES, VARIABLES, IMPORTS, COMMENTS]', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 92, 'text': 'def test_imports_query(self) -> None:', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 93, 'text': '"""Test imports query content"""', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 94, 'text': 'assert "import_statement" in IMPORTS', 'matches': [[16, 22], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 95, 'text': 'assert "@import" in IMPORTS', 'matches': [[17, 23], [28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 118, 'text': 'assert ALL_QUERIES["imports"]["query"] == IMPORTS', 'matches': [[28, 34], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 131, 'text': '# Imports should handle from imports', 'matches': [[10, 16], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 132, 'text': 'if "import_from_statement" in IMPORTS:', 'matches': [[12, 18], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_python.py', 'line': 133, 'text': 'assert "import_from_statement" in IMPORTS', 'matches': [[20, 26], [46, 52]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 11, 'text': 'from tree_sitter_analyzer.queries import typescript as ts_queries', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 53, 'text': 'def test_imports_query_exists(self):', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 54, 'text': '"""Test that IMPORTS query is defined"""', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 55, 'text': 'assert hasattr(ts_queries, "IMPORTS")', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 56, 'text': 'assert isinstance(ts_queries.IMPORTS, str)', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 57, 'text': 'assert len(ts_queries.IMPORTS.strip()) > 0', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 119, 'text': '"imports",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 205, 'text': 'def test_imports_query_patterns(self):', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 206, 'text': '"""Test that IMPORTS query contains expected patterns"""', 'matches': [[21, 27]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 207, 'text': 'imports_query = ts_queries.IMPORTS', 'matches': [[8, 14], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 209, 'text': '# Should contain import patterns', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 210, 'text': 'assert "import_statement" in imports_query', 'matches': [[16, 22], [37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 213, 'text': 'assert "@import.source" in imports_query', 'matches': [[17, 23], [35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 214, 'text': 'assert "@import.name" in imports_query', 'matches': [[17, 23], [33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript.py', 'line': 372, 'text': '"imports": ["@import."],', 'matches': [[13, 19], [26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 12, 'text': 'from tree_sitter_analyzer.queries import typescript as ts_queries', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 55, 'text': 'def test_new_import_queries(self):', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 56, 'text': '"""Test new import-specific queries"""', 'matches': [[20, 26]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 57, 'text': 'import_queries = [', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 58, 'text': '"import_statement",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 59, 'text': '"type_import",', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 60, 'text': '"import_type",', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 64, 'text': 'for query_name in import_queries:', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 261, 'text': '# Skip parentheses check for imports query (known issue)', 'matches': [[41, 47]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 262, 'text': 'if query_name != "imports":', 'matches': [[30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_queries_typescript_extended.py', 'line': 434, 'text': '"imports": ["import_statement", "type_import"],', 'matches': [[13, 19], [25, 31], [50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 9, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 14, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 92, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 93, 'text': 'from typing import List', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 280, 'text': '# Test import queries', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 281, 'text': 'import_results = await query_service.execute_query(', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 282, 'text': 'temp_file, "python", query_key="import"', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 284, 'text': 'imports_results = await query_service.execute_query(', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 285, 'text': 'temp_file, "python", query_key="imports"', 'matches': [[48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 288, 'text': 'assert import_results is not None, "import query should return results"', 'matches': [[19, 25], [48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 289, 'text': 'assert imports_results is not None, "imports query should return results"', 'matches': [[19, 25], [49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 290, 'text': 'assert len(import_results) > 0, "Should find Python imports"', 'matches': [[23, 29], [64, 70]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_code_cross_language_compatibility.py', 'line': 291, 'text': 'assert len(imports_results) > 0, "Should find Python imports"', 'matches': [[23, 29], [65, 71]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_library_coverage.py', 'line': 8, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_library_coverage.py', 'line': 10, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_library_coverage.py', 'line': 15, 'text': 'from tree_sitter_analyzer.query_loader import get_query, get_query_loader, list_queries', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_library_coverage.py', 'line': 88, 'text': '"import",', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 6, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 11, 'text': 'from tree_sitter_analyzer.query_loader import (', 'matches': [[39, 45]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 56, 'text': 'expected_queries = ["functions", "classes", "variables", "imports"]', 'matches': [[62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 68, 'text': 'expected_queries = ["functions", "classes", "imports", "decorators"]', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 212, 'text': 'def test_load_language_queries_import_error(mocker):', 'matches': [[31, 37]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 213, 'text': '"""Test handling of import errors when loading queries"""', 'matches': [[24, 30]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 214, 'text': 'mock_import = mocker.patch("importlib.import_module")', 'matches': [[9, 15], [32, 38], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 215, 'text': 'mock_import.side_effect = ImportError("Module not found")', 'matches': [[9, 15], [30, 36]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 231, 'text': 'mock_import = mocker.patch("importlib.import_module")', 'matches': [[9, 15], [32, 38], [42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_loader.py', 'line': 232, 'text': 'mock_import.return_value = mock_module', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_service.py', 'line': 9, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_service.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_service.py', 'line': 13, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 12, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 14, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 35, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 36, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 37, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 77, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 78, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 188, 'text': 'elif query_type == "imports":', 'matches': [[28, 34]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 191, 'text': '"capture_name": "import",', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 192, 'text': '"content": "import os",', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 195, 'text': '"node_type": "import_statement",', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 198, 'text': '"capture_name": "import",', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 199, 'text': '"content": "import sys",', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_query_tool_file_output.py', 'line': 202, 'text': '"node_type": "import_statement",', 'matches': [[34, 40]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 9, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 10, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 11, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 12, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 14, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 21, 'text': 'from tree_sitter_analyzer.cli.commands.base_command import BaseCommand', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 54, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 60, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 77, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 124, 'text': '# Import and call main to trigger environment variable setting', 'matches': [[26, 32]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 125, 'text': 'from tree_sitter_analyzer.cli_main import main', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 146, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 169, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 186, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 226, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 243, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_quiet_option.py', 'line': 260, 'text': 'from tree_sitter_analyzer.cli_main import create_argument_parser', 'matches': [[43, 49]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 15, 'text': 'from tree_sitter_analyzer.exceptions import FileHandlingError, SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 357, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 408, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 409, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_extended.py', 'line': 410, 'text': 'from typing import List, Dict', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 9, 'text': 'import json', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 35, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 36, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 37, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 78, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 79, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_read_partial_tool_file_output.py', 'line': 406, 'text': 'from unittest.mock import patch', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_cache.py', 'line': 8, 'text': 'import time', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_cache.py', 'line': 9, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_cache.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_cache.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_cache.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import (', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_content_parallel.py', 'line': 6, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_content_parallel.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_content_parallel.py', 'line': 10, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_search_content_parallel.py', 'line': 11, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 12, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 14, 'text': 'from tree_sitter_analyzer.cli.commands.base_command import BaseCommand', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 15, 'text': 'from tree_sitter_analyzer.cli.commands.query_command import QueryCommand', 'matches': [[53, 59]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 16, 'text': 'from tree_sitter_analyzer.core.analysis_engine import get_analysis_engine', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.analyze_scale_tool import AnalyzeScaleTool', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 18, 'text': 'from tree_sitter_analyzer.mcp.tools.read_partial_tool import ReadPartialTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 19, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 20, 'text': 'from tree_sitter_analyzer.mcp.tools.universal_analyze_tool import UniversalAnalyzeTool', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 21, 'text': 'from tree_sitter_analyzer.security import SecurityValidator', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 30, 'text': 'from tree_sitter_analyzer.core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 53, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 80, 'text': 'from tree_sitter_analyzer.core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 147, 'text': 'from tree_sitter_analyzer.core.analysis_engine import UnifiedAnalysisEngine', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 182, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 205, 'text': 'from argparse import Namespace', 'matches': [[22, 28]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 276, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 294, 'text': 'import logging', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security_integration.py', 'line': 295, 'text': 'from io import StringIO', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 11, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 12, 'text': 'from tree_sitter_analyzer.security import ProjectBoundaryManager', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 33, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_boundary_manager.py', 'line': 113, 'text': 'import shutil', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 11, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 12, 'text': 'from tree_sitter_analyzer.security import (', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_integration.py', 'line': 38, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_smart_cache_optimization.py', 'line': 9, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_smart_cache_optimization.py', 'line': 11, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_smart_cache_optimization.py', 'line': 13, 'text': 'from tree_sitter_analyzer.mcp.tools import fd_rg_utils', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_smart_cache_optimization.py', 'line': 14, 'text': 'from tree_sitter_analyzer.mcp.tools.search_content_tool import SearchContentTool', 'matches': [[56, 62]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_smart_cache_optimization.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.utils.search_cache import SearchCache, clear_cache', 'matches': [[49, 55]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 10, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 11, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 12, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 13, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 14, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 18, 'text': '# Import the startup script functions', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 19, 'text': '# Note: We need to be careful about imports since start_mcp_server.py is a script', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 34, 'text': '# Import and test the main execution logic', 'matches': [[10, 16]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 41, 'text': 'import importlib.util', 'matches': [[8, 14], [15, 21]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 43, 'text': 'mcp_spec = importlib.util.find_spec("mcp")', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 44, 'text': '# Check if MCP is available (not used in assertions but validates import logic)', 'matches': [[74, 80]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 48, 'text': 'tree_sitter_spec = importlib.util.find_spec("tree_sitter")', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 158, 'text': 'from tree_sitter_analyzer.project_detector import detect_project_root', 'matches': [[51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 185, 'text': 'ImportError("Missing dependency"),', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 198, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 200, 'text': 'from tree_sitter_analyzer.utils import setup_logger', 'matches': [[40, 46]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 303, 'text': '__import__(dep)', 'matches': [[18, 24]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_startup_script.py', 'line': 305, 'text': 'except ImportError:', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 7, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 11, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 12, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 13, 'text': 'from tree_sitter_analyzer.security import SecurityValidator', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 39, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 99, 'text': '(r"import\\s+[\\w.]+", True), # Safe import pattern', 'matches': [[15, 21], [48, 54]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_mcp_integration.py', 'line': 267, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 11, 'text': 'from unittest.mock import AsyncMock, Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 15, 'text': 'from tree_sitter_analyzer.mcp.tools.table_format_tool import TableFormatTool', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 308, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_suppress_output_feature.py', 'line': 331, 'text': 'from tree_sitter_analyzer.mcp.server import TreeSitterAnalyzerMCPServer', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_regex_checker.py', 'line': 6, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_regex_checker.py', 'line': 8, 'text': 'from tree_sitter_analyzer.security import RegexSafetyChecker', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 10, 'text': 'import csv', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 11, 'text': 'import io', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 12, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 13, 'text': 'from typing import Any', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 14, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 16, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 18, 'text': '# Import the module under test', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 19, 'text': 'from tree_sitter_analyzer.table_formatter import TableFormatter, create_table_formatter', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 35, 'text': '"imports": [', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 36, 'text': '{"statement": "import java.util.List;"},', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 37, 'text': '{"statement": "import java.util.Map;"},', 'matches': [[27, 33]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 94, 'text': '"imports": [],', 'matches': [[9, 15]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 161, 'text': '# Verify imports section', 'matches': [[17, 23]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 162, 'text': 'assert "## Imports" in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 163, 'text': 'assert "import java.util.List;" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 164, 'text': 'assert "import java.util.Map;" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 206, 'text': 'def test_format_structure_full_no_imports(', 'matches': [[38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 209, 'text': '"""Test full format without imports"""', 'matches': [[36, 42]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 211, 'text': 'data["imports"] = []', 'matches': [[14, 20]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 216, 'text': '# Should not include imports section', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 217, 'text': 'assert "## Imports" not in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 501, 'text': '"imports": None,', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 543, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 641, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_table_formatter.py', 'line': 642, 'text': '{"statement": f"import com.example.Import{i};"} for i in range(50)', 'matches': [[32, 38], [51, 57]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 6, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 8, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 10, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 11, 'text': 'from tree_sitter_analyzer.security import SecurityValidator', 'matches': [[35, 41]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_security\\test_validator.py', 'line': 24, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 10, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 11, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 15, 'text': 'from tree_sitter_analyzer.core.query_service import QueryService', 'matches': [[45, 51]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 16, 'text': 'from tree_sitter_analyzer.language_detector import detect_language_from_file', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.tools.query_tool import QueryTool', 'matches': [[47, 53]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 132, 'text': 'from typing import Optional, List', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 133, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 227, 'text': 'import shutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 429, 'text': 'import time', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 531, 'text': 'import os', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_tree_sitter_integration.py', 'line': 533, 'text': 'import psutil', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 9, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 11, 'text': 'from tree_sitter_analyzer.formatters.base_formatter import BaseTableFormatter', 'matches': [[52, 58]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 12, 'text': 'from tree_sitter_analyzer.formatters.typescript_formatter import (', 'matches': [[58, 64]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 135, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 139, 'text': '"is_type_import": False,', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 145, 'text': '"is_type_import": True,', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 204, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 219, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 424, 'text': 'assert formatter._get_element_type_name({"element_type": "import"}) == "Import"', 'matches': [[66, 72], [80, 86]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 466, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 476, 'text': 'def test_format_with_imports(self, formatter, sample_data):', 'matches': [[25, 31]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 477, 'text': '"""Test formatting with imports section"""', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 480, 'text': 'assert "## Imports" in result', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 482, 'text': 'assert "import Component from react;" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 483, 'text': 'assert "import type User from ./types;" in result', 'matches': [[16, 22]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_formatter.py', 'line': 513, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 9, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 11, 'text': 'from unittest.mock import Mock, patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 15, 'text': 'from tree_sitter_analyzer.formatters.formatter_factory import TableFormatterFactory', 'matches': [[55, 61]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 16, 'text': 'from tree_sitter_analyzer.language_detector import detector', 'matches': [[44, 50]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 17, 'text': 'from tree_sitter_analyzer.language_loader import get_loader', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 18, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import TypeScriptPlugin', 'matches': [[54, 60]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 19, 'text': 'from tree_sitter_analyzer.plugins.manager import PluginManager', 'matches': [[42, 48]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 155, 'text': '"imports": [', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 159, 'text': '"is_type_import": False,', 'matches': [[29, 35]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 244, 'text': 'common_queries = ["function", "class", "variable", "import", "export"]', 'matches': [[60, 66]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 288, 'text': 'from tree_sitter_analyzer.core.analysis_engine import AnalysisRequest', 'matches': [[63, 69]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 304, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import (', 'matches': [[62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 311, 'text': 'extractor.source_code = "import React from \'react\'; export default Component;"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 323, 'text': 'extractor.source_code = "import { Component } from \'@angular/core\';"', 'matches': [[33, 39]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 329, 'text': 'from tree_sitter_analyzer.languages.typescript_plugin import (', 'matches': [[62, 68]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 370, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_typescript_integration.py', 'line': 448, 'text': '"imports": [],', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 9, 'text': 'import asyncio', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 10, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 11, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 15, 'text': 'from tree_sitter_analyzer.exceptions import SecurityError', 'matches': [[37, 43]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 16, 'text': 'from tree_sitter_analyzer.mcp.tools.universal_analyze_tool import UniversalAnalyzeTool', 'matches': [[59, 65]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 17, 'text': 'from tree_sitter_analyzer.mcp.utils.error_handler import AnalysisError', 'matches': [[50, 56]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 99, 'text': '("incomplete_import.py", "import"),', 'matches': [[25, 31], [38, 44]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 294, 'text': 'import gc', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 372, 'text': 'import os', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 373, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 374, 'text': 'from typing import List, Dict, Optional', 'matches': [[12, 18]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 421, 'text': 'import java.util.ArrayList;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_universal_analyze_tool_extended.py', 'line': 422, 'text': 'import java.util.List;', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 8, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 9, 'text': 'import sys', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 10, 'text': 'from io import StringIO', 'matches': [[8, 14]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 12, 'text': '# Mock imports removed - not used in this file', 'matches': [[7, 13]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 13, 'text': 'import pytest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 18, 'text': '# Import the module under test', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 19, 'text': '# Import LoggingContext - it should be available', 'matches': [[2, 8]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils.py', 'line': 20, 'text': 'from tree_sitter_analyzer.utils import (', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 6, 'text': 'import logging', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 7, 'text': 'import tempfile', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 8, 'text': 'import unittest', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 9, 'text': 'import unittest.mock', 'matches': [[0, 6]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 10, 'text': 'from pathlib import Path', 'matches': [[13, 19]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 11, 'text': 'from unittest.mock import patch', 'matches': [[19, 25]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 13, 'text': 'from tree_sitter_analyzer.utils import (', 'matches': [[32, 38]]}, {'file': 'C:\\git-public\\tree-sitter-analyzer\\tests\\test_utils_extended.py', 'line': 36, 'text': 'import shutil', 'matches': [[8, 14]]}]
result.meta.rg_elapsed_ms: 12624
result.meta.fd_elapsed_ms: 298

=== MCP-020 ===
(同一)

=== MCP-E001 ===
result.message: Invalid file path: Absolute path must be within project directory
result.stdout: None
result.stderr: None
result.error: Exception

=== MCP-E002 ===
result.file_path: examples/Sample.java
result.success: False
result.message: None
result.stdout: None
result.stderr: None
result.error: Security validation failed: Absolute path must be within project directory

=== MCP-E003 ===
result.message: Operation failed: Invalid root 'C:\git-public\tree-sitter-analyzer\nonexistent\directory': Absolute path must be within project directory
result.stdout: None
result.stderr: None
result.error: Exception
